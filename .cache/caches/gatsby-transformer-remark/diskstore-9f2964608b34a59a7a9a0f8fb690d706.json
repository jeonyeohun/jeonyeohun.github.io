{"expireTime":9007200877354939000,"key":"transformer-remark-markdown-html-ast-ca9471701e9e79a7c49251c6bab78f6a-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.acmicpc.net/problem/1655"},"children":[{"type":"text","value":"https://www.acmicpc.net/problem/1655","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":38,"offset":38}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"문제","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%AC%B8%EC%A0%9C","aria-label":"문제 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":82},"end":{"line":4,"column":6,"offset":84}}}],"position":{"start":{"line":4,"column":1,"offset":79},"end":{"line":4,"column":6,"offset":84}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":88},"end":{"line":6,"column":5,"offset":90}}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":6,"column":7,"offset":92}}},{"type":"raw","value":"<br>","position":{"start":{"line":6,"column":7,"offset":92},"end":{"line":6,"column":11,"offset":96}}},{"type":"text","value":"\n수빈이는 동생에게 “가운데를 말해요” 게임을 가르쳐주고 있다. 수빈이가 정수를 하나씩 외칠때마다 동생은 지금까지 수빈이가 말한 수 중에서 중간값을 말해야 한다. 만약, 그동안 수빈이가 외친 수의 개수가 짝수개라면 중간에 있는 두 수 중에서 작은 수를 말해야 한다.","position":{"start":{"line":6,"column":11,"offset":96},"end":{"line":7,"column":148,"offset":244}}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":7,"column":148,"offset":244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"예를 들어 수빈이가 동생에게 1, 5, 2, 10, -99, 7, 5를 순서대로 외쳤다고 하면, 동생은 1, 1, 2, 2, 2, 2, 5를 차례대로 말해야 한다. 수빈이가 외치는 수가 주어졌을 때, 동생이 말해야 하는 수를 구하는 프로그램을 작성하시오.","position":{"start":{"line":9,"column":1,"offset":246},"end":{"line":9,"column":143,"offset":388}}}],"position":{"start":{"line":9,"column":1,"offset":246},"end":{"line":9,"column":143,"offset":388}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"입력","position":{"start":{"line":11,"column":3,"offset":392},"end":{"line":11,"column":5,"offset":394}}}],"position":{"start":{"line":11,"column":1,"offset":390},"end":{"line":11,"column":7,"offset":396}}},{"type":"raw","value":"<br>","position":{"start":{"line":11,"column":7,"offset":396},"end":{"line":11,"column":11,"offset":400}}},{"type":"text","value":"\n첫째 줄에는 수빈이가 외치는 정수의 개수 N이 주어진다. N은 1보다 크거나 같고, 100,000보다 작거나 같은 자연수이다. 그 다음 N줄에 걸쳐서 수빈이가 외치는 정수가 차례대로 주어진다. 정수는 -10,000보다 크거나 같고, 10,000보다 작거나 같다.","position":{"start":{"line":11,"column":11,"offset":400},"end":{"line":12,"column":147,"offset":547}}}],"position":{"start":{"line":11,"column":1,"offset":390},"end":{"line":12,"column":147,"offset":547}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"출력","position":{"start":{"line":14,"column":3,"offset":551},"end":{"line":14,"column":5,"offset":553}}}],"position":{"start":{"line":14,"column":1,"offset":549},"end":{"line":14,"column":7,"offset":555}}},{"type":"raw","value":"<br>","position":{"start":{"line":14,"column":7,"offset":555},"end":{"line":14,"column":11,"offset":559}}},{"type":"text","value":"\n한 줄에 하나씩 N줄에 걸쳐 수빈이의 동생이 말해야하는 수를 순서대로 출력한다.","position":{"start":{"line":14,"column":11,"offset":559},"end":{"line":15,"column":45,"offset":604}}}],"position":{"start":{"line":14,"column":1,"offset":549},"end":{"line":15,"column":45,"offset":604}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"풀이","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%ED%92%80%EC%9D%B4","aria-label":"풀이 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"풀이","position":{"start":{"line":17,"column":4,"offset":609},"end":{"line":17,"column":6,"offset":611}}}],"position":{"start":{"line":17,"column":1,"offset":606},"end":{"line":17,"column":6,"offset":611}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"힙소트를 계속 해주면서 중간 인덱스를 참조하는 문제인 줄 알았는데 완전히 낭패였다. 시간초과가 계속 나서 어떻게 해결해야할지 고민하다 답이 안나오는 것 같아 구글링으로 도움을 받았다. 이 문제는 우선순위 큐 두개를 사용해서 push 와 pop만을 사용해서 해결해야 했다. Heapsort는 Օ(nlogn) 으로 절대로 느리지는 않지만, 이 문제에는 적합하지 않다. push 와 pop 은 Օ(lg n)의 시간복잡도를 가지는데, 트리의 높이만큼 부모노드와 자식노드의 비교 및 교환을 수행하기 때문이다.","position":{"start":{"line":19,"column":1,"offset":613},"end":{"line":19,"column":280,"offset":892}}}],"position":{"start":{"line":19,"column":1,"offset":613},"end":{"line":19,"column":280,"offset":892}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"두 개의 우선순위 큐를 사용해서 문제를 해결하는 방법은 다음과 같다.","position":{"start":{"line":21,"column":1,"offset":894},"end":{"line":21,"column":39,"offset":932}}}],"position":{"start":{"line":21,"column":1,"offset":894},"end":{"line":21,"column":39,"offset":932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"최대 우선순위 큐, 최소 우선순위 큐 두 개를 준비한다.","position":{"start":{"line":23,"column":4,"offset":937},"end":{"line":23,"column":35,"offset":968}}}],"position":{"start":{"line":23,"column":1,"offset":934},"end":{"line":23,"column":35,"offset":968}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"최소 우선순위 큐는 항상 최대 우선순위 큐 보다 큰 값을 가진다.","position":{"start":{"line":24,"column":4,"offset":972},"end":{"line":24,"column":40,"offset":1008}}}],"position":{"start":{"line":24,"column":1,"offset":969},"end":{"line":24,"column":40,"offset":1008}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"최대 우선순위 큐는 항상 최소 우선순위 큐 보다 같거나 많은 노드를 가진다.","position":{"start":{"line":25,"column":4,"offset":1012},"end":{"line":25,"column":46,"offset":1054}}}],"position":{"start":{"line":25,"column":1,"offset":1009},"end":{"line":25,"column":46,"offset":1054}}},{"type":"text","value":"\n"}],"position":{"start":{"line":23,"column":1,"offset":934},"end":{"line":25,"column":46,"offset":1054}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이 구조를 유지하게되면, 어떤 값이 들어왔을 때, 총 노드의 개수가 짝수일 때는 자연스럽게 최대 우선순위 큐에 값을 넣게 된다. 이 때 최댓값이 큐의 top의 위치하게 되기 때문에, 최소 우선순위 큐의 top에 있는 노드의 값과 비교해주어야할 필요가 생긴다. 왜냐하면 최대 우선순위 큐가 최소 우선순위 큐보다 하나 더 많은 노드를 갖게하는 것이 중간 값을 최대 큐에 저장하기 위해서인데, 만약 새로 들어온 값이 최소 큐의 top보다 크다면, 현재 최소 큐의 top에 있는 값이 중간값이 되기 때문이다. 이 구조를 유지하기 위해서 양쪽 노드를 조건에 따라 swap 하면서 최대 큐의 top을 계속 출력해주면 중간값을 지속적으로 얻을 수 있다.","position":{"start":{"line":27,"column":1,"offset":1056},"end":{"line":27,"column":359,"offset":1414}}}],"position":{"start":{"line":27,"column":1,"offset":1056},"end":{"line":27,"column":359,"offset":1414}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"코드","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%BD%94%EB%93%9C","aria-label":"코드 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"코드","position":{"start":{"line":29,"column":4,"offset":1419},"end":{"line":29,"column":6,"offset":1421}}}],"position":{"start":{"line":29,"column":1,"offset":1416},"end":{"line":29,"column":6,"offset":1421}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;queue></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;functional></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> N<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    priority_queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> less<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> pqMax<span class=\"token punctuation\">;</span>\n    priority_queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> greater<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">>></span> pqMin<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>N<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pqMax<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> pqMax<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> pqMin<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 무조건 최대 큐에 들어가야하는 경우</span>\n            pqMax<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            pqMin<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pqMax<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>pqMin<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pqMin<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> pqMax<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 최대 큐는 항상 최소 작거나 같은 값을 가져야 한다.</span>\n                <span class=\"token keyword\">int</span> tempMax <span class=\"token operator\">=</span> pqMax<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">int</span> tempMin <span class=\"token operator\">=</span> pqMin<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                pqMax<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                pqMin<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                pqMax<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>tempMin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                pqMin<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>tempMax<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> pqMax<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":31,"column":1,"offset":1423},"end":{"line":71,"column":4,"offset":2333}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":72,"column":1,"offset":2334}}}}