{"expireTime":9007200877354306000,"key":"transformer-remark-markdown-html-ast-d88791d856e1a099b32c10627ab3de2c-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.acmicpc.net/problem/1406"},"children":[{"type":"text","value":"https://www.acmicpc.net/problem/1406","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":38,"offset":38}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"문제","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%AC%B8%EC%A0%9C","aria-label":"문제 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":82},"end":{"line":4,"column":6,"offset":84}}}],"position":{"start":{"line":4,"column":1,"offset":79},"end":{"line":4,"column":6,"offset":84}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":88},"end":{"line":6,"column":5,"offset":90}}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":6,"column":7,"offset":92}}},{"type":"raw","value":"<br>","position":{"start":{"line":6,"column":7,"offset":92},"end":{"line":6,"column":11,"offset":96}}},{"type":"text","value":"\n한 줄로 된 간단한 에디터를 구현하려고 한다. 이 편집기는 영어 소문자만을 기록할 수 있는 편집기로, 최대 600,000글자까지 입력할 수 있다.","position":{"start":{"line":6,"column":11,"offset":96},"end":{"line":7,"column":82,"offset":178}}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":7,"column":82,"offset":178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이 편집기에는 ‘커서’라는 것이 있는데, 커서는 문장의 맨 앞(첫 번째 문자의 왼쪽), 문장의 맨 뒤(마지막 문자의 오른쪽), 또는 문장 중간 임의의 곳(모든 연속된 두 문자 사이)에 위치할 수 있다. 즉 길이가 L인 문자열이 현재 편집기에 입력되어 있으면, 커서가 위치할 수 있는 곳은 L+1가지 경우가 있다.","position":{"start":{"line":9,"column":1,"offset":180},"end":{"line":9,"column":175,"offset":354}}}],"position":{"start":{"line":9,"column":1,"offset":180},"end":{"line":9,"column":175,"offset":354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"초기에 편집기에 입력되어 있는 문자열이 주어지고, 그 이후 입력한 명령어가 차례로 주어졌을 때, 모든 명령어를 수행하고 난 후 편집기에 입력되어 있는 문자열을 구하는 프로그램을 작성하시오. 단, 명령어가 수행되기 전에 커서는 문장의 맨 뒤에 위치하고 있다고 한다.","position":{"start":{"line":11,"column":1,"offset":356},"end":{"line":11,"column":148,"offset":503}}}],"position":{"start":{"line":11,"column":1,"offset":356},"end":{"line":11,"column":148,"offset":503}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"입력","position":{"start":{"line":13,"column":3,"offset":507},"end":{"line":13,"column":5,"offset":509}}}],"position":{"start":{"line":13,"column":1,"offset":505},"end":{"line":13,"column":7,"offset":511}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":7,"offset":511},"end":{"line":13,"column":11,"offset":515}}},{"type":"text","value":"\n첫째 줄에는 초기에 편집기에 입력되어 있는 문자열이 주어진다. 이 문자열은 길이가 N이고, 영어 소문자로만 이루어져 있으며, 길이는 100,000을 넘지 않는다. 둘째 줄에는 입력할 명령어의 개수를 나타내는 정수 M(1 ≤ M ≤ 500,000)이 주어진다. 셋째 줄부터 M개의 줄에 걸쳐 입력할 명령어가 순서대로 주어진다. 명령어는 위의 네 가지 중 하나의 형태로만 주어진다.","position":{"start":{"line":13,"column":11,"offset":515},"end":{"line":14,"column":212,"offset":727}}}],"position":{"start":{"line":13,"column":1,"offset":505},"end":{"line":14,"column":212,"offset":727}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"출력","position":{"start":{"line":16,"column":3,"offset":731},"end":{"line":16,"column":5,"offset":733}}}],"position":{"start":{"line":16,"column":1,"offset":729},"end":{"line":16,"column":7,"offset":735}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":7,"offset":735},"end":{"line":16,"column":11,"offset":739}}},{"type":"text","value":"\n첫째 줄에 모든 명령어를 수행하고 난 후 편집기에 입력되어 있는 문자열을 출력한다.","position":{"start":{"line":16,"column":11,"offset":739},"end":{"line":17,"column":47,"offset":786}}}],"position":{"start":{"line":16,"column":1,"offset":729},"end":{"line":17,"column":47,"offset":786}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"풀이","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%ED%92%80%EC%9D%B4","aria-label":"풀이 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"풀이","position":{"start":{"line":19,"column":4,"offset":791},"end":{"line":19,"column":6,"offset":793}}}],"position":{"start":{"line":19,"column":1,"offset":788},"end":{"line":19,"column":6,"offset":793}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"리스트를 사용하면 쉽게 풀 수 있는 문제였는데, 처음에 문제를 잘못잀어서 커서가 항상 맨 앞에 위치한 채로 시작한다고 생각했다. 문제를 잘 읽는 것이 역시 중요하다. 한 가지 주의해야할 부분은 iterator 타입에서 erase 메서드를 사용할 때 반환되는 포인터를 반드시 저장해야한다는 것이다. iterator 변수의 포인터를 업데이트 하지 않으면 삭제 후 존재하지 않는 위치를 참조하게 되면서 에러가 난다. erase 메서드는 원소 삭제 후 바로 다음 iterator 를 반환한다.","position":{"start":{"line":21,"column":1,"offset":795},"end":{"line":21,"column":272,"offset":1066}}}],"position":{"start":{"line":21,"column":1,"offset":795},"end":{"line":21,"column":272,"offset":1066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"코드","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%BD%94%EB%93%9C","aria-label":"코드 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"코드","position":{"start":{"line":23,"column":4,"offset":1071},"end":{"line":23,"column":6,"offset":1073}}}],"position":{"start":{"line":23,"column":1,"offset":1068},"end":{"line":23,"column":6,"offset":1073}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;list></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n\nlist<span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span><span class=\"token operator\">></span> editor<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> M<span class=\"token punctuation\">;</span>\n    string str<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> str<span class=\"token punctuation\">;</span>\n    editor<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    list<span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span><span class=\"token operator\">></span><span class=\"token operator\">::</span>iterator iter <span class=\"token operator\">=</span> editor<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    cin <span class=\"token operator\">>></span> M<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>M<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">char</span> op<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">char</span> c<span class=\"token punctuation\">;</span>\n        cin <span class=\"token operator\">>></span> op<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'L'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>iter <span class=\"token operator\">!=</span> editor<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                iter<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'D'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>iter <span class=\"token operator\">!=</span> editor<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                iter<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'B'</span><span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>iter <span class=\"token operator\">!=</span> editor<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                iter <span class=\"token operator\">=</span> editor<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>iter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'P'</span><span class=\"token operator\">:</span>\n            cin <span class=\"token operator\">>></span> c<span class=\"token punctuation\">;</span>\n            editor<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>iter<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> e <span class=\"token operator\">:</span> editor<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%c\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":25,"column":1,"offset":1075},"end":{"line":75,"column":4,"offset":1943}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":76,"column":1,"offset":1944}}}}