{"expireTime":9007200877354938000,"key":"transformer-remark-markdown-ast-aad2d6c7d62d8bd5fa5335b1f264adcf-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.acmicpc.net/problem/3079","children":[{"type":"text","value":"https://www.acmicpc.net/problem/3079","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":38,"offset":38},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":82},"end":{"line":4,"column":6,"offset":84},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":79},"end":{"line":4,"column":6,"offset":84},"indent":[]},"data":{"id":"문제","htmlAttributes":{"id":"문제"},"hProperties":{"id":"문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":88},"end":{"line":6,"column":5,"offset":90},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":6,"column":7,"offset":92},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":6,"column":7,"offset":92},"end":{"line":6,"column":11,"offset":96},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":6,"column":11,"offset":96},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"N×N 게임판에 수가 적혀져 있다. 이 게임의 목표는 가장 왼쪽 위 칸에서 가장 오른쪽 아래 칸으로 규칙에 맞게 점프를 해서 가는 것이다.","position":{"start":{"line":8,"column":1,"offset":98},"end":{"line":8,"column":78,"offset":175},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":98},"end":{"line":8,"column":78,"offset":175},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"각 칸에 적혀있는 수는 현재 칸에서 갈 수 있는 거리를 의미한다. 반드시 오른쪽이나 아래쪽으로만 이동해야 한다. 0은 더 이상 진행을 막는 종착점이며, 항상 현재 칸에 적혀있는 수만큼 오른쪽이나 아래로 가야 한다. 한 번 점프를 할 때, 방향을 바꾸면 안 된다. 즉, 한 칸에서 오른쪽으로 점프를 하거나, 아래로 점프를 하는 두 경우만 존재한다.","position":{"start":{"line":10,"column":1,"offset":177},"end":{"line":10,"column":194,"offset":370},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":177},"end":{"line":10,"column":194,"offset":370},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"가장 왼쪽 위 칸에서 가장 오른쪽 아래 칸으로 규칙에 맞게 이동할 수 있는 경로의 개수를 구하는 프로그램을 작성하시오.","position":{"start":{"line":12,"column":1,"offset":372},"end":{"line":12,"column":67,"offset":438},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":372},"end":{"line":12,"column":67,"offset":438},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"입력","position":{"start":{"line":14,"column":3,"offset":442},"end":{"line":14,"column":5,"offset":444},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":440},"end":{"line":14,"column":7,"offset":446},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":14,"column":7,"offset":446},"end":{"line":14,"column":11,"offset":450},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":440},"end":{"line":14,"column":11,"offset":450},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"첫째 줄에 게임 판의 크기 N (4 ≤ N ≤ 100)이 주어진다. 그 다음 N개 줄에는 각 칸에 적혀져 있는 수가 N개씩 주어진다. 칸에 적혀있는 수는 0보다 크거나 같고, 9보다 작거나 같은 정수이며, 가장 오른쪽 아래 칸에는 항상 0이 주어진다.","position":{"start":{"line":16,"column":1,"offset":452},"end":{"line":16,"column":141,"offset":592},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":452},"end":{"line":16,"column":141,"offset":592},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"출력","position":{"start":{"line":18,"column":3,"offset":596},"end":{"line":18,"column":5,"offset":598},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":594},"end":{"line":18,"column":7,"offset":600},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":18,"column":7,"offset":600},"end":{"line":18,"column":11,"offset":604},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":594},"end":{"line":18,"column":11,"offset":604},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"가장 왼쪽 위 칸에서 가장 오른쪽 아래 칸으로 문제의 규칙에 맞게 갈 수 있는 경로의 개수를 출력한다. 경로의 개수는 263-1보다 작거나 같다.","position":{"start":{"line":20,"column":1,"offset":606},"end":{"line":20,"column":82,"offset":687},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":606},"end":{"line":20,"column":82,"offset":687},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이","position":{"start":{"line":22,"column":4,"offset":692},"end":{"line":22,"column":6,"offset":694},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":689},"end":{"line":22,"column":6,"offset":694},"indent":[]},"data":{"id":"풀이","htmlAttributes":{"id":"풀이"},"hProperties":{"id":"풀이","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"다이나믹 프로그래밍으로 풀 수 있는 문제였다. 어떤 지점 ","position":{"start":{"line":24,"column":1,"offset":696},"end":{"line":24,"column":33,"offset":728},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">[i][j]</code>","position":{"start":{"line":24,"column":33,"offset":728},"end":{"line":24,"column":41,"offset":736},"indent":[]}},{"type":"text","value":" 로 갈 수 있는 경우의 수는 ","position":{"start":{"line":24,"column":41,"offset":736},"end":{"line":24,"column":58,"offset":753},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">[i][j]</code>","position":{"start":{"line":24,"column":58,"offset":753},"end":{"line":24,"column":66,"offset":761},"indent":[]}},{"type":"text","value":" 로 갈 수 있는 지점들의 경우의 수를 합한 것과 같다는 점을 이용했다. 예를 들어 다음과 같이 입력이 주어졌다면,","position":{"start":{"line":24,"column":66,"offset":761},"end":{"line":24,"column":130,"offset":825},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":696},"end":{"line":24,"column":130,"offset":825},"indent":[]}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">1</span>\n<span class=\"token number\">2</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span>\n<span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span></code></pre></div>","position":{"start":{"line":26,"column":1,"offset":827},"end":{"line":30,"column":4,"offset":855},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"(2, 1) 지점으로 갈 수 있는 경우의 수는 우측 라인에서 자신으로 올 수 있는 (2, 0) 경로의 경우의 수, 그리고 위쪽 라인에서 자신에게 올 수 있는 (0, 1) 과 (1, 1) 의 경우의 수를 모두 합한 것과 같다. 좌측과 아랫쪽은 아직 경우의 수를 계산하지 않은 영역이기 때문에 확인할 필요도 없고 확인할 수도 없다. 좌측, 아랫쪽 영역을 고려하지 않아도 되는 이유는 어차피 점프는 시작 위치로부터 우측방향이나 아랫쪽 방향으로 점프하는 두 가지 선택지만 존재하기 때문에 고려하지 않아도 답을 찾을 수 있다.","position":{"start":{"line":32,"column":1,"offset":857},"end":{"line":32,"column":290,"offset":1146},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":857},"end":{"line":32,"column":290,"offset":1146},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"따라서 각 행과 열의 시작지점부터 경우의 수를 알고자하는 지점까지 오면서 점프를 통해 경우의 수를 알고자하는 지점까지 올 수 있는 경로가 있다면 해당경로까지의 경우의 수를 카운터 변수에 담고 위쪽과 왼쪽을 합쳐주는 것으로 현재 필요한 경우의 수를 알아냈다.","position":{"start":{"line":34,"column":1,"offset":1148},"end":{"line":34,"column":144,"offset":1291},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1148},"end":{"line":34,"column":144,"offset":1291},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"모든 좌표의 시작은 1로 지정했다. 0부터 시작하게 되면 outofbound 에 대한 예외처리를 해주어야 하기 때문에, 모든 0 이 들어간 좌표는 0으로 초기화 되고, 시작점은 언제나 하나의 경우의 수로 도착할 수 있기 때문에 1로 설정해주었다.","position":{"start":{"line":36,"column":1,"offset":1293},"end":{"line":36,"column":138,"offset":1430},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1293},"end":{"line":36,"column":138,"offset":1430},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"코드 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"코드","position":{"start":{"line":38,"column":4,"offset":1435},"end":{"line":38,"column":6,"offset":1437},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1432},"end":{"line":38,"column":6,"offset":1437},"indent":[]},"data":{"id":"코드","htmlAttributes":{"id":"코드"},"hProperties":{"id":"코드","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> ull<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    ios_base<span class=\"token operator\">::</span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> N<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> map<span class=\"token punctuation\">[</span><span class=\"token number\">101</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">101</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    ull dp<span class=\"token punctuation\">[</span><span class=\"token number\">101</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">101</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    cin <span class=\"token operator\">>></span> N<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> N<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> N<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            cin <span class=\"token operator\">>></span> map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> N<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> N<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">{</span>\n                ull rowCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                ull colCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> row <span class=\"token operator\">&lt;</span> i<span class=\"token punctuation\">;</span> row<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> i <span class=\"token operator\">-</span> row<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{</span>\n                        rowCount <span class=\"token operator\">+=</span> dp<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> col <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> col <span class=\"token operator\">&lt;</span> j<span class=\"token punctuation\">;</span> col<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> j <span class=\"token operator\">-</span> col<span class=\"token punctuation\">)</span>\n                    <span class=\"token punctuation\">{</span>\n                        colCount <span class=\"token operator\">+=</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">}</span>\n\n                dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rowCount <span class=\"token operator\">+</span> colCount<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> dp<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":40,"column":1,"offset":1439},"end":{"line":97,"column":4,"offset":2598},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":98,"column":1,"offset":2599}}}}