{"expireTime":9007200877354938000,"key":"transformer-remark-markdown-ast-a9b635bcb7907dc0f4d956cd158e272e-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.acmicpc.net/problem/14502","children":[{"type":"text","value":"https://www.acmicpc.net/problem/14502","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":39,"offset":39},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":79,"offset":79},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":79,"offset":79},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":84},"end":{"line":4,"column":6,"offset":86},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":81},"end":{"line":4,"column":6,"offset":86},"indent":[]},"data":{"id":"문제","htmlAttributes":{"id":"문제"},"hProperties":{"id":"문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":90},"end":{"line":6,"column":5,"offset":92},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":88},"end":{"line":6,"column":7,"offset":94},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":6,"column":7,"offset":94},"end":{"line":6,"column":11,"offset":98},"indent":[]}},{"type":"text","value":"\n인체에 치명적인 바이러스를 연구하던 연구소에서 바이러스가 유출되었다. 다행히 바이러스는 아직 퍼지지 않았고, 바이러스의 확산을 막기 위해서 연구소에 벽을 세우려고 한다.","position":{"start":{"line":6,"column":11,"offset":98},"end":{"line":7,"column":95,"offset":193},"indent":[1]}}],"position":{"start":{"line":6,"column":1,"offset":88},"end":{"line":7,"column":95,"offset":193},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"연구소는 크기가 N×M인 직사각형으로 나타낼 수 있으며, 직사각형은 1×1 크기의 정사각형으로 나누어져 있다. 연구소는 빈 칸, 벽으로 이루어져 있으며, 벽은 칸 하나를 가득 차지한다.","position":{"start":{"line":9,"column":1,"offset":195},"end":{"line":9,"column":104,"offset":298},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":195},"end":{"line":9,"column":104,"offset":298},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"일부 칸은 바이러스가 존재하며, 이 바이러스는 상하좌우로 인접한 빈 칸으로 모두 퍼져나갈 수 있다. 새로 세울 수 있는 벽의 개수는 3개이며, 꼭 3개를 세워야 한다.","position":{"start":{"line":11,"column":1,"offset":300},"end":{"line":11,"column":94,"offset":393},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":300},"end":{"line":11,"column":94,"offset":393},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"예를 들어, 아래와 같이 연구소가 생긴 경우를 살펴보자.","position":{"start":{"line":13,"column":1,"offset":395},"end":{"line":13,"column":32,"offset":426},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":395},"end":{"line":13,"column":32,"offset":426},"indent":[]}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token number\">2</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span>\n<span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span>\n<span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span></code></pre></div>","position":{"start":{"line":15,"column":1,"offset":428},"end":{"line":23,"column":4,"offset":536},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"이때, 0은 빈 칸, 1은 벽, 2는 바이러스가 있는 곳이다. 아무런 벽을 세우지 않는다면, 바이러스는 모든 빈 칸으로 퍼져나갈 수 있다.","position":{"start":{"line":25,"column":1,"offset":538},"end":{"line":25,"column":78,"offset":615},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":538},"end":{"line":25,"column":78,"offset":615},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"2행 1열, 1행 2열, 4행 6열에 벽을 세운다면 지도의 모양은 아래와 같아지게 된다.","position":{"start":{"line":27,"column":1,"offset":617},"end":{"line":27,"column":50,"offset":666},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":617},"end":{"line":27,"column":50,"offset":666},"indent":[]}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token number\">2</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span>\n<span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">0</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span>\n<span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span></code></pre></div>","position":{"start":{"line":29,"column":1,"offset":668},"end":{"line":37,"column":4,"offset":776},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"바이러스가 퍼진 뒤의 모습은 아래와 같아진다.","position":{"start":{"line":39,"column":1,"offset":778},"end":{"line":39,"column":26,"offset":803},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":778},"end":{"line":39,"column":26,"offset":803},"indent":[]}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token number\">2</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span>\n<span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">2</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span> <span class=\"token number\">2</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">2</span>\n<span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">1</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span>\n<span class=\"token number\">0</span> <span class=\"token number\">1</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span> <span class=\"token number\">0</span></code></pre></div>","position":{"start":{"line":41,"column":1,"offset":805},"end":{"line":49,"column":4,"offset":913},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"벽을 3개 세운 뒤, 바이러스가 퍼질 수 없는 곳을 안전 영역이라고 한다. 위의 지도에서 안전 영역의 크기는 27이다.","position":{"start":{"line":51,"column":1,"offset":915},"end":{"line":51,"column":67,"offset":981},"indent":[]}}],"position":{"start":{"line":51,"column":1,"offset":915},"end":{"line":51,"column":67,"offset":981},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"연구소의 지도가 주어졌을 때 얻을 수 있는 안전 영역 크기의 최댓값을 구하는 프로그램을 작성하시오.","position":{"start":{"line":53,"column":1,"offset":983},"end":{"line":53,"column":56,"offset":1038},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":983},"end":{"line":53,"column":56,"offset":1038},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"입력","position":{"start":{"line":55,"column":3,"offset":1042},"end":{"line":55,"column":5,"offset":1044},"indent":[]}}],"position":{"start":{"line":55,"column":1,"offset":1040},"end":{"line":55,"column":7,"offset":1046},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":55,"column":7,"offset":1046},"end":{"line":55,"column":11,"offset":1050},"indent":[]}},{"type":"text","value":"\n첫째 줄에 지도의 세로 크기 N과 가로 크기 M이 주어진다. (3 ≤ N, M ≤ 8)","position":{"start":{"line":55,"column":11,"offset":1050},"end":{"line":56,"column":49,"offset":1099},"indent":[1]}}],"position":{"start":{"line":55,"column":1,"offset":1040},"end":{"line":56,"column":49,"offset":1099},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"둘째 줄부터 N개의 줄에 지도의 모양이 주어진다. 0은 빈 칸, 1은 벽, 2는 바이러스가 있는 위치이다. 2의 개수는 2보다 크거나 같고, 10보다 작거나 같은 자연수이다.","position":{"start":{"line":58,"column":1,"offset":1101},"end":{"line":58,"column":98,"offset":1198},"indent":[]}}],"position":{"start":{"line":58,"column":1,"offset":1101},"end":{"line":58,"column":98,"offset":1198},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"빈 칸의 개수는 3개 이상이다.","position":{"start":{"line":60,"column":1,"offset":1200},"end":{"line":60,"column":18,"offset":1217},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":1200},"end":{"line":60,"column":18,"offset":1217},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"출력","position":{"start":{"line":62,"column":3,"offset":1221},"end":{"line":62,"column":5,"offset":1223},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":1219},"end":{"line":62,"column":7,"offset":1225},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":62,"column":7,"offset":1225},"end":{"line":62,"column":11,"offset":1229},"indent":[]}},{"type":"text","value":"\n첫째 줄에 얻을 수 있는 안전 영역의 최대 크기를 출력한다.","position":{"start":{"line":62,"column":11,"offset":1229},"end":{"line":63,"column":34,"offset":1263},"indent":[1]}}],"position":{"start":{"line":62,"column":1,"offset":1219},"end":{"line":63,"column":34,"offset":1263},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이","position":{"start":{"line":65,"column":4,"offset":1268},"end":{"line":65,"column":6,"offset":1270},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1265},"end":{"line":65,"column":6,"offset":1270},"indent":[]},"data":{"id":"풀이","htmlAttributes":{"id":"풀이"},"hProperties":{"id":"풀이","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"이 문제는 크게 세 영역으로 나누어서 해결할 수 있다.","position":{"start":{"line":67,"column":1,"offset":1272},"end":{"line":67,"column":31,"offset":1302},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1272},"end":{"line":67,"column":31,"offset":1302},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#1-벽-세우기","title":null,"children":[],"data":{"hProperties":{"aria-label":"1 벽 세우기 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"1. 벽 세우기","position":{"start":{"line":69,"column":5,"offset":1308},"end":{"line":69,"column":13,"offset":1316},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1304},"end":{"line":69,"column":13,"offset":1316},"indent":[]},"data":{"id":"1-벽-세우기","htmlAttributes":{"id":"1-벽-세우기"},"hProperties":{"id":"1-벽-세우기","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"벽을 세우기 위해서는 보드판의 빈 자리에 벽을 3개 세울 수 있는 가능한 모든 조합을 시도해보아야한다. 이를 위해서 나는 백트래킹 전략을 사용했다. 순열을 구하는 것 처럼 벽을 한개씩 놓아보고 벽이 세 개가 되면 곧바로 다음 단계로 넘어간다. 주의해야할 점은 모든 조합을 다 확인하려면 하나의 조합이 끝났을 때 해당 조합에 사용된 좌표위치를 다시 빈칸으로 만들어주어야한다.","position":{"start":{"line":71,"column":1,"offset":1318},"end":{"line":71,"column":209,"offset":1526},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":1318},"end":{"line":71,"column":209,"offset":1526},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#2-바이러스-전파하기","title":null,"children":[],"data":{"hProperties":{"aria-label":"2 바이러스 전파하기 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"2. 바이러스 전파하기","position":{"start":{"line":73,"column":5,"offset":1532},"end":{"line":73,"column":17,"offset":1544},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1528},"end":{"line":73,"column":17,"offset":1544},"indent":[]},"data":{"id":"2-바이러스-전파하기","htmlAttributes":{"id":"2-바이러스-전파하기"},"hProperties":{"id":"2-바이러스-전파하기","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"벽을 세 개 세운 보드판이 완성되면 바이러스를 전파시켜야 한다. 이 과정에서는 DFS를 사용했다. 4개 방향으로 이동하면서 방문한적이 없고 빈칸인 위치를 모두 바이러스에 감염된 상태로 만든다. 이 작업이 끝났을 때 남은 빈칸은 벽에 의해 보호되고 있는 안전영역들일 것이다. 여기서도 조심해야하는 부분이 두 가지 있는데, 전파한 바이러스를 초기화하지 않고 모든 가능한 바이러스를 감염시키는 것과 배열을 복사해서 사용해야 한다는 것이다. 만약 벽에 의해 보드판이 여러 구역으로 나뉜다면 바이러스가 여러 구역에 퍼져있을 수도 있기 때문에 하나의 바이러스만 확인하면 안되고 모든 가능한 바이러스를 다 DFS로 돌아야한다. 그리고 배열을 복사하지 않고 그대로 사용할 경우, 전파된 바이러스 때문에 기존 보드판이 손상되게 된다. ","position":{"start":{"line":75,"column":1,"offset":1546},"end":{"line":75,"column":403,"offset":1948},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">copy</code>","position":{"start":{"line":75,"column":403,"offset":1948},"end":{"line":75,"column":409,"offset":1954},"indent":[]}},{"type":"text","value":" 나 ","position":{"start":{"line":75,"column":409,"offset":1954},"end":{"line":75,"column":412,"offset":1957},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">memcopy</code>","position":{"start":{"line":75,"column":412,"offset":1957},"end":{"line":75,"column":421,"offset":1966},"indent":[]}},{"type":"text","value":" 같은 함수들을 통해 배열을 복사할 수 있지만 나는 배열의 최대 길이가 그다지 크기 않기도 하고, 안정성을 위해서 중첩 for 문을 통해 배열을 복사했다.","position":{"start":{"line":75,"column":421,"offset":1966},"end":{"line":75,"column":507,"offset":2052},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1546},"end":{"line":75,"column":507,"offset":2052},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#3-안전영역-파악하기","title":null,"children":[],"data":{"hProperties":{"aria-label":"3 안전영역 파악하기 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"3. 안전영역 파악하기","position":{"start":{"line":77,"column":5,"offset":2058},"end":{"line":77,"column":17,"offset":2070},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2054},"end":{"line":77,"column":17,"offset":2070},"indent":[]},"data":{"id":"3-안전영역-파악하기","htmlAttributes":{"id":"3-안전영역-파악하기"},"hProperties":{"id":"3-안전영역-파악하기","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"바이러스가 2번 단계에서 가능한 위치에 모두 전파되었기 때문에 전체 보드판을 순회하면서 여전히 빈칸으로 남아있는 좌표들의 개수를 세면 안전영역의 크기를 얻을 수 있다. 2번 단계의 작업이 각 벽을 세우는 경우의 수 마다 한번씩 수행되므로 한 경우의 수에 대한 계산이 끝날 때마다 더 큰 안전영역을 계속해서 업데이트 해준다.","position":{"start":{"line":79,"column":1,"offset":2072},"end":{"line":79,"column":181,"offset":2252},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":2072},"end":{"line":79,"column":181,"offset":2252},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"코드 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"코드","position":{"start":{"line":81,"column":4,"offset":2257},"end":{"line":81,"column":6,"offset":2259},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":2254},"end":{"line":81,"column":6,"offset":2259},"indent":[]},"data":{"id":"코드","htmlAttributes":{"id":"코드"},"hProperties":{"id":"코드","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">MAX_LEN</span> <span class=\"token expression\"><span class=\"token number\">8</span></span></span>\n\n<span class=\"token keyword\">bool</span> visited <span class=\"token punctuation\">[</span>MAX_LEN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>MAX_LEN<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> solution <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* 보드판을 넘어서는 좌표인지 확인하기 */</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">isOverBorder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> y <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> y <span class=\"token operator\">>=</span> row <span class=\"token operator\">||</span>  x <span class=\"token operator\">>=</span> col <span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* 빈칸 좌표인지 확인하기 */</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> target <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* 방문여부 초기화 */</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">clearVisited</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> row <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> col <span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* DFS로 가능한 모든 좌표를 바이러스로 만들기 */</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">spreadVirus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> board <span class=\"token punctuation\">[</span>MAX_LEN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>MAX_LEN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> xdir <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> ydir <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    visited<span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> newX <span class=\"token operator\">=</span> xdir<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> newY <span class=\"token operator\">=</span> ydir<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isOverBorder</span><span class=\"token punctuation\">(</span>newY<span class=\"token punctuation\">,</span> newX<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>visited<span class=\"token punctuation\">[</span>newY<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>newX<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isBlank</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span>newY<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>newX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            board<span class=\"token punctuation\">[</span>newY<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>newX<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">spreadVirus</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> newY<span class=\"token punctuation\">,</span> newX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* 현재 보드의 0의 개수 세기 */</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">getSafeSiteSize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> board <span class=\"token punctuation\">[</span>MAX_LEN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>MAX_LEN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> row <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> col <span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> ret<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* 배열 복사 */</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">copyArray</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span> src<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span> dest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> row <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> col <span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            dest<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> src<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/* 백트래킹을 사용해 모든 가능한 벽 시도 */</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">setWall</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> board <span class=\"token punctuation\">[</span>MAX_LEN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>MAX_LEN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 벽을 3개 세웠을 때 */</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">clearVisited</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> tempboard<span class=\"token punctuation\">[</span>MAX_LEN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>MAX_LEN<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">copyArray</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> tempboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 벽을 세운 임시보드 생성</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> row <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> col <span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tempboard<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">spreadVirus</span><span class=\"token punctuation\">(</span>tempboard<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 모든 가능한 바이러스 퍼뜨리기(DFS)</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        solution <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token function\">getSafeSiteSize</span><span class=\"token punctuation\">(</span>tempboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> solution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0의 개수를 세서 더 큰 값을 최종 값으로 저장</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> row <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> col <span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isOverBorder</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> board<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                board<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">setWall</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> size<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                board<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> map <span class=\"token punctuation\">[</span>MAX_LEN<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>MAX_LEN<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>row<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/* 좌표 리딩 */</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> row <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> col <span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/* 벽세우기 */</span>\n    <span class=\"token function\">setWall</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> solution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":83,"column":1,"offset":2261},"end":{"line":200,"column":4,"offset":4888},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":201,"column":1,"offset":4889}}}}