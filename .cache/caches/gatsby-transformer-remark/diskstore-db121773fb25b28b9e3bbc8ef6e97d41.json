{"expireTime":9007200877354938000,"key":"transformer-remark-markdown-ast-a58bd76a8b9f1b3d64aeb5f768516d06-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"개발자 면접질문과 답변들. 더 많은 내용은 깃허브 저장소에서 확인할 수 있습니다 (","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":49,"offset":49},"indent":[]}},{"type":"link","title":null,"url":"https://github.com/jeonyeohun/GetReadyForInterview","children":[{"type":"text","value":"https://github.com/jeonyeohun/GetReadyForInterview","position":{"start":{"line":2,"column":49,"offset":49},"end":{"line":2,"column":99,"offset":99},"indent":[]}}],"position":{"start":{"line":2,"column":49,"offset":49},"end":{"line":2,"column":99,"offset":99},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":2,"column":99,"offset":99},"end":{"line":2,"column":100,"offset":100},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":100,"offset":100},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":100,"offset":100},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#정렬-알고리즘","title":null,"children":[],"data":{"hProperties":{"aria-label":"정렬 알고리즘 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"정렬 알고리즘","position":{"start":{"line":4,"column":4,"offset":105},"end":{"line":4,"column":11,"offset":112},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":102},"end":{"line":4,"column":11,"offset":112},"indent":[]},"data":{"id":"정렬-알고리즘","htmlAttributes":{"id":"정렬-알고리즘"},"hProperties":{"id":"정렬-알고리즘","style":"position:relative;"}}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#버블정렬---on2","title":null,"children":[],"data":{"hProperties":{"aria-label":"버블정렬   on2 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"버블정렬 - O(N^2)","position":{"start":{"line":6,"column":4,"offset":117},"end":{"line":6,"column":17,"offset":130},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":114},"end":{"line":6,"column":17,"offset":130},"indent":[]},"data":{"id":"버블정렬---on2","htmlAttributes":{"id":"버블정렬---on2"},"hProperties":{"id":"버블정렬---on2","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">bubble_sort</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> list<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">swap</span> <span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":8,"column":1,"offset":132},"end":{"line":18,"column":4,"offset":366},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"로직(오름차순)","position":{"start":{"line":20,"column":3,"offset":370},"end":{"line":20,"column":11,"offset":378},"indent":[]}}],"position":{"start":{"line":20,"column":3,"offset":370},"end":{"line":20,"column":11,"offset":378},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"처음부터 n - i 까지 인접한 인덱스를 비교해서 값이 가장 큰 요소를 n - i 번째에 위치시킵니다.","position":{"start":{"line":21,"column":5,"offset":383},"end":{"line":21,"column":62,"offset":440},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":383},"end":{"line":21,"column":62,"offset":440},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":381},"end":{"line":21,"column":62,"offset":440},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"i는 정렬이 완료된 요소의 개수를 의미합니다.","position":{"start":{"line":22,"column":5,"offset":445},"end":{"line":22,"column":30,"offset":470},"indent":[]}}],"position":{"start":{"line":22,"column":5,"offset":445},"end":{"line":22,"column":30,"offset":470},"indent":[]}}],"position":{"start":{"line":22,"column":3,"offset":443},"end":{"line":22,"column":30,"offset":470},"indent":[]}}],"position":{"start":{"line":21,"column":3,"offset":381},"end":{"line":22,"column":30,"offset":470},"indent":[3]}}],"position":{"start":{"line":20,"column":1,"offset":368},"end":{"line":22,"column":30,"offset":470},"indent":[1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"시간복잡도","position":{"start":{"line":23,"column":3,"offset":473},"end":{"line":23,"column":8,"offset":478},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":473},"end":{"line":23,"column":8,"offset":478},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"N 개의 인덱스에 대해 최악의 경우 N 번 비교연산을 수행해야하기 때문에 O(N^2) 의 시간복잡도를 가집니다.","position":{"start":{"line":24,"column":5,"offset":483},"end":{"line":24,"column":67,"offset":545},"indent":[]}}],"position":{"start":{"line":24,"column":5,"offset":483},"end":{"line":24,"column":67,"offset":545},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":481},"end":{"line":24,"column":67,"offset":545},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":481},"end":{"line":24,"column":67,"offset":545},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":471},"end":{"line":24,"column":67,"offset":545},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"정렬 형태","position":{"start":{"line":25,"column":3,"offset":548},"end":{"line":25,"column":8,"offset":553},"indent":[]}}],"position":{"start":{"line":25,"column":3,"offset":548},"end":{"line":25,"column":8,"offset":553},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"안정 정렬입니다.","position":{"start":{"line":26,"column":5,"offset":558},"end":{"line":26,"column":14,"offset":567},"indent":[]}}],"position":{"start":{"line":26,"column":5,"offset":558},"end":{"line":26,"column":14,"offset":567},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":556},"end":{"line":26,"column":14,"offset":567},"indent":[]}}],"position":{"start":{"line":26,"column":3,"offset":556},"end":{"line":26,"column":14,"offset":567},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":546},"end":{"line":26,"column":14,"offset":567},"indent":[1]}}],"position":{"start":{"line":20,"column":1,"offset":368},"end":{"line":26,"column":14,"offset":567},"indent":[1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#선택정렬---on2","title":null,"children":[],"data":{"hProperties":{"aria-label":"선택정렬   on2 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"선택정렬 - O(N^2)","position":{"start":{"line":28,"column":4,"offset":572},"end":{"line":28,"column":17,"offset":585},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":569},"end":{"line":28,"column":17,"offset":585},"indent":[]},"data":{"id":"선택정렬---on2","htmlAttributes":{"id":"선택정렬---on2"},"hProperties":{"id":"선택정렬---on2","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">selection_sort</span> <span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> list<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":30,"column":1,"offset":587},"end":{"line":40,"column":4,"offset":809},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"로직(오름차순)","position":{"start":{"line":42,"column":3,"offset":813},"end":{"line":42,"column":11,"offset":821},"indent":[]}}],"position":{"start":{"line":42,"column":3,"offset":813},"end":{"line":42,"column":11,"offset":821},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"첫 인덱스부터 다른 모든 인덱스를 비교하면서 자신보다 작은 값이 나오면 자리를 교환해줍니다.","position":{"start":{"line":44,"column":5,"offset":827},"end":{"line":44,"column":56,"offset":878},"indent":[]}}],"position":{"start":{"line":44,"column":5,"offset":827},"end":{"line":44,"column":56,"offset":878},"indent":[]}}],"position":{"start":{"line":44,"column":3,"offset":825},"end":{"line":44,"column":56,"offset":878},"indent":[]}}],"position":{"start":{"line":44,"column":3,"offset":825},"end":{"line":44,"column":56,"offset":878},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":811},"end":{"line":45,"column":1,"offset":879},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"시간 복잡도","position":{"start":{"line":46,"column":3,"offset":882},"end":{"line":46,"column":9,"offset":888},"indent":[]}}],"position":{"start":{"line":46,"column":3,"offset":882},"end":{"line":46,"column":9,"offset":888},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"정렬 여부와 상관없 모든 인덱스와의 대소비교를 해야하므로 O(N^2) 의 시간복잡도를 가집니다.","position":{"start":{"line":48,"column":5,"offset":894},"end":{"line":48,"column":58,"offset":947},"indent":[]}}],"position":{"start":{"line":48,"column":5,"offset":894},"end":{"line":48,"column":58,"offset":947},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":892},"end":{"line":48,"column":58,"offset":947},"indent":[]}}],"position":{"start":{"line":48,"column":3,"offset":892},"end":{"line":48,"column":58,"offset":947},"indent":[]}}],"position":{"start":{"line":46,"column":1,"offset":880},"end":{"line":49,"column":1,"offset":948},"indent":[1,1,1]}},{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"정렬 형태","position":{"start":{"line":50,"column":3,"offset":951},"end":{"line":50,"column":8,"offset":956},"indent":[]}}],"position":{"start":{"line":50,"column":3,"offset":951},"end":{"line":50,"column":8,"offset":956},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"불안정 정렬입니다.","position":{"start":{"line":52,"column":5,"offset":962},"end":{"line":52,"column":15,"offset":972},"indent":[]}}],"position":{"start":{"line":52,"column":5,"offset":962},"end":{"line":52,"column":15,"offset":972},"indent":[]}}],"position":{"start":{"line":52,"column":3,"offset":960},"end":{"line":52,"column":15,"offset":972},"indent":[]}}],"position":{"start":{"line":52,"column":3,"offset":960},"end":{"line":52,"column":15,"offset":972},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":949},"end":{"line":52,"column":15,"offset":972},"indent":[1,1]}}],"position":{"start":{"line":42,"column":1,"offset":811},"end":{"line":52,"column":15,"offset":972},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#삽입정렬---on2","title":null,"children":[],"data":{"hProperties":{"aria-label":"삽입정렬   on2 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"삽입정렬 - O(N^2)","position":{"start":{"line":54,"column":4,"offset":977},"end":{"line":54,"column":17,"offset":990},"indent":[]}}],"position":{"start":{"line":54,"column":1,"offset":974},"end":{"line":54,"column":17,"offset":990},"indent":[]},"data":{"id":"삽입정렬---on2","htmlAttributes":{"id":"삽입정렬---on2"},"hProperties":{"id":"삽입정렬---on2","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">insertion_sort</span> <span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> current <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        list<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    list<span class=\"token punctuation\">[</span>j <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> current<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":56,"column":1,"offset":992},"end":{"line":73,"column":4,"offset":1300},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"로직","position":{"start":{"line":75,"column":3,"offset":1304},"end":{"line":75,"column":5,"offset":1306},"indent":[]}}],"position":{"start":{"line":75,"column":3,"offset":1304},"end":{"line":75,"column":5,"offset":1306},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"1번째 인덱스에서 시작해서 키 값을 선택해 자신보다 앞에 있는 인덱스들의 값이 키보다 더 크다면 해당 값을 한칸 뒤로 밀어줍니다. 키 보다 작은 값을 가진 인덱스를 만나면 이동을 멈추고 키 값을 빈 자리에 넣어줍니다.","position":{"start":{"line":76,"column":5,"offset":1311},"end":{"line":76,"column":126,"offset":1432},"indent":[]}}],"position":{"start":{"line":76,"column":5,"offset":1311},"end":{"line":76,"column":126,"offset":1432},"indent":[]}}],"position":{"start":{"line":76,"column":3,"offset":1309},"end":{"line":76,"column":126,"offset":1432},"indent":[]}}],"position":{"start":{"line":76,"column":3,"offset":1309},"end":{"line":76,"column":126,"offset":1432},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":1302},"end":{"line":76,"column":126,"offset":1432},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"시간 복잡도","position":{"start":{"line":77,"column":3,"offset":1435},"end":{"line":77,"column":9,"offset":1441},"indent":[]}}],"position":{"start":{"line":77,"column":3,"offset":1435},"end":{"line":77,"column":9,"offset":1441},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"만약 배열이 이미 정렬되어 있다면 한 번의 비교만으로 끝나기 때문에 O(N) 이지만 최악의 경우에는 모든 키 값에 대해 모든 인덱스를 비교해야하기 때문에 O(N^2)가 시간복잡도가 됩니다.","position":{"start":{"line":78,"column":5,"offset":1446},"end":{"line":78,"column":110,"offset":1551},"indent":[]}}],"position":{"start":{"line":78,"column":5,"offset":1446},"end":{"line":78,"column":110,"offset":1551},"indent":[]}}],"position":{"start":{"line":78,"column":3,"offset":1444},"end":{"line":78,"column":110,"offset":1551},"indent":[]}}],"position":{"start":{"line":78,"column":3,"offset":1444},"end":{"line":78,"column":110,"offset":1551},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":1433},"end":{"line":78,"column":110,"offset":1551},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"정렬 형태","position":{"start":{"line":79,"column":3,"offset":1554},"end":{"line":79,"column":8,"offset":1559},"indent":[]}}],"position":{"start":{"line":79,"column":3,"offset":1554},"end":{"line":79,"column":8,"offset":1559},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"안정 정렬입니다.","position":{"start":{"line":80,"column":5,"offset":1564},"end":{"line":80,"column":14,"offset":1573},"indent":[]}}],"position":{"start":{"line":80,"column":5,"offset":1564},"end":{"line":80,"column":14,"offset":1573},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":1562},"end":{"line":80,"column":14,"offset":1573},"indent":[]}}],"position":{"start":{"line":80,"column":3,"offset":1562},"end":{"line":80,"column":14,"offset":1573},"indent":[]}}],"position":{"start":{"line":79,"column":1,"offset":1552},"end":{"line":80,"column":14,"offset":1573},"indent":[1]}}],"position":{"start":{"line":75,"column":1,"offset":1302},"end":{"line":80,"column":14,"offset":1573},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#병합정렬---onlogn","title":null,"children":[],"data":{"hProperties":{"aria-label":"병합정렬   onlogn permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"병합정렬 - O(NlogN)","position":{"start":{"line":82,"column":4,"offset":1578},"end":{"line":82,"column":19,"offset":1593},"indent":[]}}],"position":{"start":{"line":82,"column":1,"offset":1575},"end":{"line":82,"column":19,"offset":1593},"indent":[]},"data":{"id":"병합정렬---onlogn","htmlAttributes":{"id":"병합정렬---onlogn"},"hProperties":{"id":"병합정렬---onlogn","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">merge</span> <span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> list<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mid<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">sorted_list</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> left<span class=\"token punctuation\">,</span> j <span class=\"token operator\">=</span> mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> idx <span class=\"token operator\">=</span> left<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> mid <span class=\"token operator\">&amp;&amp;</span> j <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> list<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      sorted_list<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n      sorted_list<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;=</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    sorted_list<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    sorted_list<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l <span class=\"token operator\">=</span> left <span class=\"token punctuation\">;</span> l <span class=\"token operator\">&lt;=</span> right <span class=\"token punctuation\">;</span> l<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    list<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sorted_list<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">partition</span> <span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> list<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> mid<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">+</span> right<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">partition</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> mid<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":84,"column":1,"offset":1595},"end":{"line":118,"column":4,"offset":2339},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":true,"children":[{"type":"listItem","spread":true,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"로직","position":{"start":{"line":120,"column":3,"offset":2343},"end":{"line":120,"column":5,"offset":2345},"indent":[]}}],"position":{"start":{"line":120,"column":3,"offset":2343},"end":{"line":120,"column":5,"offset":2345},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"분할정복으로 배열을 반으로 계속 분할해서 분할된 부분배열을 정렬하고 다시 합쳐줍니다.","position":{"start":{"line":122,"column":5,"offset":2351},"end":{"line":122,"column":52,"offset":2398},"indent":[]}}],"position":{"start":{"line":122,"column":5,"offset":2351},"end":{"line":122,"column":52,"offset":2398},"indent":[]}}],"position":{"start":{"line":122,"column":3,"offset":2349},"end":{"line":122,"column":52,"offset":2398},"indent":[]}}],"position":{"start":{"line":122,"column":3,"offset":2349},"end":{"line":122,"column":52,"offset":2398},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":2341},"end":{"line":123,"column":1,"offset":2399},"indent":[1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"시간 복잡도","position":{"start":{"line":124,"column":3,"offset":2402},"end":{"line":124,"column":9,"offset":2408},"indent":[]}}],"position":{"start":{"line":124,"column":3,"offset":2402},"end":{"line":124,"column":9,"offset":2408},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"배열을 계속해서 반으로 나누어 정렬하기 때문에 재귀호출의 깊이에 따라 O(NlogN) 의 시간복잡도를 가집니다.","position":{"start":{"line":125,"column":5,"offset":2413},"end":{"line":125,"column":67,"offset":2475},"indent":[]}}],"position":{"start":{"line":125,"column":5,"offset":2413},"end":{"line":125,"column":67,"offset":2475},"indent":[]}}],"position":{"start":{"line":125,"column":3,"offset":2411},"end":{"line":125,"column":67,"offset":2475},"indent":[]}}],"position":{"start":{"line":125,"column":3,"offset":2411},"end":{"line":125,"column":67,"offset":2475},"indent":[]}}],"position":{"start":{"line":124,"column":1,"offset":2400},"end":{"line":125,"column":67,"offset":2475},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"정렬 형태","position":{"start":{"line":126,"column":3,"offset":2478},"end":{"line":126,"column":8,"offset":2483},"indent":[]}}],"position":{"start":{"line":126,"column":3,"offset":2478},"end":{"line":126,"column":8,"offset":2483},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"안정 정렬입니다.","position":{"start":{"line":127,"column":5,"offset":2488},"end":{"line":127,"column":14,"offset":2497},"indent":[]}}],"position":{"start":{"line":127,"column":5,"offset":2488},"end":{"line":127,"column":14,"offset":2497},"indent":[]}}],"position":{"start":{"line":127,"column":3,"offset":2486},"end":{"line":127,"column":14,"offset":2497},"indent":[]}}],"position":{"start":{"line":127,"column":3,"offset":2486},"end":{"line":127,"column":14,"offset":2497},"indent":[]}}],"position":{"start":{"line":126,"column":1,"offset":2476},"end":{"line":127,"column":14,"offset":2497},"indent":[1]}}],"position":{"start":{"line":120,"column":1,"offset":2341},"end":{"line":127,"column":14,"offset":2497},"indent":[1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#퀵-정렬---onlogn","title":null,"children":[],"data":{"hProperties":{"aria-label":"퀵 정렬   onlogn permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"퀵 정렬 - O(NlogN)","position":{"start":{"line":129,"column":4,"offset":2502},"end":{"line":129,"column":19,"offset":2517},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":2499},"end":{"line":129,"column":19,"offset":2517},"indent":[]},"data":{"id":"퀵-정렬---onlogn","htmlAttributes":{"id":"퀵-정렬---onlogn"},"hProperties":{"id":"퀵-정렬---onlogn","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">quick_sort</span> <span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> list<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> head<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> tail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>head <span class=\"token operator\">>=</span> tail<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">int</span> pivot <span class=\"token operator\">=</span> head<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> left <span class=\"token operator\">=</span> pivot <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> right <span class=\"token operator\">=</span> tail<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>left <span class=\"token operator\">&lt;=</span> tail <span class=\"token operator\">&amp;&amp;</span> list<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> list<span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      left<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>right <span class=\"token operator\">></span> head <span class=\"token operator\">&amp;&amp;</span> list<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> list<span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      right<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>left <span class=\"token operator\">></span> right<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">[</span>pivot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">[</span>right<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">quick_sort</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> head<span class=\"token punctuation\">,</span> right <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">quick_sort</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">,</span> right <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> tail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":131,"column":1,"offset":2519},"end":{"line":158,"column":4,"offset":3057},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"로직","position":{"start":{"line":160,"column":3,"offset":3061},"end":{"line":160,"column":5,"offset":3063},"indent":[]}}],"position":{"start":{"line":160,"column":3,"offset":3061},"end":{"line":160,"column":5,"offset":3063},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"배열의 첫 값을 피봇으로 지정하고 1번째 인덱스부터 뒤로 이동하며 피봇보다 큰 값이 나올 때까지 left를 이동합니다.","position":{"start":{"line":161,"column":5,"offset":3068},"end":{"line":161,"column":71,"offset":3134},"indent":[]}}],"position":{"start":{"line":161,"column":5,"offset":3068},"end":{"line":161,"column":71,"offset":3134},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":3066},"end":{"line":161,"column":71,"offset":3134},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"동시에 배열에 마지막 인덱스에서부터 앞으로 이동하며 피봇보다 작은 값이 나올때까지 right를 이동합니다.","position":{"start":{"line":162,"column":5,"offset":3139},"end":{"line":162,"column":64,"offset":3198},"indent":[]}}],"position":{"start":{"line":162,"column":5,"offset":3139},"end":{"line":162,"column":64,"offset":3198},"indent":[]}}],"position":{"start":{"line":162,"column":3,"offset":3137},"end":{"line":162,"column":64,"offset":3198},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"이동이 끝났을 때, left 가 right를 추월하지 않았다면 left 와 right의 자리를 바꿔줍니다.","position":{"start":{"line":163,"column":5,"offset":3203},"end":{"line":163,"column":64,"offset":3262},"indent":[]}}],"position":{"start":{"line":163,"column":5,"offset":3203},"end":{"line":163,"column":64,"offset":3262},"indent":[]}}],"position":{"start":{"line":163,"column":3,"offset":3201},"end":{"line":163,"column":64,"offset":3262},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"이동이 끝났을 때, left 가 right 를 추월해 있다면 pivot 과 right 의 자리를 바꿔줍니다.","position":{"start":{"line":164,"column":5,"offset":3267},"end":{"line":164,"column":65,"offset":3327},"indent":[]}}],"position":{"start":{"line":164,"column":5,"offset":3267},"end":{"line":164,"column":65,"offset":3327},"indent":[]}}],"position":{"start":{"line":164,"column":3,"offset":3265},"end":{"line":164,"column":65,"offset":3327},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"한 피봇에 대해 정렬이 끝나면 해당 피봇을 기준으로 오른쪽과 왼쪽 부분배열을 만들어 같은 알고리즘의 정렬을 수행합니다.","position":{"start":{"line":165,"column":5,"offset":3332},"end":{"line":165,"column":71,"offset":3398},"indent":[]}}],"position":{"start":{"line":165,"column":5,"offset":3332},"end":{"line":165,"column":71,"offset":3398},"indent":[]}}],"position":{"start":{"line":165,"column":3,"offset":3330},"end":{"line":165,"column":71,"offset":3398},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"나누는 부분배열의 길이가 1이나 0이 될 때까지 반복합니다.","position":{"start":{"line":166,"column":5,"offset":3403},"end":{"line":166,"column":38,"offset":3436},"indent":[]}}],"position":{"start":{"line":166,"column":5,"offset":3403},"end":{"line":166,"column":38,"offset":3436},"indent":[]}}],"position":{"start":{"line":166,"column":3,"offset":3401},"end":{"line":166,"column":38,"offset":3436},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":3066},"end":{"line":166,"column":38,"offset":3436},"indent":[3,3,3,3,3]}}],"position":{"start":{"line":160,"column":1,"offset":3059},"end":{"line":166,"column":38,"offset":3436},"indent":[1,1,1,1,1,1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"시간 복잡도","position":{"start":{"line":167,"column":3,"offset":3439},"end":{"line":167,"column":9,"offset":3445},"indent":[]}}],"position":{"start":{"line":167,"column":3,"offset":3439},"end":{"line":167,"column":9,"offset":3445},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"시간복잡도는 재귀호출의 깊이에 따라 O(NlogN)이 됩니다. 하지만 최악의 경우에는 피봇이 중앙에 위치하지 않게 되어 불균형하게 배열이 나누어지고 이 때는 O(N^2) 의 시간복잡도가 됩니다.","position":{"start":{"line":168,"column":5,"offset":3450},"end":{"line":168,"column":113,"offset":3558},"indent":[]}}],"position":{"start":{"line":168,"column":5,"offset":3450},"end":{"line":168,"column":113,"offset":3558},"indent":[]}}],"position":{"start":{"line":168,"column":3,"offset":3448},"end":{"line":168,"column":113,"offset":3558},"indent":[]}}],"position":{"start":{"line":168,"column":3,"offset":3448},"end":{"line":168,"column":113,"offset":3558},"indent":[]}}],"position":{"start":{"line":167,"column":1,"offset":3437},"end":{"line":168,"column":113,"offset":3558},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"정렬 형태","position":{"start":{"line":169,"column":3,"offset":3561},"end":{"line":169,"column":8,"offset":3566},"indent":[]}}],"position":{"start":{"line":169,"column":3,"offset":3561},"end":{"line":169,"column":8,"offset":3566},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"불안정 정렬입니다.","position":{"start":{"line":170,"column":5,"offset":3571},"end":{"line":170,"column":15,"offset":3581},"indent":[]}}],"position":{"start":{"line":170,"column":5,"offset":3571},"end":{"line":170,"column":15,"offset":3581},"indent":[]}}],"position":{"start":{"line":170,"column":3,"offset":3569},"end":{"line":170,"column":15,"offset":3581},"indent":[]}}],"position":{"start":{"line":170,"column":3,"offset":3569},"end":{"line":170,"column":15,"offset":3581},"indent":[]}}],"position":{"start":{"line":169,"column":1,"offset":3559},"end":{"line":170,"column":15,"offset":3581},"indent":[1]}}],"position":{"start":{"line":160,"column":1,"offset":3059},"end":{"line":170,"column":15,"offset":3581},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"link","url":"#피보나치-수열-구현","title":null,"children":[],"data":{"hProperties":{"aria-label":"피보나치 수열 구현 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"피보나치 수열 구현","position":{"start":{"line":172,"column":3,"offset":3585},"end":{"line":172,"column":13,"offset":3595},"indent":[]}}],"position":{"start":{"line":172,"column":1,"offset":3583},"end":{"line":172,"column":13,"offset":3595},"indent":[]},"data":{"id":"피보나치-수열-구현","htmlAttributes":{"id":"피보나치-수열-구현"},"hProperties":{"id":"피보나치-수열-구현","style":"position:relative;"}}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#재귀","title":null,"children":[],"data":{"hProperties":{"aria-label":"재귀 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"재귀","position":{"start":{"line":174,"column":4,"offset":3600},"end":{"line":174,"column":6,"offset":3602},"indent":[]}}],"position":{"start":{"line":174,"column":1,"offset":3597},"end":{"line":174,"column":6,"offset":3602},"indent":[]},"data":{"id":"재귀","htmlAttributes":{"id":"재귀"},"hProperties":{"id":"재귀","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">fibonacci</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":176,"column":1,"offset":3604},"end":{"line":184,"column":4,"offset":3715},"indent":[1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#메모이제이션","title":null,"children":[],"data":{"hProperties":{"aria-label":"메모이제이션 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"메모이제이션","position":{"start":{"line":186,"column":4,"offset":3720},"end":{"line":186,"column":10,"offset":3726},"indent":[]}}],"position":{"start":{"line":186,"column":1,"offset":3717},"end":{"line":186,"column":10,"offset":3726},"indent":[]},"data":{"id":"메모이제이션","htmlAttributes":{"id":"메모이제이션"},"hProperties":{"id":"메모이제이션","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> memo<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">fibonacci</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>memo<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> memo<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">return</span> memo<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">fibonacci</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":188,"column":1,"offset":3728},"end":{"line":197,"column":4,"offset":3899},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#다이나믹-프로그래밍---bottom-up","title":null,"children":[],"data":{"hProperties":{"aria-label":"다이나믹 프로그래밍   bottom up permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"다이나믹 프로그래밍 - Bottom Up","position":{"start":{"line":199,"column":4,"offset":3904},"end":{"line":199,"column":26,"offset":3926},"indent":[]}}],"position":{"start":{"line":199,"column":1,"offset":3901},"end":{"line":199,"column":26,"offset":3926},"indent":[]},"data":{"id":"다이나믹-프로그래밍---bottom-up","htmlAttributes":{"id":"다이나믹-프로그래밍---bottom-up"},"hProperties":{"id":"다이나믹-프로그래밍---bottom-up","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">fibonacci</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":201,"column":1,"offset":3928},"end":{"line":212,"column":4,"offset":4091},"indent":[1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":213,"column":1,"offset":4092}}}}