{"expireTime":9007200877354305000,"key":"transformer-remark-markdown-html-ast-ece76a6684afe1c001017d84e712fb79-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.acmicpc.net/problem/10775"},"children":[{"type":"text","value":"https://www.acmicpc.net/problem/10775","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":39,"offset":39}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":79,"offset":79}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":79,"offset":79}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"문제","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%AC%B8%EC%A0%9C","aria-label":"문제 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":84},"end":{"line":4,"column":6,"offset":86}}}],"position":{"start":{"line":4,"column":1,"offset":81},"end":{"line":4,"column":6,"offset":86}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":90},"end":{"line":6,"column":5,"offset":92}}}],"position":{"start":{"line":6,"column":1,"offset":88},"end":{"line":6,"column":7,"offset":94}}},{"type":"raw","value":"<br>","position":{"start":{"line":6,"column":7,"offset":94},"end":{"line":6,"column":11,"offset":98}}}],"position":{"start":{"line":6,"column":1,"offset":88},"end":{"line":6,"column":11,"offset":98}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"오늘은 신승원의 생일이다.","position":{"start":{"line":8,"column":1,"offset":100},"end":{"line":8,"column":15,"offset":114}}}],"position":{"start":{"line":8,"column":1,"offset":100},"end":{"line":8,"column":15,"offset":114}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"박승원은 생일을 맞아 신승원에게 인천국제공항을 선물로 줬다.","position":{"start":{"line":10,"column":1,"offset":116},"end":{"line":10,"column":34,"offset":149}}}],"position":{"start":{"line":10,"column":1,"offset":116},"end":{"line":10,"column":34,"offset":149}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"공항에는 G개의 게이트가 있으며 각각은 1에서 G까지의 번호를 가지고 있다.","position":{"start":{"line":12,"column":1,"offset":151},"end":{"line":12,"column":43,"offset":193}}}],"position":{"start":{"line":12,"column":1,"offset":151},"end":{"line":12,"column":43,"offset":193}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"공항에는 P개의 비행기가 순서대로 도착할 예정이며, 당신은 i번째 비행기를 1번부터 gi (1 ≤ gi ≤ G) 번째 게이트중 하나에 영구적으로 도킹하려 한다. 비행기가 어느 게이트에도 도킹할 수 없다면 공항이 폐쇄되고, 이후 어떤 비행기도 도착할 수 없다.","position":{"start":{"line":14,"column":1,"offset":195},"end":{"line":14,"column":145,"offset":339}}}],"position":{"start":{"line":14,"column":1,"offset":195},"end":{"line":14,"column":145,"offset":339}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"신승원은 가장 많은 비행기를 공항에 도킹시켜서 박승원을 행복하게 하고 싶어한다. 승원이는 비행기를 최대 몇 대 도킹시킬 수 있는가?","position":{"start":{"line":16,"column":1,"offset":341},"end":{"line":16,"column":74,"offset":414}}}],"position":{"start":{"line":16,"column":1,"offset":341},"end":{"line":16,"column":74,"offset":414}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"입력","position":{"start":{"line":18,"column":3,"offset":418},"end":{"line":18,"column":5,"offset":420}}}],"position":{"start":{"line":18,"column":1,"offset":416},"end":{"line":18,"column":7,"offset":422}}},{"type":"raw","value":"<br>","position":{"start":{"line":18,"column":7,"offset":422},"end":{"line":18,"column":11,"offset":426}}}],"position":{"start":{"line":18,"column":1,"offset":416},"end":{"line":18,"column":11,"offset":426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"첫 번째 줄에는 게이트의 수 G (1 ≤ G ≤ 105)가 주어진다.","position":{"start":{"line":20,"column":1,"offset":428},"end":{"line":20,"column":39,"offset":466}}}],"position":{"start":{"line":20,"column":1,"offset":428},"end":{"line":20,"column":39,"offset":466}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"두 번째 줄에는 비행기의 수 P (1 ≤ P ≤ 105)가 주어진다.","position":{"start":{"line":22,"column":1,"offset":468},"end":{"line":22,"column":39,"offset":506}}}],"position":{"start":{"line":22,"column":1,"offset":468},"end":{"line":22,"column":39,"offset":506}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이후 P개의 줄에 gi (1 ≤ gi ≤ G) 가 주어진다.","position":{"start":{"line":24,"column":1,"offset":508},"end":{"line":24,"column":34,"offset":541}}}],"position":{"start":{"line":24,"column":1,"offset":508},"end":{"line":24,"column":34,"offset":541}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"출력","position":{"start":{"line":26,"column":3,"offset":545},"end":{"line":26,"column":5,"offset":547}}}],"position":{"start":{"line":26,"column":1,"offset":543},"end":{"line":26,"column":7,"offset":549}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":7,"offset":549},"end":{"line":26,"column":11,"offset":553}}}],"position":{"start":{"line":26,"column":1,"offset":543},"end":{"line":26,"column":11,"offset":553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"승원이가 도킹시킬 수 있는 최대의 비행기 수를 출력한다.","position":{"start":{"line":28,"column":1,"offset":555},"end":{"line":28,"column":32,"offset":586}}}],"position":{"start":{"line":28,"column":1,"offset":555},"end":{"line":28,"column":32,"offset":586}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"풀이","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%ED%92%80%EC%9D%B4","aria-label":"풀이 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"풀이","position":{"start":{"line":30,"column":4,"offset":591},"end":{"line":30,"column":6,"offset":593}}}],"position":{"start":{"line":30,"column":1,"offset":588},"end":{"line":30,"column":6,"offset":593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이 문제 역시 유니온 파인드로 풀어야했는데, 기존의 유형과는 조금 달리 더 생각해야하는 문제였다. 결국 혼자 힘으로는 풀지 못하고 블로그들을 보면서 풀게 되었다. 이 문제에서 사용해야하는 유니온 파인드 전략은, 입력받은 게이트의 부모를 그 바로 이전 번호의 게이트를 유니온 연산으로 합쳐주는 것이다. 예를 들어, 3이 입력으로 주어진다면, 3과 2를 인자로 유니온 연산을 수행한다. 이렇게 연산을 진행하면, 다음번 3이 입력으로 들어왔을 때는, 3의 부모인 2에 새로운 비행기를 도킹 하고, 해당 게이트의 부모게이트를 1번 게이트로 만들게 된다.","position":{"start":{"line":32,"column":1,"offset":595},"end":{"line":32,"column":306,"offset":900}}}],"position":{"start":{"line":32,"column":1,"offset":595},"end":{"line":32,"column":306,"offset":900}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이때 핵심이 되는 부분은 게이트들의 부모게이트가 1번 게이트인 경우이다. 이 말은 즉, 1번 게이트에 비행기가 도킹되면 1번 게이트는 존재하지 않는 0번 게이트를 부모게이트로 가지게 되기 때문에 더 이상 도킹할 수 있는 자리가 존재하지 않다는 것을 의미한다. 따라서 0번 게이트가 등장할 때까지 입력 g의 부모게이트와 그 게이트의 -1 번째 게이트를 계속해서 유니온 연산으로 합쳐주면 도킹이 가능한 최대 비행기의 개수를 알 수 있다.","position":{"start":{"line":34,"column":1,"offset":902},"end":{"line":34,"column":243,"offset":1144}}}],"position":{"start":{"line":34,"column":1,"offset":902},"end":{"line":34,"column":243,"offset":1144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"코드","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%BD%94%EB%93%9C","aria-label":"코드 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"코드","position":{"start":{"line":36,"column":4,"offset":1149},"end":{"line":36,"column":6,"offset":1151}}}],"position":{"start":{"line":36,"column":1,"offset":1146},"end":{"line":36,"column":6,"offset":1151}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> parent<span class=\"token punctuation\">[</span><span class=\"token number\">1000001</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">findRoot</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> parent<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">findRoot</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    a <span class=\"token operator\">=</span> <span class=\"token function\">findRoot</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    b <span class=\"token operator\">=</span> <span class=\"token function\">findRoot</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    parent<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> G<span class=\"token punctuation\">,</span> P<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> G <span class=\"token operator\">>></span> P<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> G<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        parent<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> currGate<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> parentGate<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> P<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cin <span class=\"token operator\">>></span> currGate<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>parentGate <span class=\"token operator\">=</span> <span class=\"token function\">findRoot</span><span class=\"token punctuation\">(</span>currGate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>parentGate<span class=\"token punctuation\">,</span> parentGate <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    cout <span class=\"token operator\">&lt;&lt;</span> count<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":38,"column":1,"offset":1153},"end":{"line":80,"column":4,"offset":1841}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":81,"column":1,"offset":1842}}}}