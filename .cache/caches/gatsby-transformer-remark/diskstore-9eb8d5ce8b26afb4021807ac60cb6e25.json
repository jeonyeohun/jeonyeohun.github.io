{"expireTime":9007200877354305000,"key":"transformer-remark-markdown-html-ast-cebbbbaabf8f2f85f6f4572258ddd451-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.acmicpc.net/problem/6588"},"children":[{"type":"text","value":"https://www.acmicpc.net/problem/6588","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":38,"offset":38}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"문제","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%AC%B8%EC%A0%9C","aria-label":"문제 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":82},"end":{"line":4,"column":6,"offset":84}}}],"position":{"start":{"line":4,"column":1,"offset":79},"end":{"line":4,"column":6,"offset":84}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":88},"end":{"line":6,"column":5,"offset":90}}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":6,"column":7,"offset":92}}},{"type":"raw","value":"<br>","position":{"start":{"line":6,"column":7,"offset":92},"end":{"line":6,"column":11,"offset":96}}},{"type":"text","value":"\n1742년, 독일의 아마추어 수학가 크리스티안 골드바흐는 레온하르트 오일러에게 다음과 같은 추측을 제안하는 편지를 보냈다.","position":{"start":{"line":6,"column":11,"offset":96},"end":{"line":7,"column":69,"offset":165}}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":7,"column":69,"offset":165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"4보다 큰 모든 짝수는 두 홀수 소수의 합으로 나타낼 수 있다.\n예를 들어 8은 3 + 5로 나타낼 수 있고, 3과 5는 모두 홀수인 소수이다. 또, 20 = 3 + 17 = 7 + 13, 42 = 5 + 37 = 11 + 31 = 13 + 29 = 19 + 23 이다.","position":{"start":{"line":9,"column":1,"offset":167},"end":{"line":10,"column":116,"offset":318}}}],"position":{"start":{"line":9,"column":1,"offset":167},"end":{"line":10,"column":116,"offset":318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이 추측은 아직도 해결되지 않은 문제이다.","position":{"start":{"line":12,"column":1,"offset":320},"end":{"line":12,"column":24,"offset":343}}}],"position":{"start":{"line":12,"column":1,"offset":320},"end":{"line":12,"column":24,"offset":343}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"백만 이하의 모든 짝수에 대해서, 이 추측을 검증하는 프로그램을 작성하시오.","position":{"start":{"line":14,"column":1,"offset":345},"end":{"line":14,"column":43,"offset":387}}}],"position":{"start":{"line":14,"column":1,"offset":345},"end":{"line":14,"column":43,"offset":387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"입력","position":{"start":{"line":16,"column":3,"offset":391},"end":{"line":16,"column":5,"offset":393}}}],"position":{"start":{"line":16,"column":1,"offset":389},"end":{"line":16,"column":7,"offset":395}}},{"type":"raw","value":"<br>","position":{"start":{"line":16,"column":7,"offset":395},"end":{"line":16,"column":11,"offset":399}}},{"type":"text","value":"\n입력은 하나 또는 그 이상의 테스트 케이스로 이루어져 있다. 테스트 케이스의 개수는 100,000개를 넘지 않는다.","position":{"start":{"line":16,"column":11,"offset":399},"end":{"line":17,"column":65,"offset":464}}}],"position":{"start":{"line":16,"column":1,"offset":389},"end":{"line":17,"column":65,"offset":464}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"각 테스트 케이스는 짝수 정수 n 하나로 이루어져 있다. (6 ≤ n ≤ 1000000)","position":{"start":{"line":19,"column":1,"offset":466},"end":{"line":19,"column":50,"offset":515}}}],"position":{"start":{"line":19,"column":1,"offset":466},"end":{"line":19,"column":50,"offset":515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"입력의 마지막 줄에는 0이 하나 주어진다.","position":{"start":{"line":21,"column":1,"offset":517},"end":{"line":21,"column":24,"offset":540}}}],"position":{"start":{"line":21,"column":1,"offset":517},"end":{"line":21,"column":24,"offset":540}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"출력","position":{"start":{"line":23,"column":3,"offset":544},"end":{"line":23,"column":5,"offset":546}}}],"position":{"start":{"line":23,"column":1,"offset":542},"end":{"line":23,"column":7,"offset":548}}},{"type":"raw","value":"<br>","position":{"start":{"line":23,"column":7,"offset":548},"end":{"line":23,"column":11,"offset":552}}},{"type":"text","value":"\n각 테스트 케이스에 대해서, n = a + b 형태로 출력한다. 이때, a와 b는 홀수 소수이다. 숫자와 연산자는 공백 하나로 구분되어져 있다. 만약, n을 만들 수 있는 방법이 여러 가지라면, b-a가 가장 큰 것을 출력한다. 또, 두 홀수 소수의 합으로 n을 나타낼 수 없는 경우에는 “Goldbach’s conjecture is wrong.”을 출력한다.","position":{"start":{"line":23,"column":11,"offset":552},"end":{"line":24,"column":202,"offset":754}}}],"position":{"start":{"line":23,"column":1,"offset":542},"end":{"line":24,"column":202,"offset":754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"풀이","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%ED%92%80%EC%9D%B4","aria-label":"풀이 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"풀이","position":{"start":{"line":26,"column":4,"offset":759},"end":{"line":26,"column":6,"offset":761}}}],"position":{"start":{"line":26,"column":1,"offset":756},"end":{"line":26,"column":6,"offset":761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이번 문제는 오늘 풀었던 ","position":{"start":{"line":28,"column":1,"offset":763},"end":{"line":28,"column":15,"offset":777}}},{"type":"raw","value":"<code class=\"language-text\">1644번: 소수의 연속합</code>","position":{"start":{"line":28,"column":15,"offset":777},"end":{"line":28,"column":31,"offset":793}}},{"type":"text","value":" 문제와 비슷하지만 조금 더 응용한 문제였다. 처음에 생각한 알고리즘은 홀수번째 소수를 모두 더해보면서 가능한 첫번째 조합을 찾는 것이었는데, 이렇게 하면 N^2 의 시간복잡도가 발생하게 되면서 시간초과가 난다. N이 1000000까지 올 수 있다. 따라서 시간을 단축시키기 위해 최선을 다해야 한다.","position":{"start":{"line":28,"column":31,"offset":793},"end":{"line":28,"column":199,"offset":961}}}],"position":{"start":{"line":28,"column":1,"offset":763},"end":{"line":28,"column":199,"offset":961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"먼저, 시간을 단축시키기 위해서는 각 테스트케이스마다 에라토스테네스의 체를 수행하는 것이 아니라, 프로그램이 시작되었을 때 딱 한번만 에라토스테네스의 체를 수행해서 소수 테이블을 만들어둔다. 그리고 이 연산을 수행하면서는 짝수번째 숫자들은 모두 건너뛰고 홀수만 체크해도 괜찮다. 왜냐하면 문제에서는 짝수 소수를 전혀 사용하지 않기 때문이다.","position":{"start":{"line":30,"column":1,"offset":963},"end":{"line":30,"column":191,"offset":1153}}}],"position":{"start":{"line":30,"column":1,"offset":963},"end":{"line":30,"column":191,"offset":1153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"테스트 케이스의 안에서는 실제로 모든 소수를 더해보는 연산을 최소화 하기 위해 한 가지 규칙을 사용해야한다. 타겟이 되는 소수가 n 이라고 할 때, b-a가 최대 가 되는 소수는 a가 가장 작은 소수이다. 따라서 a는 홀수번째 소수를 오름차순으로 시도해보고, b 는 모든 소수를 다 검사할 필요없이 n-a 를 수행해서 나온 값이 홀 수 이면서, 소수인지만 확인하면 된다. 만약 두 조건이 모두 만족한다면, 해당 조합은 n을 만들 수 있는 최적의 조합이 된다.","position":{"start":{"line":32,"column":1,"offset":1155},"end":{"line":32,"column":257,"offset":1411}}}],"position":{"start":{"line":32,"column":1,"offset":1155},"end":{"line":32,"column":257,"offset":1411}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"코드","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%BD%94%EB%93%9C","aria-label":"코드 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"코드","position":{"start":{"line":34,"column":4,"offset":1416},"end":{"line":34,"column":6,"offset":1418}}}],"position":{"start":{"line":34,"column":1,"offset":1413},"end":{"line":34,"column":6,"offset":1418}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cmath></span></span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> MAX <span class=\"token operator\">=</span> <span class=\"token number\">1000001</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    ios_base <span class=\"token operator\">::</span> <span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span>false<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    vector<span class=\"token operator\">&lt;</span>bool<span class=\"token operator\">></span> <span class=\"token function\">primes</span> <span class=\"token punctuation\">(</span>MAX<span class=\"token punctuation\">,</span> true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    primes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>MAX<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token operator\">+</span>i <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> MAX <span class=\"token punctuation\">;</span> j<span class=\"token operator\">+=</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        bool foundSolution <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\n        cin <span class=\"token operator\">>></span> n<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n <span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>primes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> primes<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                foundSolution <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n                cout <span class=\"token operator\">&lt;&lt;</span> n <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" = \"</span> <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" + \"</span> <span class=\"token operator\">&lt;&lt;</span> n<span class=\"token operator\">-</span>i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>foundSolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Goldbach's conjecture is wrong.\\n\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":36,"column":1,"offset":1420},"end":{"line":80,"column":4,"offset":2278}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":81,"column":1,"offset":2279}}}}