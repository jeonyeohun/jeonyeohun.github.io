{"expireTime":9007200877354308000,"key":"transformer-remark-markdown-ast-7453b931159abe2271af209b6b7cdc73-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.acmicpc.net/problem/2468","children":[{"type":"text","value":"https://www.acmicpc.net/problem/2468","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":38,"offset":38},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":82},"end":{"line":4,"column":6,"offset":84},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":79},"end":{"line":4,"column":6,"offset":84},"indent":[]},"data":{"id":"문제","htmlAttributes":{"id":"문제"},"hProperties":{"id":"문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":88},"end":{"line":6,"column":5,"offset":90},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":6,"column":7,"offset":92},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":6,"column":7,"offset":92},"end":{"line":6,"column":11,"offset":96},"indent":[]}},{"type":"text","value":"\n재난방재청에서는 많은 비가 내리는 장마철에 대비해서 다음과 같은 일을 계획하고 있다. 먼저 어떤 지역의 높이 정보를 파악한다. 그 다음에 그 지역에 많은 비가 내렸을 때 물에 잠기지 않는 안전한 영역이 최대로 몇 개가 만들어 지는 지를 조사하려고 한다. 이때, 문제를 간단하게 하기 위하여, 장마철에 내리는 비의 양에 따라 일정한 높이 이하의 모든 지점은 물에 잠긴다고 가정한다.","position":{"start":{"line":6,"column":11,"offset":96},"end":{"line":7,"column":213,"offset":309},"indent":[1]}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":7,"column":213,"offset":309},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"어떤 지역의 높이 정보는 행과 열의 크기가 각각 N인 2차원 배열 형태로 주어지며 배열의 각 원소는 해당 지점의 높이를 표시하는 자연수이다. 예를 들어, 다음은 N=5인 지역의 높이 정보이다.","position":{"start":{"line":9,"column":1,"offset":311},"end":{"line":9,"column":108,"offset":418},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":311},"end":{"line":9,"column":108,"offset":418},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"![](","position":{"start":{"line":11,"column":1,"offset":420},"end":{"line":11,"column":5,"offset":424},"indent":[]}},{"type":"link","title":null,"url":"https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/assets/post_images/w1.png\"/>","children":[{"type":"text","value":"https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/assets/post_images/w1.png”/>","position":{"start":{"line":11,"column":5,"offset":424},"end":{"line":11,"column":98,"offset":517},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":424},"end":{"line":11,"column":98,"offset":517},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":420},"end":{"line":11,"column":98,"offset":517},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"이제 위와 같은 지역에 많은 비가 내려서 높이가 4 이하인 모든 지점이 물에 잠겼다고 하자. 이 경우에 물에 잠기는 지점을 회색으로 표시하면 다음과 같다.","position":{"start":{"line":13,"column":1,"offset":519},"end":{"line":13,"column":87,"offset":605},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":519},"end":{"line":13,"column":87,"offset":605},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"![](","position":{"start":{"line":15,"column":1,"offset":607},"end":{"line":15,"column":5,"offset":611},"indent":[]}},{"type":"link","title":null,"url":"https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/assets/post_images/w2.png\"/>","children":[{"type":"text","value":"https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/assets/post_images/w2.png”/>","position":{"start":{"line":15,"column":5,"offset":611},"end":{"line":15,"column":98,"offset":704},"indent":[]}}],"position":{"start":{"line":15,"column":5,"offset":611},"end":{"line":15,"column":98,"offset":704},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":607},"end":{"line":15,"column":98,"offset":704},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"물에 잠기지 않는 안전한 영역이라 함은 물에 잠기지 않는 지점들이 위, 아래, 오른쪽 혹은 왼쪽으로 인접해 있으며 그 크기가 최대인 영역을 말한다. 위의 경우에서 물에 잠기지 않는 안전한 영역은 5개가 된다(꼭짓점으로만 붙어 있는 두 지점은 인접하지 않는다고 취급한다).","position":{"start":{"line":17,"column":1,"offset":706},"end":{"line":17,"column":152,"offset":857},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":706},"end":{"line":17,"column":152,"offset":857},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"또한 위와 같은 지역에서 높이가 6이하인 지점을 모두 잠기게 만드는 많은 비가 내리면 물에 잠기지 않는 안전한 영역은 아래 그림에서와 같이 네 개가 됨을 확인할 수 있다.","position":{"start":{"line":19,"column":1,"offset":859},"end":{"line":19,"column":96,"offset":954},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":859},"end":{"line":19,"column":96,"offset":954},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"![](","position":{"start":{"line":21,"column":1,"offset":956},"end":{"line":21,"column":5,"offset":960},"indent":[]}},{"type":"link","title":null,"url":"https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/assets/post_images/w3.png\"/>","children":[{"type":"text","value":"https://onlinejudgeimages.s3-ap-northeast-1.amazonaws.com/upload/assets/post_images/w3.png”/>","position":{"start":{"line":21,"column":5,"offset":960},"end":{"line":21,"column":98,"offset":1053},"indent":[]}}],"position":{"start":{"line":21,"column":5,"offset":960},"end":{"line":21,"column":98,"offset":1053},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":956},"end":{"line":21,"column":98,"offset":1053},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"이와 같이 장마철에 내리는 비의 양에 따라서 물에 잠기지 않는 안전한 영역의 개수는 다르게 된다. 위의 예와 같은 지역에서 내리는 비의 양에 따른 모든 경우를 다 조사해 보면 물에 잠기지 않는 안전한 영역의 개수 중에서 최대인 경우는 5임을 알 수 있다.","position":{"start":{"line":23,"column":1,"offset":1055},"end":{"line":23,"column":143,"offset":1197},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1055},"end":{"line":23,"column":143,"offset":1197},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"어떤 지역의 높이 정보가 주어졌을 때, 장마철에 물에 잠기지 않는 안전한 영역의 최대 개수를 계산하는 프로그램을 작성하시오.","position":{"start":{"line":25,"column":1,"offset":1199},"end":{"line":25,"column":70,"offset":1268},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1199},"end":{"line":25,"column":70,"offset":1268},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"입력","position":{"start":{"line":27,"column":3,"offset":1272},"end":{"line":27,"column":5,"offset":1274},"indent":[]}}],"position":{"start":{"line":27,"column":1,"offset":1270},"end":{"line":27,"column":7,"offset":1276},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":27,"column":7,"offset":1276},"end":{"line":27,"column":11,"offset":1280},"indent":[]}},{"type":"text","value":"\n첫째 줄에는 어떤 지역을 나타내는 2차원 배열의 행과 열의 개수를 나타내는 수 N이 입력된다. N은 2 이상 100 이하의 정수이다. 둘째 줄부터 N개의 각 줄에는 2차원 배열의 첫 번째 행부터 N번째 행까지 순서대로 한 행씩 높이 정보가 입력된다. 각 줄에는 각 행의 첫 번째 열부터 N번째 열까지 N개의 높이 정보를 나타내는 자연수가 빈 칸을 사이에 두고 입력된다. 높이는 1이상 100 이하의 정수이다.","position":{"start":{"line":27,"column":11,"offset":1280},"end":{"line":28,"column":229,"offset":1509},"indent":[1]}}],"position":{"start":{"line":27,"column":1,"offset":1270},"end":{"line":28,"column":229,"offset":1509},"indent":[1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"출력","position":{"start":{"line":30,"column":3,"offset":1513},"end":{"line":30,"column":5,"offset":1515},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1511},"end":{"line":30,"column":7,"offset":1517},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":30,"column":7,"offset":1517},"end":{"line":30,"column":11,"offset":1521},"indent":[]}},{"type":"text","value":"\n첫째 줄에 장마철에 물에 잠기지 않는 안전한 영역의 최대 개수를 출력한다.","position":{"start":{"line":30,"column":11,"offset":1521},"end":{"line":31,"column":42,"offset":1563},"indent":[1]}}],"position":{"start":{"line":30,"column":1,"offset":1511},"end":{"line":31,"column":42,"offset":1563},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이","position":{"start":{"line":33,"column":4,"offset":1568},"end":{"line":33,"column":6,"offset":1570},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1565},"end":{"line":33,"column":6,"offset":1570},"indent":[]},"data":{"id":"풀이","htmlAttributes":{"id":"풀이"},"hProperties":{"id":"풀이","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"일반적인 그래프 탐색 문제였지만, 브루트 포스가 살짝 가미되었다. 어차피 높이가 가장 높은 지역의 높이까지 비가오게 되면, 모든 지역이 잠겨버려서 그 이상 비가 내리는 것에 대해서는 고려할 필요가 없다. 그래서 입력을 받을 때, 지역에서 최대 높인에 있는 높이를 우선 구한다. 그리고 DFS를 진행하는데, 비가 아예 오지 않을 경우부터 가장 높은 지역의 높이만큼 올때까지의 경우를 모두 시도해보아야 한다.","position":{"start":{"line":35,"column":1,"offset":1572},"end":{"line":35,"column":227,"offset":1798},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1572},"end":{"line":35,"column":227,"offset":1798},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"예를 들어 주어진 입력중 높이가 가장 높은 지역의 높이가 4라면, 0부터 4의 높이만큼의 비가 왔을 때는 한번씩 다 시도해본다.","position":{"start":{"line":37,"column":1,"offset":1800},"end":{"line":37,"column":72,"offset":1871},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1800},"end":{"line":37,"column":72,"offset":1871},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"매번 맵핑된 배열을 새로운 높이로 초기화하는건 낭비이기 때문에 DFS로 그래프 탐색을 진행할 때, 현재 고려하는 비의 높이를 알려주어서 탐색여부를 결정하는데에 사용하도록 했다.","position":{"start":{"line":39,"column":1,"offset":1873},"end":{"line":39,"column":99,"offset":1971},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":1873},"end":{"line":39,"column":99,"offset":1971},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"안전지역의 갯수는 결국 이 그래프로부터 몇개의 독립적인 트리를 나타내는지를 물어보는 것이기 때문에 전체 배열 원소에 대해 방문하지 않았거나 물에 잠기지 않은 원소들을 루트노드로 해서 트리를 만들어보면 된다.","position":{"start":{"line":41,"column":1,"offset":1973},"end":{"line":41,"column":116,"offset":2088},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1973},"end":{"line":41,"column":116,"offset":2088},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"코드 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"코드","position":{"start":{"line":43,"column":4,"offset":2093},"end":{"line":43,"column":6,"offset":2095},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":2090},"end":{"line":43,"column":6,"offset":2095},"indent":[]},"data":{"id":"코드","htmlAttributes":{"id":"코드"},"hProperties":{"id":"코드","style":"position:relative;"}}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> map <span class=\"token punctuation\">[</span><span class=\"token number\">101</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">101</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> visited <span class=\"token punctuation\">[</span><span class=\"token number\">101</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">101</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> maxSafe <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> N<span class=\"token punctuation\">;</span>\n\nbool <span class=\"token function\">isWall</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>row <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> col <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> row <span class=\"token operator\">>=</span> N <span class=\"token operator\">||</span> col<span class=\"token operator\">>=</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">dfs</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    visited<span class=\"token punctuation\">[</span>row<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> xdir <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> ydir <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> newrow <span class=\"token operator\">=</span> row<span class=\"token operator\">+</span>ydir<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> newcol <span class=\"token operator\">=</span> col<span class=\"token operator\">+</span>xdir<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isWall</span><span class=\"token punctuation\">(</span>newrow<span class=\"token punctuation\">,</span> newcol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>visited<span class=\"token punctuation\">[</span>newrow<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>newcol<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> map<span class=\"token punctuation\">[</span>newrow<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>newcol<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>height <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            visited<span class=\"token punctuation\">[</span>newrow<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>newcol<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> true<span class=\"token punctuation\">;</span>\n            <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>newrow<span class=\"token punctuation\">,</span> newcol<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">reInit</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> N <span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    maxSafe <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> maxh <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> N <span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            maxh <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>maxh<span class=\"token punctuation\">,</span> map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> height <span class=\"token operator\">&lt;=</span> maxh <span class=\"token punctuation\">;</span> height<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> N <span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>height <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    maxSafe<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        result <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>maxSafe<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">reInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":45,"column":1,"offset":2097},"end":{"line":113,"column":4,"offset":3612},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":114,"column":1,"offset":3613}}}}