{"expireTime":9007200877388109000,"key":"transformer-remark-markdown-ast-4ba18419d954eede60a755c638411fd7-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.acmicpc.net/problem/4949","children":[{"type":"text","value":"https://www.acmicpc.net/problem/4949","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":39,"offset":39},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":39,"offset":39},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":39,"offset":39},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":39,"offset":39},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":44},"end":{"line":4,"column":6,"offset":46},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":41},"end":{"line":4,"column":6,"offset":46},"indent":[]},"data":{"id":"문제","htmlAttributes":{"id":"문제"},"hProperties":{"id":"문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"세계는 균형이 잘 잡혀있어야 한다. 양과 음, 빛과 어둠 그리고 왼쪽 괄호와 오른쪽 괄호처럼 말이다.","position":{"start":{"line":6,"column":1,"offset":48},"end":{"line":6,"column":57,"offset":104},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":48},"end":{"line":6,"column":57,"offset":104},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"정민이의 임무는 어떤 문자열이 주어졌을 때, 괄호들의 균형이 잘 맞춰져 있는지 판단하는 프로그램을 짜는 것이다.","position":{"start":{"line":8,"column":1,"offset":106},"end":{"line":8,"column":63,"offset":168},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":106},"end":{"line":8,"column":63,"offset":168},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"문자열에 포함되는 괄호는 소괄호(”()”) 와 대괄호(”[]“)로 2종류이고, 문자열이 균형을 이루는 조건은 아래와 같다.","position":{"start":{"line":10,"column":1,"offset":170},"end":{"line":10,"column":69,"offset":238},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":170},"end":{"line":10,"column":69,"offset":238},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"모든 왼쪽 소괄호(”(“)는 오른쪽 소괄호(”)“)와만 짝을 이뤄야 한다.","position":{"start":{"line":12,"column":3,"offset":242},"end":{"line":12,"column":44,"offset":283},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":242},"end":{"line":12,"column":44,"offset":283},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":240},"end":{"line":12,"column":44,"offset":283},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"모든 왼쪽 대괄호(”","position":{"start":{"line":13,"column":3,"offset":286},"end":{"line":13,"column":14,"offset":297},"indent":[]}},{"type":"linkReference","identifier":"\")는 오른쪽 대괄호(\"","label":"\")는 오른쪽 대괄호(\"","referenceType":"shortcut","children":[{"type":"text","value":"“)는 오른쪽 대괄호(”","position":{"start":{"line":13,"column":15,"offset":298},"end":{"line":13,"column":28,"offset":311},"indent":[]}}],"position":{"start":{"line":13,"column":14,"offset":297},"end":{"line":13,"column":29,"offset":312},"indent":[]}},{"type":"text","value":"“)와만 짝을 이뤄야 한다.","position":{"start":{"line":13,"column":29,"offset":312},"end":{"line":13,"column":44,"offset":327},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":286},"end":{"line":13,"column":44,"offset":327},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":284},"end":{"line":13,"column":44,"offset":327},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"모든 오른쪽 괄호들은 자신과 짝을 이룰 수 있는 왼쪽 괄호가 존재한다.","position":{"start":{"line":14,"column":3,"offset":330},"end":{"line":14,"column":42,"offset":369},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":330},"end":{"line":14,"column":42,"offset":369},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":328},"end":{"line":14,"column":42,"offset":369},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"모든 괄호들의 짝은 1:1 매칭만 가능하다. 즉, 괄호 하나가 둘 이상의 괄호와 짝지어지지 않는다.","position":{"start":{"line":15,"column":3,"offset":372},"end":{"line":15,"column":58,"offset":427},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":372},"end":{"line":15,"column":58,"offset":427},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":370},"end":{"line":15,"column":58,"offset":427},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"짝을 이루는 두 괄호가 있을 때, 그 사이에 있는 문자열도 균형이 잡혀야 한다.","position":{"start":{"line":16,"column":3,"offset":430},"end":{"line":16,"column":47,"offset":474},"indent":[]}}],"position":{"start":{"line":16,"column":3,"offset":430},"end":{"line":16,"column":47,"offset":474},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":428},"end":{"line":16,"column":47,"offset":474},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"정민이를 도와 문자열이 주어졌을 때 균형잡힌 문자열인지 아닌지를 판단해보자.","position":{"start":{"line":17,"column":3,"offset":477},"end":{"line":17,"column":45,"offset":519},"indent":[]}}],"position":{"start":{"line":17,"column":3,"offset":477},"end":{"line":17,"column":45,"offset":519},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":475},"end":{"line":17,"column":45,"offset":519},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":240},"end":{"line":17,"column":45,"offset":519},"indent":[1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이","position":{"start":{"line":19,"column":4,"offset":524},"end":{"line":19,"column":6,"offset":526},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":521},"end":{"line":19,"column":6,"offset":526},"indent":[]},"data":{"id":"풀이","htmlAttributes":{"id":"풀이"},"hProperties":{"id":"풀이","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"모든 괄호문제가 그렇듯이 스택을 활용하면 큰 문제없이 해결할 수 있었다. 한 줄 씩 읽으면서 일반 문자는 다 무시하고 괄호가 나올 때마다 스택을 사용해서 짝이 맞으면 pop 해주고, 문자열의 모든 문자를 검사했을 때 스택이 비어있다면 균형이 맞는 괄호이므로 ","position":{"start":{"line":21,"column":1,"offset":528},"end":{"line":21,"column":145,"offset":672},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">yes</code>","position":{"start":{"line":21,"column":145,"offset":672},"end":{"line":21,"column":150,"offset":677},"indent":[]}},{"type":"text","value":" 스택에 남아있는 괄호가 있다면 균형이 안맞으므로 ","position":{"start":{"line":21,"column":150,"offset":677},"end":{"line":21,"column":178,"offset":705},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">no</code>","position":{"start":{"line":21,"column":178,"offset":705},"end":{"line":21,"column":182,"offset":709},"indent":[]}},{"type":"text","value":"를 출력한다.","position":{"start":{"line":21,"column":182,"offset":709},"end":{"line":21,"column":189,"offset":716},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":528},"end":{"line":21,"column":189,"offset":716},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"코드 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"코드","position":{"start":{"line":23,"column":4,"offset":721},"end":{"line":23,"column":6,"offset":723},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":718},"end":{"line":23,"column":6,"offset":723},"indent":[]},"data":{"id":"코드","htmlAttributes":{"id":"코드"},"hProperties":{"id":"코드","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stack></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    ios_base<span class=\"token operator\">::</span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    string line<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>cin<span class=\"token punctuation\">,</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        stack<span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span><span class=\"token operator\">></span> bucket<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> c <span class=\"token operator\">:</span> line<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bucket<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">==</span> <span class=\"token string\">')'</span> <span class=\"token operator\">&amp;&amp;</span> bucket<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'('</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                bucket<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bucket<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">==</span> <span class=\"token string\">']'</span> <span class=\"token operator\">&amp;&amp;</span> bucket<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">'['</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                bucket<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">==</span> <span class=\"token string\">'('</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span><span class=\"token string\">'['</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span> <span class=\"token string\">')'</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span> <span class=\"token string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                bucket<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bucket<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"yes\\n\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"no\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":25,"column":1,"offset":725},"end":{"line":56,"column":4,"offset":1465},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":57,"column":1,"offset":1466}}}}