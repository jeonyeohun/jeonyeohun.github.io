{"expireTime":9007200877354302000,"key":"transformer-remark-markdown-ast-9295bcc4b98ffa72ccda1daab277b7ca-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://programmers.co.kr/learn/courses/30/lessons/42888#","children":[{"type":"text","value":"https://programmers.co.kr/learn/courses/30/lessons/42888#","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":60,"offset":60},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":60,"offset":60},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":60,"offset":60},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":60,"offset":60},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":65},"end":{"line":4,"column":6,"offset":67},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":62},"end":{"line":4,"column":6,"offset":67},"indent":[]},"data":{"id":"문제","htmlAttributes":{"id":"문제"},"hProperties":{"id":"문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"카카오톡 오픈채팅방에서는 친구가 아닌 사람들과 대화를 할 수 있는데, 본래 닉네임이 아닌 가상의 닉네임을 사용하여 채팅방에 들어갈 수 있다.","position":{"start":{"line":6,"column":1,"offset":69},"end":{"line":6,"column":79,"offset":147},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":69},"end":{"line":6,"column":79,"offset":147},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"신입사원인 김크루는 카카오톡 오픈 채팅방을 개설한 사람을 위해, 다양한 사람들이 들어오고, 나가는 것을 지켜볼 수 있는 관리자창을 만들기로 했다. 채팅방에 누군가 들어오면 다음 메시지가 출력된다.","position":{"start":{"line":8,"column":1,"offset":149},"end":{"line":8,"column":110,"offset":258},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":149},"end":{"line":8,"column":110,"offset":258},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;[닉네임]님이 들어왔습니다.&quot;</code></pre></div>","position":{"start":{"line":10,"column":1,"offset":260},"end":{"line":12,"column":4,"offset":285},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"채팅방에서 누군가 나가면 다음 메시지가 출력된다.","position":{"start":{"line":14,"column":1,"offset":287},"end":{"line":14,"column":28,"offset":314},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":287},"end":{"line":14,"column":28,"offset":314},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;[닉네임]님이 나갔습니다.&quot;</code></pre></div>","position":{"start":{"line":16,"column":1,"offset":316},"end":{"line":18,"column":4,"offset":340},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"채팅방에서 닉네임을 변경하는 방법은 다음과 같이 두 가지이다.","position":{"start":{"line":20,"column":1,"offset":342},"end":{"line":20,"column":35,"offset":376},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":342},"end":{"line":20,"column":35,"offset":376},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"채팅방을 나간 후, 새로운 닉네임으로 다시 들어간다.\n채팅방에서 닉네임을 변경한다.\n닉네임을 변경할 때는 기존에 채팅방에 출력되어 있던 메시지의 닉네임도 전부 변경된다.","position":{"start":{"line":22,"column":1,"offset":378},"end":{"line":24,"column":48,"offset":472},"indent":[1,1]}}],"position":{"start":{"line":22,"column":1,"offset":378},"end":{"line":24,"column":48,"offset":472},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"예를 들어, 채팅방에 “Muzi”와 “Prodo”라는 닉네임을 사용하는 사람이 순서대로 들어오면 채팅방에는 다음과 같이 메시지가 출력된다.","position":{"start":{"line":26,"column":1,"offset":474},"end":{"line":26,"column":78,"offset":551},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":474},"end":{"line":26,"column":78,"offset":551},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;Muzi님이 들어왔습니다.&quot;\n&quot;Prodo님이 들어왔습니다.&quot;</code></pre></div>","position":{"start":{"line":28,"column":1,"offset":553},"end":{"line":31,"column":4,"offset":595},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"채팅방에 있던 사람이 나가면 채팅방에는 다음과 같이 메시지가 남는다.","position":{"start":{"line":33,"column":1,"offset":597},"end":{"line":33,"column":39,"offset":635},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":597},"end":{"line":33,"column":39,"offset":635},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;Muzi님이 들어왔습니다.&quot;\n&quot;Prodo님이 들어왔습니다.&quot;\n&quot;Muzi님이 나갔습니다.&quot;</code></pre></div>","position":{"start":{"line":35,"column":1,"offset":637},"end":{"line":39,"column":4,"offset":695},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Muzi가 나간후 다시 들어올 때, Prodo 라는 닉네임으로 들어올 경우 기존에 채팅방에 남아있던 Muzi도 Prodo로 다음과 같이 변경된다.","position":{"start":{"line":41,"column":1,"offset":697},"end":{"line":41,"column":82,"offset":778},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":697},"end":{"line":41,"column":82,"offset":778},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;Prodo님이 들어왔습니다.&quot;\n&quot;Prodo님이 들어왔습니다.&quot;\n&quot;Prodo님이 나갔습니다.&quot;\n&quot;Prodo님이 들어왔습니다.&quot;</code></pre></div>","position":{"start":{"line":43,"column":1,"offset":780},"end":{"line":48,"column":4,"offset":858},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"채팅방은 중복 닉네임을 허용하기 때문에, 현재 채팅방에는 Prodo라는 닉네임을 사용하는 사람이 두 명이 있다. 이제, 채팅방에 두 번째로 들어왔던 Prodo가 Ryan으로 닉네임을 변경하면 채팅방 메시지는 다음과 같이 변경된다.","position":{"start":{"line":50,"column":1,"offset":860},"end":{"line":50,"column":129,"offset":988},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":860},"end":{"line":50,"column":129,"offset":988},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&quot;Prodo님이 들어왔습니다.&quot;\n&quot;Ryan님이 들어왔습니다.&quot;\n&quot;Prodo님이 나갔습니다.&quot;\n&quot;Prodo님이 들어왔습니다.&quot;</code></pre></div>","position":{"start":{"line":52,"column":1,"offset":990},"end":{"line":57,"column":4,"offset":1067},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"채팅방에 들어오고 나가거나, 닉네임을 변경한 기록이 담긴 문자열 배열 record가 매개변수로 주어질 때, 모든 기록이 처리된 후, 최종적으로 방을 개설한 사람이 보게 되는 메시지를 문자열 배열 형태로 return 하도록 solution 함수를 완성하라.","position":{"start":{"line":59,"column":1,"offset":1069},"end":{"line":59,"column":143,"offset":1211},"indent":[]}}],"position":{"start":{"line":59,"column":1,"offset":1069},"end":{"line":59,"column":143,"offset":1211},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이","position":{"start":{"line":61,"column":4,"offset":1216},"end":{"line":61,"column":6,"offset":1218},"indent":[]}}],"position":{"start":{"line":61,"column":1,"offset":1213},"end":{"line":61,"column":6,"offset":1218},"indent":[]},"data":{"id":"풀이","htmlAttributes":{"id":"풀이"},"hProperties":{"id":"풀이","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"해시맵으로 uid에 대한 닉네임을 계속 관리해주기만 하면 되는 문제였다. 문자열을 일정한 딜리미터로 split 하는 로직을 만드는 것이 헷갈려 구글링으로 작성했는데, 다시 정리해보면,","position":{"start":{"line":63,"column":1,"offset":1220},"end":{"line":63,"column":103,"offset":1322},"indent":[]}}],"position":{"start":{"line":63,"column":1,"offset":1220},"end":{"line":63,"column":103,"offset":1322},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">istringstream</code>","position":{"start":{"line":65,"column":4,"offset":1327},"end":{"line":65,"column":19,"offset":1342},"indent":[]}},{"type":"text","value":" 변수를 선언하고 파라메터로 split할 문자열을 넣는다.","position":{"start":{"line":65,"column":19,"offset":1342},"end":{"line":65,"column":51,"offset":1374},"indent":[]}}],"position":{"start":{"line":65,"column":4,"offset":1327},"end":{"line":65,"column":51,"offset":1374},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1324},"end":{"line":65,"column":51,"offset":1374},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"while 문으로 문자열을 ","position":{"start":{"line":66,"column":4,"offset":1378},"end":{"line":66,"column":19,"offset":1393},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">getline</code>","position":{"start":{"line":66,"column":19,"offset":1393},"end":{"line":66,"column":28,"offset":1402},"indent":[]}},{"type":"text","value":" 하면서 첫번째 파라미터로는 생성한 istringstream 변수, 두번째로는 분리된 문자열이 들어갈 문자열 변수, 세번째로는 분리에 사용할 딜리미터를 넣는다.","position":{"start":{"line":66,"column":28,"offset":1402},"end":{"line":66,"column":117,"offset":1491},"indent":[]}}],"position":{"start":{"line":66,"column":4,"offset":1378},"end":{"line":66,"column":117,"offset":1491},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1375},"end":{"line":66,"column":117,"offset":1491},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"한 문자열을 반복문을 통해 분리하므로 두번째 파라미터로 지정된 변수로 분리된 문자열이 들어간다.","position":{"start":{"line":67,"column":4,"offset":1495},"end":{"line":67,"column":57,"offset":1548},"indent":[]}}],"position":{"start":{"line":67,"column":4,"offset":1495},"end":{"line":67,"column":57,"offset":1548},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1492},"end":{"line":67,"column":57,"offset":1548},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"이 문자열을 배열이나 벡터에 삽입하면 split 할 수 있다.","position":{"start":{"line":68,"column":4,"offset":1552},"end":{"line":68,"column":38,"offset":1586},"indent":[]}}],"position":{"start":{"line":68,"column":4,"offset":1552},"end":{"line":68,"column":38,"offset":1586},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1549},"end":{"line":68,"column":38,"offset":1586},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1324},"end":{"line":68,"column":38,"offset":1586},"indent":[1,1,1]}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">    istringstream <span class=\"token function\">ss</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    string stringBuffer<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 분리한 문자열을 담을 변수</span>\n    vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> splitRecord<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 분리된 문자열들을 담을 배열</span>\n\n    <span class=\"token comment\">// 1. istringstream 변수, 2. 분리한 문자열을 담을 변수, 3. 딜리미터 문자</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">,</span> stringBuffer<span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        splitRecord<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>stringBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":70,"column":1,"offset":1588},"end":{"line":79,"column":4,"offset":1869},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"코드 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"코드","position":{"start":{"line":81,"column":4,"offset":1874},"end":{"line":81,"column":6,"offset":1876},"indent":[]}}],"position":{"start":{"line":81,"column":1,"offset":1871},"end":{"line":81,"column":6,"offset":1876},"indent":[]},"data":{"id":"코드","htmlAttributes":{"id":"코드"},"hProperties":{"id":"코드","style":"position:relative;"}}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;map></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sstream></span></span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n\nvector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> record<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> answer<span class=\"token punctuation\">;</span>\n    map<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> string<span class=\"token operator\">></span> uidNameMap<span class=\"token punctuation\">;</span>\n\n    vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> status<span class=\"token punctuation\">;</span>\n    vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> uid<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> op <span class=\"token operator\">:</span> record<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        istringstream <span class=\"token function\">ss</span><span class=\"token punctuation\">(</span>op<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        string stringBuffer<span class=\"token punctuation\">;</span>\n        vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> splitRecord<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>ss<span class=\"token punctuation\">,</span> stringBuffer<span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            splitRecord<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>stringBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>splitRecord<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Change\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            status<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>splitRecord<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            uid<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>splitRecord<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>splitRecord<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Leave\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            uidNameMap<span class=\"token punctuation\">[</span>splitRecord<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> splitRecord<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> status<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        string action <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> action <span class=\"token operator\">=</span> <span class=\"token string\">\"들어왔습니다.\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> action <span class=\"token operator\">=</span> <span class=\"token string\">\"나갔습니다.\"</span><span class=\"token punctuation\">;</span>\n\n        answer<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>uidNameMap<span class=\"token punctuation\">[</span>uid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"님이 \"</span> <span class=\"token operator\">+</span> action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":83,"column":1,"offset":1878},"end":{"line":127,"column":4,"offset":2905},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":128,"column":1,"offset":2906}}}}