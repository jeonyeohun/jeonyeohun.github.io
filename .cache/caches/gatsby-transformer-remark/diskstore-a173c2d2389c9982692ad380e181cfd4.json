{"expireTime":9007200877354303000,"key":"transformer-remark-markdown-ast-3b48182e338c1bf8737f61ed7904b204-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://programmers.co.kr/learn/courses/30/lessons/42586","children":[{"type":"text","value":"https://programmers.co.kr/learn/courses/30/lessons/42586","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":58,"offset":58},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":117,"offset":117},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":117,"offset":117},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":122},"end":{"line":4,"column":6,"offset":124},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":119},"end":{"line":4,"column":6,"offset":124},"indent":[]},"data":{"id":"문제","htmlAttributes":{"id":"문제"},"hProperties":{"id":"문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":128},"end":{"line":6,"column":5,"offset":130},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":126},"end":{"line":6,"column":7,"offset":132},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":6,"column":7,"offset":132},"end":{"line":6,"column":11,"offset":136},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":126},"end":{"line":6,"column":11,"offset":136},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.","position":{"start":{"line":8,"column":1,"offset":138},"end":{"line":8,"column":66,"offset":203},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":138},"end":{"line":8,"column":66,"offset":203},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.","position":{"start":{"line":10,"column":1,"offset":205},"end":{"line":10,"column":99,"offset":303},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":205},"end":{"line":10,"column":99,"offset":303},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.","position":{"start":{"line":12,"column":1,"offset":305},"end":{"line":12,"column":136,"offset":440},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":305},"end":{"line":12,"column":136,"offset":440},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이","position":{"start":{"line":14,"column":4,"offset":445},"end":{"line":14,"column":6,"offset":447},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":442},"end":{"line":14,"column":6,"offset":447},"indent":[]},"data":{"id":"풀이","htmlAttributes":{"id":"풀이"},"hProperties":{"id":"풀이","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"알고리즘은 생각보다 간단하다.","position":{"start":{"line":16,"column":1,"offset":449},"end":{"line":16,"column":17,"offset":465},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":449},"end":{"line":16,"column":17,"offset":465},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"먼저 각 기능 별로 남은 일 수를 구해준다. 이 일 수를 큐에 넣는다.","position":{"start":{"line":18,"column":4,"offset":470},"end":{"line":18,"column":43,"offset":509},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":470},"end":{"line":18,"column":43,"offset":509},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":467},"end":{"line":18,"column":43,"offset":509},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"큐에서 값을 하나씩 꺼내면서 기준이 되는 값보다 큰 값이 나올때까지 pop을 하고 개수를 세어준다.","position":{"start":{"line":19,"column":4,"offset":513},"end":{"line":19,"column":59,"offset":568},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":513},"end":{"line":19,"column":59,"offset":568},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":510},"end":{"line":19,"column":59,"offset":568},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"기준 값보다 큰 값이 나오면 현재까지의 개수를 결과벡터에 저장한다.","position":{"start":{"line":20,"column":4,"offset":572},"end":{"line":20,"column":41,"offset":609},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":572},"end":{"line":20,"column":41,"offset":609},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":569},"end":{"line":20,"column":41,"offset":609},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":467},"end":{"line":20,"column":41,"offset":609},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"코드 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"코드","position":{"start":{"line":22,"column":4,"offset":614},"end":{"line":22,"column":6,"offset":616},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":611},"end":{"line":22,"column":6,"offset":616},"indent":[]},"data":{"id":"코드","htmlAttributes":{"id":"코드"},"hProperties":{"id":"코드","style":"position:relative;"}}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> raw <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;queue></span></span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n\nvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> progresses<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> speeds<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> answer<span class=\"token punctuation\">;</span>\n    queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> lefts<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> progresses<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> leftOver <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">-</span> progresses<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> speeds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span> <span class=\"token operator\">-</span> progresses<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> speeds<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> leftOver<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n        lefts<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>leftOver<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">int</span> now <span class=\"token operator\">=</span> lefts<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>lefts<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>now <span class=\"token operator\">>=</span> lefts<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            lefts<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            answer<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            now <span class=\"token operator\">=</span> lefts<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> answer<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">{</span><span class=\"token operator\">%</span> endraw <span class=\"token operator\">%</span><span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":24,"column":1,"offset":618},"end":{"line":63,"column":4,"offset":1411},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":64,"column":1,"offset":1412}}}}