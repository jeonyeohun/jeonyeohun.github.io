{"expireTime":9007200877354939000,"key":"transformer-remark-markdown-html-ast-140a7dee56b1fd7c774c45a4dda51f90-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.acmicpc.net/problem/9466"},"children":[{"type":"text","value":"https://www.acmicpc.net/problem/9466","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":38,"offset":38}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"문제","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%AC%B8%EC%A0%9C","aria-label":"문제 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":82},"end":{"line":4,"column":6,"offset":84}}}],"position":{"start":{"line":4,"column":1,"offset":79},"end":{"line":4,"column":6,"offset":84}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":88},"end":{"line":6,"column":5,"offset":90}}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":6,"column":7,"offset":92}}},{"type":"raw","value":"<br>","position":{"start":{"line":6,"column":7,"offset":92},"end":{"line":6,"column":11,"offset":96}}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":6,"column":11,"offset":96}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이번 가을학기에 ‘문제 해결’ 강의를 신청한 학생들은 텀 프로젝트를 수행해야 한다. 프로젝트 팀원 수에는 제한이 없다. 심지어 모든 학생들이 동일한 팀의 팀원인 경우와 같이 한 팀만 있을 수도 있다. 프로젝트 팀을 구성하기 위해, 모든 학생들은 프로젝트를 함께하고 싶은 학생을 선택해야 한다. (단, 단 한 명만 선택할 수 있다.) 혼자 하고 싶어하는 학생은 자기 자신을 선택하는 것도 가능하다.","position":{"start":{"line":8,"column":1,"offset":98},"end":{"line":8,"column":222,"offset":319}}}],"position":{"start":{"line":8,"column":1,"offset":98},"end":{"line":8,"column":222,"offset":319}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"학생들이(s1, s2, …, sr)이라 할 때, r=1이고 s1이 s1을 선택하는 경우나, s1이 s2를 선택하고, s2가 s3를 선택하고,…, sr-1이 sr을 선택하고, sr이 s1을 선택하는 경우에만 한 팀이 될 수 있다.","position":{"start":{"line":10,"column":1,"offset":321},"end":{"line":10,"column":132,"offset":452}}}],"position":{"start":{"line":10,"column":1,"offset":321},"end":{"line":10,"column":132,"offset":452}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"예를 들어, 한 반에 7명의 학생이 있다고 하자. 학생들을 1번부터 7번으로 표현할 때, 선택의 결과는 다음과 같다.","position":{"start":{"line":12,"column":1,"offset":454},"end":{"line":12,"column":66,"offset":519}}}],"position":{"start":{"line":12,"column":1,"offset":454},"end":{"line":12,"column":66,"offset":519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"thead","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"1","position":{"start":{"line":14,"column":3,"offset":523},"end":{"line":14,"column":4,"offset":524}}}],"position":{"start":{"line":14,"column":3,"offset":523},"end":{"line":14,"column":6,"offset":526}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"2","position":{"start":{"line":14,"column":9,"offset":529},"end":{"line":14,"column":10,"offset":530}}}],"position":{"start":{"line":14,"column":9,"offset":529},"end":{"line":14,"column":12,"offset":532}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"3","position":{"start":{"line":14,"column":15,"offset":535},"end":{"line":14,"column":16,"offset":536}}}],"position":{"start":{"line":14,"column":15,"offset":535},"end":{"line":14,"column":18,"offset":538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"4","position":{"start":{"line":14,"column":21,"offset":541},"end":{"line":14,"column":22,"offset":542}}}],"position":{"start":{"line":14,"column":21,"offset":541},"end":{"line":14,"column":24,"offset":544}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"5","position":{"start":{"line":14,"column":27,"offset":547},"end":{"line":14,"column":28,"offset":548}}}],"position":{"start":{"line":14,"column":27,"offset":547},"end":{"line":14,"column":30,"offset":550}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"6","position":{"start":{"line":14,"column":33,"offset":553},"end":{"line":14,"column":34,"offset":554}}}],"position":{"start":{"line":14,"column":33,"offset":553},"end":{"line":14,"column":36,"offset":556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"th","properties":{"align":null},"children":[{"type":"text","value":"7","position":{"start":{"line":14,"column":39,"offset":559},"end":{"line":14,"column":40,"offset":560}}}],"position":{"start":{"line":14,"column":39,"offset":559},"end":{"line":14,"column":42,"offset":562}}},{"type":"text","value":"\n"}],"position":{"start":{"line":14,"column":1,"offset":521},"end":{"line":14,"column":44,"offset":564}}},{"type":"text","value":"\n"}],"position":{"start":{"line":14,"column":1,"offset":521},"end":{"line":14,"column":44,"offset":564}}},{"type":"text","value":"\n"},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"3","position":{"start":{"line":16,"column":3,"offset":611},"end":{"line":16,"column":4,"offset":612}}}],"position":{"start":{"line":16,"column":3,"offset":611},"end":{"line":16,"column":6,"offset":614}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"1","position":{"start":{"line":16,"column":9,"offset":617},"end":{"line":16,"column":10,"offset":618}}}],"position":{"start":{"line":16,"column":9,"offset":617},"end":{"line":16,"column":12,"offset":620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"3","position":{"start":{"line":16,"column":15,"offset":623},"end":{"line":16,"column":16,"offset":624}}}],"position":{"start":{"line":16,"column":15,"offset":623},"end":{"line":16,"column":18,"offset":626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"7","position":{"start":{"line":16,"column":21,"offset":629},"end":{"line":16,"column":22,"offset":630}}}],"position":{"start":{"line":16,"column":21,"offset":629},"end":{"line":16,"column":24,"offset":632}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"3","position":{"start":{"line":16,"column":27,"offset":635},"end":{"line":16,"column":28,"offset":636}}}],"position":{"start":{"line":16,"column":27,"offset":635},"end":{"line":16,"column":30,"offset":638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"4","position":{"start":{"line":16,"column":33,"offset":641},"end":{"line":16,"column":34,"offset":642}}}],"position":{"start":{"line":16,"column":33,"offset":641},"end":{"line":16,"column":36,"offset":644}}},{"type":"text","value":"\n"},{"type":"element","tagName":"td","properties":{"align":null},"children":[{"type":"text","value":"6","position":{"start":{"line":16,"column":39,"offset":647},"end":{"line":16,"column":40,"offset":648}}}],"position":{"start":{"line":16,"column":39,"offset":647},"end":{"line":16,"column":42,"offset":650}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":1,"offset":609},"end":{"line":16,"column":44,"offset":652}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":1,"offset":609},"end":{"line":16,"column":44,"offset":652}}},{"type":"text","value":"\n"}],"position":{"start":{"line":14,"column":1,"offset":521},"end":{"line":16,"column":44,"offset":652}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"위의 결과를 통해 (3)과 (4, 7, 6)이 팀을 이룰 수 있다. 1, 2, 5는 어느 팀에도 속하지 않는다.","position":{"start":{"line":18,"column":1,"offset":654},"end":{"line":18,"column":63,"offset":716}}}],"position":{"start":{"line":18,"column":1,"offset":654},"end":{"line":18,"column":63,"offset":716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"주어진 선택의 결과를 보고 어느 프로젝트 팀에도 속하지 않는 학생들의 수를 계산하는 프로그램을 작성하라.","position":{"start":{"line":20,"column":1,"offset":718},"end":{"line":20,"column":59,"offset":776}}}],"position":{"start":{"line":20,"column":1,"offset":718},"end":{"line":20,"column":59,"offset":776}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"입력","position":{"start":{"line":22,"column":3,"offset":780},"end":{"line":22,"column":5,"offset":782}}}],"position":{"start":{"line":22,"column":1,"offset":778},"end":{"line":22,"column":7,"offset":784}}},{"type":"raw","value":"<br>","position":{"start":{"line":22,"column":7,"offset":784},"end":{"line":22,"column":11,"offset":788}}}],"position":{"start":{"line":22,"column":1,"offset":778},"end":{"line":22,"column":11,"offset":788}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스의 첫 줄에는 학생의 수가 정수 n (2 ≤ n ≤ 100,000)으로 주어진다. 각 테스트 케이스의 둘째 줄에는 선택된 학생들의 번호가 주어진다. (모든 학생들은 1부터 n까지 번호가 부여된다.)","position":{"start":{"line":24,"column":1,"offset":790},"end":{"line":24,"column":147,"offset":936}}}],"position":{"start":{"line":24,"column":1,"offset":790},"end":{"line":24,"column":147,"offset":936}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"출력","position":{"start":{"line":26,"column":3,"offset":940},"end":{"line":26,"column":5,"offset":942}}}],"position":{"start":{"line":26,"column":1,"offset":938},"end":{"line":26,"column":7,"offset":944}}},{"type":"raw","value":"<br>","position":{"start":{"line":26,"column":7,"offset":944},"end":{"line":26,"column":11,"offset":948}}}],"position":{"start":{"line":26,"column":1,"offset":938},"end":{"line":26,"column":11,"offset":948}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"각 테스트 케이스마다 한 줄에 출력하고, 각 줄에는 프로젝트 팀에 속하지 못한 학생들의 수를 나타내면 된다.","position":{"start":{"line":28,"column":1,"offset":950},"end":{"line":28,"column":61,"offset":1010}}}],"position":{"start":{"line":28,"column":1,"offset":950},"end":{"line":28,"column":61,"offset":1010}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"풀이","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%ED%92%80%EC%9D%B4","aria-label":"풀이 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"풀이","position":{"start":{"line":30,"column":4,"offset":1015},"end":{"line":30,"column":6,"offset":1017}}}],"position":{"start":{"line":30,"column":1,"offset":1012},"end":{"line":30,"column":6,"offset":1017}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그래프의 사이클을 확인하는 문제였다. 처음에는 아무 생각없이 유니온 파인드로 풀어야겠다고 생각했다가 유향 그래프에서는 유니온 파인드를 사용할 수 없다는 것을 깨닫고 다시 코드를 작성했다.","position":{"start":{"line":32,"column":1,"offset":1019},"end":{"line":32,"column":105,"offset":1123}}}],"position":{"start":{"line":32,"column":1,"offset":1019},"end":{"line":32,"column":105,"offset":1123}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이 문제에서 가장 어려웠던 부분이 사이클을 확인하는 작업을 빠른 시간 안에 마치는 것이다. N^2 도 시간 초과가 난다. 나는 사이클을 찾기 위해 몇가지 시도를 해보았다.","position":{"start":{"line":34,"column":1,"offset":1125},"end":{"line":34,"column":96,"offset":1220}}}],"position":{"start":{"line":34,"column":1,"offset":1125},"end":{"line":34,"column":96,"offset":1220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"사이클이 생기면 역으로 돌아오면서 거쳐온 정점을 세기.","position":{"start":{"line":36,"column":4,"offset":1225},"end":{"line":36,"column":34,"offset":1255}}}],"position":{"start":{"line":36,"column":4,"offset":1225},"end":{"line":36,"column":34,"offset":1255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"완전히 잘못된 논리였다. 만약 1 -> 3 -> 3 이 있다면, 1이 경로에 포함되기 때문에 엉뚱한 정점까지 사이클에 포함된다고 판단해버린다.","position":{"start":{"line":38,"column":6,"offset":1262},"end":{"line":38,"column":85,"offset":1341}}}],"position":{"start":{"line":38,"column":4,"offset":1260},"end":{"line":38,"column":85,"offset":1341}}},{"type":"text","value":"\n"}],"position":{"start":{"line":38,"column":4,"offset":1260},"end":{"line":38,"column":85,"offset":1341}}},{"type":"text","value":"\n"}],"position":{"start":{"line":36,"column":1,"offset":1222},"end":{"line":39,"column":1,"offset":1342}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"사이클을 다시 한번 돌아보면서 사이클에 있는 정점 세기.","position":{"start":{"line":40,"column":4,"offset":1346},"end":{"line":40,"column":35,"offset":1377}}}],"position":{"start":{"line":40,"column":4,"offset":1346},"end":{"line":40,"column":35,"offset":1377}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"사이클이 발생하면 해당 지점을 start로 두고 다시 start로 돌아올 때까지 돌면서 정점의 개수를 세어보는 방법이다. 이 방법을 사용해서 제출했더니 시간초과를 받았다.","position":{"start":{"line":42,"column":6,"offset":1384},"end":{"line":42,"column":101,"offset":1479}}}],"position":{"start":{"line":42,"column":4,"offset":1382},"end":{"line":42,"column":101,"offset":1479}}},{"type":"text","value":"\n"}],"position":{"start":{"line":42,"column":4,"offset":1382},"end":{"line":42,"column":101,"offset":1479}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":1,"offset":1343},"end":{"line":43,"column":1,"offset":1480}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"몇번 이동했는지를 기록하면서 체크하는 방법","position":{"start":{"line":44,"column":4,"offset":1484},"end":{"line":44,"column":27,"offset":1507}}}],"position":{"start":{"line":44,"column":4,"offset":1484},"end":{"line":44,"column":27,"offset":1507}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"하다하다 안돼서 인터넷 블로그를 몇개 찾아보니 생각지도 못한 방법이 있었다. 어떤 출발 정점에서부터 탐색하는 정점이 몇번째로 방문하는지 세어보면 중간에 사이클이 발생하더라도 사이클 내에 있는 정점의 개수가 몇개인지 간단한 수학 연산을 통해 알아낼 수 있다. 예를 들어 1 -> 3 -> 3 이 있다면, 시작점은 count 0, 3은 count 1 일때 마지막 정점의 3이 사이클임을 알게 된다. 따라서 현재 사이클을 시작하는 지점과 사이클을 확정하는 직전 지점의 count를 빼고 1을 더하면 사이클에 포함된 정점의 개수를 알게된다.","position":{"start":{"line":46,"column":6,"offset":1514},"end":{"line":46,"column":304,"offset":1812}}}],"position":{"start":{"line":46,"column":4,"offset":1512},"end":{"line":46,"column":304,"offset":1812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":46,"column":4,"offset":1512},"end":{"line":46,"column":304,"offset":1812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"좀 더 여러가지 예를 들어보자.","position":{"start":{"line":48,"column":4,"offset":1817},"end":{"line":48,"column":21,"offset":1834}}}],"position":{"start":{"line":48,"column":4,"offset":1817},"end":{"line":48,"column":21,"offset":1834}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"1 -> 3 -> 3 은 사이클 확정 직전 지점은 3에서 count가 1이고, 3의 이웃정점을 확인했을 때 다음 정점이 3임을 알게되기 때문에 3이 가진 count인 1을 직전 정정의 count와 빼준다. 따라서 1->3->3 에서 사이클을 이루는 정점의 개수는 ","position":{"start":{"line":50,"column":6,"offset":1841},"end":{"line":50,"column":153,"offset":1988}}},{"type":"raw","value":"<code class=\"language-text\">1 - 1 + 1 = 1</code>","position":{"start":{"line":50,"column":153,"offset":1988},"end":{"line":50,"column":168,"offset":2003}}},{"type":"text","value":" 이 된다.","position":{"start":{"line":50,"column":168,"offset":2003},"end":{"line":50,"column":174,"offset":2009}}}],"position":{"start":{"line":50,"column":4,"offset":1839},"end":{"line":51,"column":1,"offset":2010}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"1 -> 4 -> 7 -> 6 -> 4 의 경우도 마찬가지이다. count는 1 = 0, 4 = 1, 7 = 2, 6 = 3 이다. 따라서 사이클이 발생하는 직전지점인 6과 사이클의 시작지점인 4의 count 를 이용하면, ","position":{"start":{"line":52,"column":6,"offset":2016},"end":{"line":52,"column":131,"offset":2141}}},{"type":"raw","value":"<code class=\"language-text\">3 - 1 + 1 = 3</code>","position":{"start":{"line":52,"column":131,"offset":2141},"end":{"line":52,"column":146,"offset":2156}}},{"type":"text","value":" 로 총 세 개의 정점이 사이클에 포함되어 있음을 확인할 수 있다.","position":{"start":{"line":52,"column":146,"offset":2156},"end":{"line":52,"column":183,"offset":2193}}}],"position":{"start":{"line":52,"column":4,"offset":2014},"end":{"line":52,"column":183,"offset":2193}}},{"type":"text","value":"\n"}],"position":{"start":{"line":50,"column":4,"offset":1839},"end":{"line":52,"column":183,"offset":2193}}},{"type":"text","value":"\n"}],"position":{"start":{"line":44,"column":1,"offset":1481},"end":{"line":52,"column":183,"offset":2193}}},{"type":"text","value":"\n"}],"position":{"start":{"line":36,"column":1,"offset":1222},"end":{"line":52,"column":183,"offset":2193}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"사실 3번 방법을 사용하면 O(N)만에 헤결 할 수 있을 줄 알았는데 시간초과를 받았다. 그래서 문제점을 찾아보던 중, 어차피 정점은 항상 한쌍을 만드는데 adjacency list를 만들고 for 문을 넣어둔 것을 발견했다. 바로 변수로 할당하는거나 for문을 한번 도는거나 시간이 비슷할 줄 알았는데, 반복문 탈출을 위해서는 반복문을 무조건 2번 돌아야하니 바로 변수로 선언하는 것 보다 두배 더 오래걸린다. 아주 간단한 부분이었는데, 놓친게 아쉽다.","position":{"start":{"line":54,"column":1,"offset":2195},"end":{"line":54,"column":255,"offset":2449}}}],"position":{"start":{"line":54,"column":1,"offset":2195},"end":{"line":54,"column":255,"offset":2449}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"코드","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%BD%94%EB%93%9C","aria-label":"코드 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"코드","position":{"start":{"line":56,"column":4,"offset":2454},"end":{"line":56,"column":6,"offset":2456}}}],"position":{"start":{"line":56,"column":1,"offset":2451},"end":{"line":56,"column":6,"offset":2456}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token string\">' '</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> MAX <span class=\"token operator\">=</span> <span class=\"token number\">100001</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> visited<span class=\"token punctuation\">[</span>MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> searchDone<span class=\"token punctuation\">[</span>MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> stepCount<span class=\"token punctuation\">[</span>MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> now<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> origin<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> adj<span class=\"token punctuation\">[</span>MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    visited<span class=\"token punctuation\">[</span>now<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> next <span class=\"token operator\">=</span> adj<span class=\"token punctuation\">[</span>now<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>visited<span class=\"token punctuation\">[</span>next<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        stepCount<span class=\"token punctuation\">[</span>next<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> stepCount<span class=\"token punctuation\">[</span>now<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">,</span> origin<span class=\"token punctuation\">,</span> adj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>searchDone<span class=\"token punctuation\">[</span>next<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cnt <span class=\"token operator\">+=</span> <span class=\"token punctuation\">(</span>stepCount<span class=\"token punctuation\">[</span>now<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> stepCount<span class=\"token punctuation\">[</span>next<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    searchDone<span class=\"token punctuation\">[</span>now<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> T<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>T<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> students<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>students<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> selections<span class=\"token punctuation\">[</span>MAX<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> students <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            searchDone<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            stepCount<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> students <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>selections<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span>students <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>visited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> selections<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> students <span class=\"token operator\">-</span> cnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":58,"column":1,"offset":2458},"end":{"line":119,"column":4,"offset":3583}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":120,"column":1,"offset":3584}}}}