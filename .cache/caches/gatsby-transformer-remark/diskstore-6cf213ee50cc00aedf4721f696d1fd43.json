{"expireTime":9007200877354303000,"key":"transformer-remark-markdown-ast-74e22ca12257504523d1ca28ec4edd90-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.acmicpc.net/problem/20366","children":[{"type":"text","value":"https://www.acmicpc.net/problem/20366","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":39,"offset":39},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":79,"offset":79},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":79,"offset":79},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":84},"end":{"line":4,"column":6,"offset":86},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":81},"end":{"line":4,"column":6,"offset":86},"indent":[]},"data":{"id":"문제","htmlAttributes":{"id":"문제"},"hProperties":{"id":"문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":90},"end":{"line":6,"column":5,"offset":92},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":88},"end":{"line":6,"column":7,"offset":94},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":6,"column":7,"offset":94},"end":{"line":6,"column":11,"offset":98},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":88},"end":{"line":6,"column":11,"offset":98},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"언니 엘자와 동생 안나에게는 N개의 눈덩이가 있다. 각 눈덩이 i (1 ≤ i ≤ N)의 지름은 Hi 이다. 하나의 눈사람은 두 개의 눈덩이로 구성되며, 눈덩이 하나를 아래에 두고 그 눈덩이보다 크지 않은 다른 눈덩이를 쌓아올리는 방식으로 만들 수 있다. 이때, 눈사람의 키는 두 눈덩이 지름의 합과 같다.","position":{"start":{"line":8,"column":1,"offset":100},"end":{"line":8,"column":172,"offset":271},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":100},"end":{"line":8,"column":172,"offset":271},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"엘자와 안나는 눈덩이 N개 중 서로 다른 4개를 골라서 눈사람을 각각 1개씩, 총 2개를 만들려고 한다. 두 자매는 두 눈사람의 키의 차이가 작을수록 두 눈사람의 사이가 좋을 것이라고 믿는다. 우리는 엘자와 안나가 가장 사이좋은 두 눈사람을 만들기 위해서 도와주려고 한다.","position":{"start":{"line":10,"column":1,"offset":273},"end":{"line":10,"column":153,"offset":425},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":273},"end":{"line":10,"column":153,"offset":425},"indent":[]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://upload.acmicpc.net/65c871bd-cf26-4fd7-bda6-91728bbaf742/-/preview/","alt":"눈사람","position":{"start":{"line":12,"column":1,"offset":427},"end":{"line":12,"column":83,"offset":509},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":427},"end":{"line":12,"column":83,"offset":509},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"주어진 N개의 눈덩이를 이용하여 만들 수 있는 두 눈사람의 키 차이 중 최솟값을 구하는 프로그램을 작성하시오.","position":{"start":{"line":14,"column":1,"offset":511},"end":{"line":14,"column":62,"offset":572},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":511},"end":{"line":14,"column":62,"offset":572},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"입력","position":{"start":{"line":16,"column":3,"offset":576},"end":{"line":16,"column":5,"offset":578},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":574},"end":{"line":16,"column":7,"offset":580},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":7,"offset":580},"end":{"line":16,"column":11,"offset":584},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":574},"end":{"line":16,"column":11,"offset":584},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"첫째 줄에 N (4 ≤ N ≤ 600)이 주어진다.","position":{"start":{"line":18,"column":1,"offset":586},"end":{"line":18,"column":29,"offset":614},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":586},"end":{"line":18,"column":29,"offset":614},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"둘째 줄에는 각 눈덩이 i (1 ≤ i ≤ N)의 지름을 의미하는 정수 Hi (1 ≤ Hi ≤ 109)가 공백으로 구분되어 주어진다.","position":{"start":{"line":20,"column":1,"offset":616},"end":{"line":20,"column":75,"offset":690},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":616},"end":{"line":20,"column":75,"offset":690},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"출력","position":{"start":{"line":22,"column":3,"offset":694},"end":{"line":22,"column":5,"offset":696},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":692},"end":{"line":22,"column":7,"offset":698},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":22,"column":7,"offset":698},"end":{"line":22,"column":11,"offset":702},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":692},"end":{"line":22,"column":11,"offset":702},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"만들 수 있는 두 눈사람의 키 차이 중 최솟값을 나타내는 정수를 출력하라.","position":{"start":{"line":24,"column":1,"offset":704},"end":{"line":24,"column":42,"offset":745},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":704},"end":{"line":24,"column":42,"offset":745},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이","position":{"start":{"line":26,"column":4,"offset":750},"end":{"line":26,"column":6,"offset":752},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":747},"end":{"line":26,"column":6,"offset":752},"indent":[]},"data":{"id":"풀이","htmlAttributes":{"id":"풀이"},"hProperties":{"id":"풀이","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"첫번째 눈사람에 대해서는 모든 경우의 수를 다 시도하고, 두번째 눈사람에 대해서 투포인터를 적용하여 N^3 으로 풀었다. 먼저 입력받은 눈덩이들의 값을 오름차순으로 정렬한다. 그리고 투 포인터의 위치를 start는 0, end 는 N-1로 배열의 마지막을 가르키게 한다. 핵심은 두 눈사람의 차를 항상 첫번째 눈사람을 기준으로 하는 것이다. 두번째 눈사람의 높이가 첫번째 눈사람보다 작으면서 가장 큰 값을 찾아내면 된다. 이제 2중 for 를 돌면서 첫번째 눈사람을 조합하고 남은 눈덩이들로 눈사람을 만들어본다. 이때 두번째 눈사람의 높이가 첫번째보다 작다면, start 값을 증가시켜서 눈 사람의 높이를 증가시켜본다. 만약 두번째 눈사람의 높이가 첫번째보다 크다면, 높이를 줄여줘야하므로 end 값을 감소시켜서 눈덩이를 작게 만든다.","position":{"start":{"line":28,"column":1,"offset":754},"end":{"line":28,"column":412,"offset":1165},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":754},"end":{"line":28,"column":412,"offset":1165},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"두번째 눈사람을 만들때마다 첫번째 눈사람과의 차를 구해서 가장작은 값을 계속 업데이트하면 답을 얻을 수 있다.","position":{"start":{"line":30,"column":1,"offset":1167},"end":{"line":30,"column":62,"offset":1228},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1167},"end":{"line":30,"column":62,"offset":1228},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"코드 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"코드","position":{"start":{"line":32,"column":4,"offset":1233},"end":{"line":32,"column":6,"offset":1235},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1230},"end":{"line":32,"column":6,"offset":1235},"indent":[]},"data":{"id":"코드","htmlAttributes":{"id":"코드"},"hProperties":{"id":"코드","style":"position:relative;"}}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cmath></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;climits></span></span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ios_base<span class=\"token operator\">::</span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> N<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> N<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> snows<span class=\"token punctuation\">[</span><span class=\"token number\">601</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cin <span class=\"token operator\">>></span> snows<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>snows<span class=\"token punctuation\">,</span> snows <span class=\"token operator\">+</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> minDiff <span class=\"token operator\">=</span> INT_MAX<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> N<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">int</span> start <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> end <span class=\"token operator\">=</span> N <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>true<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">==</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    start<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">==</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    start<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">==</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    end<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">==</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    end<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>start <span class=\"token operator\">>=</span> end<span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">int</span> firstPair <span class=\"token operator\">=</span> snows<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> snows<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">int</span> secondPair <span class=\"token operator\">=</span> snows<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> snows<span class=\"token punctuation\">[</span>end<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">int</span> diff <span class=\"token operator\">=</span> <span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>firstPair <span class=\"token operator\">-</span> secondPair<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                minDiff <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>minDiff<span class=\"token punctuation\">,</span> diff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>firstPair <span class=\"token operator\">></span> secondPair<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    start<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    end<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    cout <span class=\"token operator\">&lt;&lt;</span> minDiff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":34,"column":1,"offset":1237},"end":{"line":95,"column":4,"offset":2515},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":96,"column":1,"offset":2516}}}}