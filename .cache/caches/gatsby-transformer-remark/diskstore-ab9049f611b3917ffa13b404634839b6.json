{"expireTime":9007200877354305000,"key":"transformer-remark-markdown-ast-fa9e264d48f5becc870f4dfb77ba3395-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.acmicpc.net/problem/2512","children":[{"type":"text","value":"https://www.acmicpc.net/problem/2512","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":38,"offset":38},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":82},"end":{"line":4,"column":6,"offset":84},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":79},"end":{"line":4,"column":6,"offset":84},"indent":[]},"data":{"id":"문제","htmlAttributes":{"id":"문제"},"hProperties":{"id":"문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":88},"end":{"line":6,"column":5,"offset":90},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":6,"column":7,"offset":92},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":6,"column":7,"offset":92},"end":{"line":6,"column":11,"offset":96},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":6,"column":11,"offset":96},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"국가의 역할 중 하나는 여러 지방의 예산요청을 심사하여 국가의 예산을 분배하는 것이다. 국가예산의 총액은 미리 정해져 있어서 모든 예산요청을 배정해 주기는 어려울 수도 있다. 그래서 정해진 총액 이하에서 가능한 한 최대의 총 예산을 다음과 같은 방법으로 배정한다.","position":{"start":{"line":8,"column":1,"offset":98},"end":{"line":8,"column":148,"offset":245},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":98},"end":{"line":8,"column":148,"offset":245},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"모든 요청이 배정될 수 있는 경우에는 요청한 금액을 그대로 배정한다.\n모든 요청이 배정될 수 없는 경우에는 특정한 정수 상한액을 계산하여 그 이상인 예산요청에는 모두 상한액을 배정한다. 상한액 이하의 예산요청에 대해서는 요청한 금액을 그대로 배정한다.\n예를 들어, 전체 국가예산이 485이고 4개 지방의 예산요청이 각각 120, 110, 140, 150이라고 하자. 이 경우, 상한액을 127로 잡으면, 위의 요청들에 대해서 각각 120, 110, 127, 127을 배정하고 그 합이 484로 가능한 최대가 된다.","position":{"start":{"line":10,"column":1,"offset":247},"end":{"line":12,"column":147,"offset":534},"indent":[1,1]}}],"position":{"start":{"line":10,"column":1,"offset":247},"end":{"line":12,"column":147,"offset":534},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"여러 지방의 예산요청과 국가예산의 총액이 주어졌을 때, 위의 조건을 모두 만족하도록 예산을 배정하는 프로그램을 작성하시오.","position":{"start":{"line":14,"column":1,"offset":536},"end":{"line":14,"column":69,"offset":604},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":536},"end":{"line":14,"column":69,"offset":604},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"입력","position":{"start":{"line":16,"column":3,"offset":608},"end":{"line":16,"column":5,"offset":610},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":606},"end":{"line":16,"column":7,"offset":612},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":7,"offset":612},"end":{"line":16,"column":11,"offset":616},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":606},"end":{"line":16,"column":11,"offset":616},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"첫째 줄에는 지방의 수를 의미하는 정수 N이 주어진다. N은 3 이상 10,000 이하이다. 다음 줄에는 각 지방의 예산요청을 표현하는 N개의 정수가 빈칸을 사이에 두고 주어진다. 이 값들은 모두 1 이상 100,000 이하이다. 그 다음 줄에는 총 예산을 나타내는 정수 M이 주어진다. M은 N 이상 1,000,000,000 이하이다.","position":{"start":{"line":18,"column":1,"offset":618},"end":{"line":18,"column":189,"offset":806},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":618},"end":{"line":18,"column":189,"offset":806},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"출력","position":{"start":{"line":20,"column":3,"offset":810},"end":{"line":20,"column":5,"offset":812},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":808},"end":{"line":20,"column":7,"offset":814},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":20,"column":7,"offset":814},"end":{"line":20,"column":11,"offset":818},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":808},"end":{"line":20,"column":11,"offset":818},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"첫째 줄에는 배정된 예산들 중 최댓값인 정수를 출력한다.","position":{"start":{"line":22,"column":1,"offset":820},"end":{"line":22,"column":32,"offset":851},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":820},"end":{"line":22,"column":32,"offset":851},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이","position":{"start":{"line":24,"column":4,"offset":856},"end":{"line":24,"column":6,"offset":858},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":853},"end":{"line":24,"column":6,"offset":858},"indent":[]},"data":{"id":"풀이","htmlAttributes":{"id":"풀이"},"hProperties":{"id":"풀이","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"이 문제 역시 이분탐색으로 풀 수 있는 문제이다. 이분탐색으로 찾을 대상을 예산 상한으로 설정하고, 한번 상한액을 설정할 때마다 예산 배정 결과를 계산해본다. 만약 계산된 예산이 현재 예산보다 작다면, 상한액을 올려야하기 때문에 head 를 mid + 1 로 바꾸고, 상액이 예산보다 크다면 tail을 mid - 1 로 바꾼다. 이 문제에서는 가능한 최대의 예산을 배정해야하기 때문에 상한액이 딱 떨어지지 않아도 총 예산보다 작다면 정답 후보로 계속 업데이트를 해주어야 한다.","position":{"start":{"line":26,"column":1,"offset":860},"end":{"line":26,"column":267,"offset":1126},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":860},"end":{"line":26,"column":267,"offset":1126},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"코드 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"코드","position":{"start":{"line":28,"column":4,"offset":1131},"end":{"line":28,"column":6,"offset":1133},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":1128},"end":{"line":28,"column":6,"offset":1133},"indent":[]},"data":{"id":"코드","htmlAttributes":{"id":"코드"},"hProperties":{"id":"코드","style":"position:relative;"}}},{"type":"html","lang":"c","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token string\">' '</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> ll<span class=\"token punctuation\">;</span>\n\nvector<span class=\"token operator\">&lt;</span>ll<span class=\"token operator\">></span> budgets<span class=\"token punctuation\">;</span>\n\nll <span class=\"token function\">calcBudget</span> <span class=\"token punctuation\">(</span>ll maxBudget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    ll sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> budget <span class=\"token operator\">:</span> budgets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>budget <span class=\"token operator\">&lt;=</span> maxBudget<span class=\"token punctuation\">)</span> sum <span class=\"token operator\">+=</span> budget<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> sum <span class=\"token operator\">+=</span> maxBudget<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nll <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span>ll head<span class=\"token punctuation\">,</span> ll tail<span class=\"token punctuation\">,</span> ll target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    ll closest <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>head <span class=\"token operator\">&lt;=</span> tail<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        ll mid <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>head <span class=\"token operator\">+</span> tail<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        ll calcResult <span class=\"token operator\">=</span> <span class=\"token function\">calcBudget</span><span class=\"token punctuation\">(</span>mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>calcResult <span class=\"token operator\">></span> target<span class=\"token punctuation\">)</span> tail <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>calcResult <span class=\"token operator\">&lt;=</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            closest <span class=\"token operator\">=</span> mid<span class=\"token punctuation\">;</span>\n            head <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> closest<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> N<span class=\"token punctuation\">;</span>\n    ll M<span class=\"token punctuation\">,</span> longest <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        ll budget<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%lld\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>budget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        budgets<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>budget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        longest <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>longest<span class=\"token punctuation\">,</span> budget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%lld\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%lld\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">binarySearch</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> longest<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":30,"column":1,"offset":1135},"end":{"line":90,"column":4,"offset":2127},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":91,"column":1,"offset":2128}}}}