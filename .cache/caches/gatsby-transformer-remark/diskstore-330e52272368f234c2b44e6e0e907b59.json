{"expireTime":9007200877354938000,"key":"transformer-remark-markdown-ast-7d9ffa0c7d8f81ac812dcafe4bdb7cc6-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.acmicpc.net/problem/1158","children":[{"type":"text","value":"https://www.acmicpc.net/problem/1158","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":38,"offset":38},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":77,"offset":77},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":82},"end":{"line":4,"column":6,"offset":84},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":79},"end":{"line":4,"column":6,"offset":84},"indent":[]},"data":{"id":"문제","htmlAttributes":{"id":"문제"},"hProperties":{"id":"문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":88},"end":{"line":6,"column":5,"offset":90},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":6,"column":7,"offset":92},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":6,"column":7,"offset":92},"end":{"line":6,"column":11,"offset":96},"indent":[]}},{"type":"text","value":"\n요세푸스 문제는 다음과 같다.","position":{"start":{"line":6,"column":11,"offset":96},"end":{"line":7,"column":17,"offset":113},"indent":[1]}}],"position":{"start":{"line":6,"column":1,"offset":86},"end":{"line":7,"column":17,"offset":113},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고, 양의 정수 K(≤ N)가 주어진다. 이제 순서대로 K번째 사람을 제거한다. 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나간다. 이 과정은 N명의 사람이 모두 제거될 때까지 계속된다. 원에서 사람들이 제거되는 순서를 (N, K)-요세푸스 순열이라고 한다. 예를 들어 (7, 3)-요세푸스 순열은 <3, 6, 2, 7, 5, 1, 4>이다.","position":{"start":{"line":9,"column":1,"offset":115},"end":{"line":9,"column":237,"offset":351},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":115},"end":{"line":9,"column":237,"offset":351},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"N과 K가 주어지면 (N, K)-요세푸스 순열을 구하는 프로그램을 작성하시오.","position":{"start":{"line":11,"column":1,"offset":353},"end":{"line":11,"column":44,"offset":396},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":353},"end":{"line":11,"column":44,"offset":396},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"입력","position":{"start":{"line":13,"column":3,"offset":400},"end":{"line":13,"column":5,"offset":402},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":398},"end":{"line":13,"column":7,"offset":404},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":13,"column":7,"offset":404},"end":{"line":13,"column":11,"offset":408},"indent":[]}},{"type":"text","value":"\n첫째 줄에 N과 K가 빈 칸을 사이에 두고 순서대로 주어진다. (1 ≤ K ≤ N ≤ 5,000)\n","position":{"start":{"line":13,"column":11,"offset":408},"end":{"line":15,"column":1,"offset":464},"indent":[1,1]}},{"type":"strong","children":[{"type":"text","value":"출력","position":{"start":{"line":15,"column":3,"offset":466},"end":{"line":15,"column":5,"offset":468},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":464},"end":{"line":15,"column":7,"offset":470},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":15,"column":7,"offset":470},"end":{"line":15,"column":11,"offset":474},"indent":[]}},{"type":"text","value":"\n예제와 같이 요세푸스 순열을 출력한다.","position":{"start":{"line":15,"column":11,"offset":474},"end":{"line":16,"column":22,"offset":496},"indent":[1]}}],"position":{"start":{"line":13,"column":1,"offset":398},"end":{"line":16,"column":22,"offset":496},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이","position":{"start":{"line":18,"column":4,"offset":501},"end":{"line":18,"column":6,"offset":503},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":498},"end":{"line":18,"column":6,"offset":503},"indent":[]},"data":{"id":"풀이","htmlAttributes":{"id":"풀이"},"hProperties":{"id":"풀이","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"더 깔끔하게 풀 수 있는문제인데 리스트를 사용하려고 하다보니까 요상하게 풀어버렸다. list 컨테이너는 dynamic access가 되지 않는다는 것을 관과하고 풀다가 계속 에러가 나서 뒤늦게 알게 되었다. 그래도 리스트로 풀고 싶어서 시행착오를 조금 거치긴 했지만 풀었다. 핵심이 된는 부분은 erase 했을 때 iterator 포인터가 가르키는 위치가 방금 삭제한 원소의 다음 위치라는 것과 end에 iterator가 도달하게 되면 다시 begin으로 바꾸어주어야 한다는 것이다.","position":{"start":{"line":20,"column":1,"offset":505},"end":{"line":20,"column":271,"offset":775},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":505},"end":{"line":20,"column":271,"offset":775},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"코드 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"코드","position":{"start":{"line":22,"column":4,"offset":780},"end":{"line":22,"column":6,"offset":782},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":777},"end":{"line":22,"column":6,"offset":782},"indent":[]},"data":{"id":"코드","htmlAttributes":{"id":"코드"},"hProperties":{"id":"코드","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;list></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> N<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">,</span> idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    list<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> numbers<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>N<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> N <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        numbers<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">auto</span> iter <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> answer<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>numbers<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">==</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            answer<span class=\"token punctuation\">[</span>idx<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>iter<span class=\"token punctuation\">;</span>\n            iter <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>iter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            iter<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        iter<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>iter <span class=\"token operator\">==</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> iter <span class=\"token operator\">=</span> numbers<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> N<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d>\"</span><span class=\"token punctuation\">,</span> answer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d, \"</span><span class=\"token punctuation\">,</span> answer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":24,"column":1,"offset":784},"end":{"line":62,"column":4,"offset":1513},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":63,"column":1,"offset":1514}}}}