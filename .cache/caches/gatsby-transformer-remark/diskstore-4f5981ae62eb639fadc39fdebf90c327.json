{"expireTime":9007200877354310000,"key":"transformer-remark-markdown-html-ast-964188f02e6d9026239cb0015cc5e023-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{"id":"integrity-constraints","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#integrity-constraints","aria-label":"integrity constraints permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Integrity Constraints","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":24,"offset":24}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":24,"offset":24}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Integrity Constraint 는 데이터의 무결성을 유지하기 위한 방법이다. 이전 포스트에서 Integrity Constratins 를 설명했지만, SQL 쿼리로 적용하는 내용은 다루지 않았기 때문에 해당 내용을 정리하자.","position":{"start":{"line":4,"column":1,"offset":26},"end":{"line":4,"column":129,"offset":154}}}],"position":{"start":{"line":4,"column":1,"offset":26},"end":{"line":4,"column":129,"offset":154}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"constraints-on-a-single-relation","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#constraints-on-a-single-relation","aria-label":"constraints on a single relation permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Constraints on a Single Relation","position":{"start":{"line":6,"column":3,"offset":158},"end":{"line":6,"column":35,"offset":190}}}],"position":{"start":{"line":6,"column":1,"offset":156},"end":{"line":6,"column":35,"offset":190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"단일한 테이블에 대해 데이터 무결성을 보장하기 위해서 우리는 다음과 같은 SQL 키워드들을 사용할 수 있다.","position":{"start":{"line":8,"column":1,"offset":192},"end":{"line":8,"column":61,"offset":252}}}],"position":{"start":{"line":8,"column":1,"offset":192},"end":{"line":8,"column":61,"offset":252}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"NOT NULL","position":{"start":{"line":10,"column":4,"offset":257},"end":{"line":10,"column":12,"offset":265}}}],"position":{"start":{"line":10,"column":1,"offset":254},"end":{"line":10,"column":12,"offset":265}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"PRIMARY KEY","position":{"start":{"line":11,"column":4,"offset":269},"end":{"line":11,"column":15,"offset":280}}}],"position":{"start":{"line":11,"column":1,"offset":266},"end":{"line":11,"column":15,"offset":280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"UNIQUE","position":{"start":{"line":12,"column":4,"offset":284},"end":{"line":12,"column":10,"offset":290}}}],"position":{"start":{"line":12,"column":1,"offset":281},"end":{"line":12,"column":10,"offset":290}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"CHECK(P)","position":{"start":{"line":13,"column":4,"offset":294},"end":{"line":13,"column":12,"offset":302}}}],"position":{"start":{"line":13,"column":1,"offset":291},"end":{"line":13,"column":12,"offset":302}}},{"type":"text","value":"\n"}],"position":{"start":{"line":10,"column":1,"offset":254},"end":{"line":13,"column":12,"offset":302}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"not-null","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#not-null","aria-label":"not null permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"NOT NULL","position":{"start":{"line":15,"column":4,"offset":307},"end":{"line":15,"column":12,"offset":315}}}],"position":{"start":{"line":15,"column":1,"offset":304},"end":{"line":15,"column":12,"offset":315}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"NOT NULL 은 어떤 attribute 가 NULL 값을 가지는 것을 허용하지 않기 위해 사용된다.","position":{"start":{"line":17,"column":1,"offset":317},"end":{"line":17,"column":58,"offset":374}}}],"position":{"start":{"line":17,"column":1,"offset":317},"end":{"line":17,"column":58,"offset":374}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> student <span class=\"token punctuation\">(</span>\n    name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    phone <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":19,"column":1,"offset":376},"end":{"line":24,"column":4,"offset":465}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이렇게 테이블을 생성하게 되면, phone attribute의 값은 null을 허용하지만 name의 값은 null을 허용하지 않게된다.","position":{"start":{"line":26,"column":1,"offset":467},"end":{"line":26,"column":76,"offset":542}}}],"position":{"start":{"line":26,"column":1,"offset":467},"end":{"line":26,"column":76,"offset":542}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"unqiue","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#unqiue","aria-label":"unqiue permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"UNQIUE","position":{"start":{"line":28,"column":4,"offset":547},"end":{"line":28,"column":10,"offset":553}}}],"position":{"start":{"line":28,"column":1,"offset":544},"end":{"line":28,"column":10,"offset":553}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"UNIQUE 는 어떤 attrubute 가 해당 attribute에 대해 중복된 값을 가지는 것을 허용하지 않게 하는 것을 말한다. 즉, 해당 attribute 를 candidate key로 삼는 것이다. candidate key는 유일성과 최소성을 만족하는 key를 말한다. 해당 attribute 하나를 통해 어떤 tuple을 식별할 수 있게되기 때문에, 유일성과 최소성을 만족한다. 하지만 candidate key는 null 값을 가질 수 있다.","position":{"start":{"line":30,"column":1,"offset":555},"end":{"line":30,"column":253,"offset":807}}}],"position":{"start":{"line":30,"column":1,"offset":555},"end":{"line":30,"column":253,"offset":807}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> student <span class=\"token punctuation\">(</span>\n    name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    SSN <span class=\"token keyword\">VARCHAR</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">,</span>\n    phone <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":32,"column":1,"offset":809},"end":{"line":38,"column":4,"offset":922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이렇게 테이블을 만들면, SSN은 Candidate key 가 되고, 해당 attribute에는 null을 제외한 중복값을 허락하지 않는다.","position":{"start":{"line":40,"column":1,"offset":924},"end":{"line":40,"column":79,"offset":1002}}}],"position":{"start":{"line":40,"column":1,"offset":924},"end":{"line":40,"column":79,"offset":1002}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"check","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#check","aria-label":"check permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"CHECK","position":{"start":{"line":42,"column":4,"offset":1007},"end":{"line":42,"column":9,"offset":1012}}}],"position":{"start":{"line":42,"column":1,"offset":1004},"end":{"line":42,"column":9,"offset":1012}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CHECK 는 어떤 attribute의 Domain을 더 명확하게 특정해주어서 해당 Domain 이 아닌 값이 들어올 수 없게 한다.","position":{"start":{"line":44,"column":1,"offset":1014},"end":{"line":44,"column":75,"offset":1088}}}],"position":{"start":{"line":44,"column":1,"offset":1014},"end":{"line":44,"column":75,"offset":1088}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> student <span class=\"token punctuation\">(</span>\n    name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    SSN <span class=\"token keyword\">VARCHAR</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">,</span>\n    phone <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    nationality <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">CHECK</span> <span class=\"token punctuation\">(</span>nationality <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Korea'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'China'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Japan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":46,"column":1,"offset":1090},"end":{"line":54,"column":4,"offset":1288}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이렇게 테이블을 만들면 nationality attribute 에 대해서는 모든 tuple이 Korea, China, Japan 세 값 중에 하나를 가지고 있어야 하고, 그 이외의 다른 값들은 모두 거절된다.","position":{"start":{"line":56,"column":1,"offset":1290},"end":{"line":56,"column":117,"offset":1406}}}],"position":{"start":{"line":56,"column":1,"offset":1290},"end":{"line":56,"column":117,"offset":1406}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{"id":"referential-integrity","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#referential-integrity","aria-label":"referential integrity permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Referential Integrity","position":{"start":{"line":58,"column":3,"offset":1410},"end":{"line":58,"column":24,"offset":1431}}}],"position":{"start":{"line":58,"column":1,"offset":1408},"end":{"line":58,"column":24,"offset":1431}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"여러 테이블을 관계시키거나 함께 사용할 때, 우리는 Foreign Key 를 사용하게 된다. Foreign Key의 정의는 다음과 같이 할 수 있다.","position":{"start":{"line":60,"column":1,"offset":1433},"end":{"line":60,"column":84,"offset":1516}}}],"position":{"start":{"line":60,"column":1,"offset":1433},"end":{"line":60,"column":84,"offset":1516}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> student <span class=\"token punctuation\">(</span>\n    name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    SSN <span class=\"token keyword\">VARCHAR</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">,</span>\n    phone <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    nationality <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">CHECK</span> <span class=\"token punctuation\">(</span>nationality <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Korea'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'China'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Japan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>SSN<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> Korea\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":62,"column":1,"offset":1518},"end":{"line":71,"column":4,"offset":1755}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"위와 같이 테이블을 만들게 되면, student 테이블에 있는 SSN 이라는 attribute는 Foreign Key 가 되어서 Korea 테이블에 있는 동일한 이름의 attribute를 참조하게 된다. 즉, student 테이블의 SSN이라는 값은 항상 Korea 테이블에 있는 SSN 컬럼에 존재해야한다.","position":{"start":{"line":73,"column":1,"offset":1757},"end":{"line":73,"column":173,"offset":1929}}}],"position":{"start":{"line":73,"column":1,"offset":1757},"end":{"line":73,"column":173,"offset":1929}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"on-deleteupdate-cascade","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#on-deleteupdate-cascade","aria-label":"on deleteupdate cascade permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"ON DELETE/UPDATE CASCADE","position":{"start":{"line":75,"column":4,"offset":1934},"end":{"line":75,"column":28,"offset":1958}}}],"position":{"start":{"line":75,"column":1,"offset":1931},"end":{"line":75,"column":28,"offset":1958}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Foreign key 를 생성하면서 데이터 무결성을 위해 위화 같은 조건을 추가해줄 수 있다.","position":{"start":{"line":77,"column":1,"offset":1960},"end":{"line":77,"column":53,"offset":2012}}}],"position":{"start":{"line":77,"column":1,"offset":1960},"end":{"line":77,"column":53,"offset":2012}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> student <span class=\"token punctuation\">(</span>\n    name <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span>\n    SSN <span class=\"token keyword\">VARCHAR</span> <span class=\"token keyword\">UNIQUE</span><span class=\"token punctuation\">,</span>\n    phone <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    nationality <span class=\"token keyword\">VARCHAR</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">CHECK</span> <span class=\"token punctuation\">(</span>nationality <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'Korea'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'China'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Japan'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">FOREIGN</span> <span class=\"token keyword\">KEY</span> <span class=\"token punctuation\">(</span>SSN<span class=\"token punctuation\">)</span> <span class=\"token keyword\">REFERENCES</span> Korea\n        <span class=\"token keyword\">ON</span> <span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">CASCADE</span>\n        <span class=\"token keyword\">ON</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">CASCADE</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":79,"column":1,"offset":2014},"end":{"line":90,"column":4,"offset":2303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"위 예시에서 만들었던 테이블에 CASCADE 를 추가해주었다. 이렇게 만들어진 student 테이블의 SSN 값은 Korean 테이블의 SSN 값을 참조하고 있다.","position":{"start":{"line":92,"column":1,"offset":2305},"end":{"line":92,"column":92,"offset":2396}}}],"position":{"start":{"line":92,"column":1,"offset":2305},"end":{"line":92,"column":92,"offset":2396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그런데 만약 Korea 테이블의 SSN 에 있던 값 중에 하나가 삭제되었다고 해보자. 이렇게 되면 참조의 대상이 되는 Korea 테아블에서는 해당 데이터가 없어졌는데, 참조하는 student 테이블에는 데이터가 남아있을 수도 있는 상황이 생긴다. Foreign Key 의 값이 항상 참조의 대상이 되는 attribute에 있어야 한다는 조건이 깨지는 것이다.","position":{"start":{"line":94,"column":1,"offset":2398},"end":{"line":94,"column":201,"offset":2598}}}],"position":{"start":{"line":94,"column":1,"offset":2398},"end":{"line":94,"column":201,"offset":2598}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"따라서 DELETE CASCADE 조건을 추가해주면, Korea 테이블에서 참조받는 값을 가진 tuple이 삭제되었을 때, 자동으로 student 테이블에 있는 해당 값을 가진 tuple을 함께 삭제해주게 된다.","position":{"start":{"line":96,"column":1,"offset":2600},"end":{"line":96,"column":119,"offset":2718}}}],"position":{"start":{"line":96,"column":1,"offset":2600},"end":{"line":96,"column":119,"offset":2718}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"비슷한 맥학으로 UPDATE CASCADE 조건을 추가하게 되면, 참조받는 테이블에 있는 값이 새로운 값으로 갱신될 때, 참조를 하고있는 student 테이블에 있는 값도 함께 갱신된다.","position":{"start":{"line":98,"column":1,"offset":2720},"end":{"line":98,"column":105,"offset":2824}}}],"position":{"start":{"line":98,"column":1,"offset":2720},"end":{"line":98,"column":105,"offset":2824}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이렇게 하면 데이터 무결성을 유지할 수 있을 것이다.","position":{"start":{"line":100,"column":1,"offset":2826},"end":{"line":100,"column":30,"offset":2855}}}],"position":{"start":{"line":100,"column":1,"offset":2826},"end":{"line":100,"column":30,"offset":2855}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"self-referencing-table-issue","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#self-referencing-table-issue","aria-label":"self referencing table issue permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Self Referencing Table Issue","position":{"start":{"line":102,"column":4,"offset":2860},"end":{"line":102,"column":32,"offset":2888}}}],"position":{"start":{"line":102,"column":1,"offset":2857},"end":{"line":102,"column":32,"offset":2888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"어떤 테이블은 자기 자신을 참조하고 있을 수도 있다. 이 경우에는 새로운 tuple 들을 테이블에 넣는 것이 데이터 무결성을 쉽게 꺠뜨릴 수도 있다. 이런 시나리오에서는 다음과 같은 작업을 수행함으로 데이터 무결성을 유지할 수 있다.","position":{"start":{"line":104,"column":1,"offset":2890},"end":{"line":104,"column":131,"offset":3020}}}],"position":{"start":{"line":104,"column":1,"offset":2890},"end":{"line":104,"column":131,"offset":3020}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"참조할 데이터가 이미 존재하도록 한다.","position":{"start":{"line":106,"column":4,"offset":3025},"end":{"line":106,"column":25,"offset":3046}}}],"position":{"start":{"line":106,"column":1,"offset":3022},"end":{"line":106,"column":25,"offset":3046}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"모든 foreign key 데이터를 null 로 초기화해두고 모든 tuple을 삽입한 이후에 업데이트한다.","position":{"start":{"line":107,"column":4,"offset":3050},"end":{"line":107,"column":63,"offset":3109}}}],"position":{"start":{"line":107,"column":1,"offset":3047},"end":{"line":107,"column":63,"offset":3109}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Foreign key가 없는 상태로 테이블을 만들고 Foreign key 를 나중에 지정해준다.","position":{"start":{"line":108,"column":4,"offset":3113},"end":{"line":108,"column":57,"offset":3166}}}],"position":{"start":{"line":108,"column":1,"offset":3110},"end":{"line":108,"column":57,"offset":3166}}},{"type":"text","value":"\n"}],"position":{"start":{"line":106,"column":1,"offset":3022},"end":{"line":108,"column":57,"offset":3166}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":109,"column":1,"offset":3167}}}}