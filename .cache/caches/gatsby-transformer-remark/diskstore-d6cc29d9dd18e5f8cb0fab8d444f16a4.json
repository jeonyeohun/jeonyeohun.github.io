{"expireTime":9007200877354305000,"key":"transformer-remark-markdown-html-ast-a02d6bea0c650f1091a6ebd22c6a83c5-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.acmicpc.net/problem/15711"},"children":[{"type":"text","value":"https://www.acmicpc.net/problem/15711","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":39,"offset":39}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":79,"offset":79}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":79,"offset":79}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"문제","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%AC%B8%EC%A0%9C","aria-label":"문제 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":84},"end":{"line":4,"column":6,"offset":86}}}],"position":{"start":{"line":4,"column":1,"offset":81},"end":{"line":4,"column":6,"offset":86}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":90},"end":{"line":6,"column":5,"offset":92}}}],"position":{"start":{"line":6,"column":1,"offset":88},"end":{"line":6,"column":7,"offset":94}}},{"type":"raw","value":"<br>","position":{"start":{"line":6,"column":7,"offset":94},"end":{"line":6,"column":11,"offset":98}}},{"type":"text","value":"\n환상의 나라 디디랜드에서는 인연의 증표로 끈을 하나씩 가지고 있다. 그들은 지극히 평범한 방법으로 이 끈을 이용하여 어떤 두 사람이 환상의 짝꿍인지 판단하는데, 두 사람의 끈을 서로 이어붙이고 그 끈을 다시 길이가 소수인 끈 두개로 정확히 나눌 수 있다면 두 사람은 환상의 짝꿍이라고 한다. 하지만 그들은 길이가 소수인 두개의 끈으로 나눌 수 있는지 판단하는 것이 어려워서 대부분 서로가 인연임을 모르고 그냥 지나간다고 한다. 애석하게도…","position":{"start":{"line":6,"column":11,"offset":98},"end":{"line":7,"column":248,"offset":346}}}],"position":{"start":{"line":6,"column":1,"offset":88},"end":{"line":7,"column":248,"offset":346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그런 그들을 위해서 어떤 두 사람이 환상의 짝꿍인지 판단하는 프로그램을 작성하라.","position":{"start":{"line":9,"column":1,"offset":348},"end":{"line":9,"column":46,"offset":393}}}],"position":{"start":{"line":9,"column":1,"offset":348},"end":{"line":9,"column":46,"offset":393}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"편의상 두 사람의 끈을 이어붙일 때와 나눌 때 손실되는 끈의 길이는 0이라고 가정한다.","position":{"start":{"line":11,"column":1,"offset":395},"end":{"line":11,"column":49,"offset":443}}}],"position":{"start":{"line":11,"column":1,"offset":395},"end":{"line":11,"column":49,"offset":443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"입력","position":{"start":{"line":13,"column":3,"offset":447},"end":{"line":13,"column":5,"offset":449}}}],"position":{"start":{"line":13,"column":1,"offset":445},"end":{"line":13,"column":7,"offset":451}}},{"type":"raw","value":"<br>","position":{"start":{"line":13,"column":7,"offset":451},"end":{"line":13,"column":11,"offset":455}}},{"type":"text","value":"\n첫째 줄에 테스트 케이스의 수 T(1 ≤ T ≤ 500)가 주어진다.","position":{"start":{"line":13,"column":11,"offset":455},"end":{"line":14,"column":39,"offset":494}}}],"position":{"start":{"line":13,"column":1,"offset":445},"end":{"line":14,"column":39,"offset":494}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"둘째 줄부터 T개 줄에 두 사람이 가지고 있는 끈의 길이를 나타내는 정수 A, B가 공백으로 구분되어 주어진다. (1 ≤ A, B ≤ 2 × 1012)","position":{"start":{"line":16,"column":1,"offset":496},"end":{"line":16,"column":85,"offset":580}}}],"position":{"start":{"line":16,"column":1,"offset":496},"end":{"line":16,"column":85,"offset":580}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"출력","position":{"start":{"line":18,"column":3,"offset":584},"end":{"line":18,"column":5,"offset":586}}}],"position":{"start":{"line":18,"column":1,"offset":582},"end":{"line":18,"column":7,"offset":588}}},{"type":"raw","value":"<br>","position":{"start":{"line":18,"column":7,"offset":588},"end":{"line":18,"column":11,"offset":592}}},{"type":"text","value":"\n각 테스트 케이스마다 한 줄씩 두 사람의 끈을 이어붙이고 그 끈을 다시 길이가 소수인 두개의 끈으로 정확히 나눌 수 있다면 YES, 불가능하면 NO를 출력하라.","position":{"start":{"line":18,"column":11,"offset":592},"end":{"line":19,"column":90,"offset":682}}}],"position":{"start":{"line":18,"column":1,"offset":582},"end":{"line":19,"column":90,"offset":682}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"풀이","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%ED%92%80%EC%9D%B4","aria-label":"풀이 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"풀이","position":{"start":{"line":21,"column":4,"offset":687},"end":{"line":21,"column":6,"offset":689}}}],"position":{"start":{"line":21,"column":1,"offset":684},"end":{"line":21,"column":6,"offset":689}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이 문제는 골드바흐의 추측 사용해서 시간을 단축시켜야 하는 문제였다. 골드바흐의 추측은 ","position":{"start":{"line":23,"column":1,"offset":691},"end":{"line":23,"column":50,"offset":740}}},{"type":"raw","value":"<code class=\"language-text\">2를 제외한 모든 짝수는 두 소수의 합을 표현이 가능하다</code>","position":{"start":{"line":23,"column":50,"offset":740},"end":{"line":23,"column":83,"offset":773}}},{"type":"text","value":" 라는 명제인데, 10^18 이하의 숫자에 대해서는 모두 증명되었다. 따라서 입력으로 들어온 두 숫자의 합이 10^18 이하이고, 짝수라면, 소수를 검사해볼 필요없이 항상 ","position":{"start":{"line":23,"column":83,"offset":773},"end":{"line":23,"column":179,"offset":869}}},{"type":"raw","value":"<code class=\"language-text\">YES</code>","position":{"start":{"line":23,"column":179,"offset":869},"end":{"line":23,"column":184,"offset":874}}},{"type":"text","value":" 를 출력할 수 있다.","position":{"start":{"line":23,"column":184,"offset":874},"end":{"line":23,"column":196,"offset":886}}}],"position":{"start":{"line":23,"column":1,"offset":691},"end":{"line":23,"column":196,"offset":886}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"만약 입력으로 들어온 숫자가 홀수일 경우에는 ","position":{"start":{"line":25,"column":1,"offset":888},"end":{"line":25,"column":26,"offset":913}}},{"type":"raw","value":"<code class=\"language-text\">홀수는 항상 짝수와 홀수의 합으로 이루어진다.</code>","position":{"start":{"line":25,"column":26,"offset":913},"end":{"line":25,"column":53,"offset":940}}},{"type":"text","value":" 라는 명제를 이용해서 짝수와 홀수가 각각 소수인지 확인해 볼 수 있다. 그런데 이미 골드바흐의 추측을 통해 ","position":{"start":{"line":25,"column":53,"offset":940},"end":{"line":25,"column":114,"offset":1001}}},{"type":"raw","value":"<code class=\"language-text\">2가 10^18 미만의 짝수 중 유일한 소수</code>","position":{"start":{"line":25,"column":114,"offset":1001},"end":{"line":25,"column":140,"offset":1027}}},{"type":"text","value":"임을 알 수 있게 된다. 따라서 입력으로 받은 두 숫자의 합이 10^18 미만일 때는 ","position":{"start":{"line":25,"column":140,"offset":1027},"end":{"line":25,"column":188,"offset":1075}}},{"type":"raw","value":"<code class=\"language-text\">두 숫자의 합 - 2</code>","position":{"start":{"line":25,"column":188,"offset":1075},"end":{"line":25,"column":201,"offset":1088}}},{"type":"text","value":" 가 소수인지만 확인해보면 된다.","position":{"start":{"line":25,"column":201,"offset":1088},"end":{"line":25,"column":219,"offset":1106}}}],"position":{"start":{"line":25,"column":1,"offset":888},"end":{"line":25,"column":219,"offset":1106}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"우리가 입력으로 받는 A와 B의 최대 크기는 2 ","position":{"start":{"line":27,"column":1,"offset":1108},"end":{"line":27,"column":28,"offset":1135}}},{"type":"text","value":"*","position":{"start":{"line":27,"column":28,"offset":1135},"end":{"line":27,"column":30,"offset":1137}}},{"type":"text","value":" 10^12 이고, 두 입력의 합의 최대 크기는 4 ","position":{"start":{"line":27,"column":30,"offset":1137},"end":{"line":27,"column":59,"offset":1166}}},{"type":"text","value":"*","position":{"start":{"line":27,"column":59,"offset":1166},"end":{"line":27,"column":61,"offset":1168}}},{"type":"text","value":" 10^12 이므로, 에라토스테네스의 체를 이용해서 sqrt(4 ","position":{"start":{"line":27,"column":61,"offset":1168},"end":{"line":27,"column":97,"offset":1204}}},{"type":"text","value":"*","position":{"start":{"line":27,"column":97,"offset":1204},"end":{"line":27,"column":99,"offset":1206}}},{"type":"text","value":" 10^12) 인 2","position":{"start":{"line":27,"column":99,"offset":1206},"end":{"line":27,"column":110,"offset":1217}}},{"type":"text","value":"*","position":{"start":{"line":27,"column":110,"offset":1217},"end":{"line":27,"column":112,"offset":1219}}},{"type":"text","value":"10 ^ 6 = 2000000 에 대한 소수를 미리 구해두고, ","position":{"start":{"line":27,"column":112,"offset":1219},"end":{"line":27,"column":147,"offset":1254}}},{"type":"raw","value":"<code class=\"language-text\">두 숫자의 합 - 2</code>","position":{"start":{"line":27,"column":147,"offset":1254},"end":{"line":27,"column":160,"offset":1267}}},{"type":"text","value":" 가 2000000 이하일 경우는 미리 구해둔 소수로 판별, 이상일 경우에는 2000000 이하의 모든 소수들로 나누어 보아서 소수인지 확인한다.","position":{"start":{"line":27,"column":160,"offset":1267},"end":{"line":27,"column":241,"offset":1348}}}],"position":{"start":{"line":27,"column":1,"offset":1108},"end":{"line":27,"column":241,"offset":1348}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"문제를 풀 때, 메모리를 아끼려고 에라토스테네스의 체를 bool 배열에 표현두고 index를 숫자로 사용했는데 계속 시간초과가 났다. 소수를 뽑아서 배열에 담아두고 사용하는 것이 시간을 더 효율적으로 쓰는 방법이다.","position":{"start":{"line":29,"column":1,"offset":1350},"end":{"line":29,"column":121,"offset":1470}}}],"position":{"start":{"line":29,"column":1,"offset":1350},"end":{"line":29,"column":121,"offset":1470}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"코드","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%BD%94%EB%93%9C","aria-label":"코드 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"코드","position":{"start":{"line":31,"column":4,"offset":1475},"end":{"line":31,"column":6,"offset":1477}}}],"position":{"start":{"line":31,"column":1,"offset":1472},"end":{"line":31,"column":6,"offset":1477}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cmath></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n\nusing namespace std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> MAX <span class=\"token operator\">=</span> <span class=\"token number\">2000000</span><span class=\"token punctuation\">;</span>\nvector<span class=\"token operator\">&lt;</span>bool<span class=\"token operator\">></span> <span class=\"token function\">primes</span><span class=\"token punctuation\">(</span>MAX<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> primeNums<span class=\"token punctuation\">;</span>\n\nbool <span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target <span class=\"token operator\">&lt;=</span> MAX<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> primes<span class=\"token punctuation\">[</span>target<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span>  <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> primeNums<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">%</span> primeNums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> true<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    ios_base <span class=\"token operator\">::</span> <span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span>false<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">int</span> T<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> T<span class=\"token punctuation\">;</span>\n\n    primes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> primes<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>MAX<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> i<span class=\"token operator\">+</span>i <span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> MAX <span class=\"token punctuation\">;</span> j <span class=\"token operator\">+=</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            primes<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> false<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> MAX <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>primes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> primeNums<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>T<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> A<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">;</span>\n        cin <span class=\"token operator\">>></span> A <span class=\"token operator\">>></span> B<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> A <span class=\"token operator\">+</span> B<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"NO\\n\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"YES\\n\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isPrime</span><span class=\"token punctuation\">(</span>sum <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"YES\\n\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"NO\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":33,"column":1,"offset":1479},"end":{"line":88,"column":4,"offset":2545}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":89,"column":1,"offset":2546}}}}