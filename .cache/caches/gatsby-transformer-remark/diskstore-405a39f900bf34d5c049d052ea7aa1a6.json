{"expireTime":9007200877377197000,"key":"transformer-remark-markdown-ast-006de9fefa9b9c98c235a98d8ade6eb4-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.acmicpc.net/problem/1759","children":[{"type":"text","value":"https://www.acmicpc.net/problem/1759","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":39,"offset":39},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":39,"offset":39},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":39,"offset":39},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":39,"offset":39},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":44},"end":{"line":4,"column":6,"offset":46},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":41},"end":{"line":4,"column":6,"offset":46},"indent":[]},"data":{"id":"문제","htmlAttributes":{"id":"문제"},"hProperties":{"id":"문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"바로 어제 최백준 조교가 방 열쇠를 주머니에 넣은 채 깜빡하고 서울로 가 버리는 황당한 상황에 직면한 조교들은, 702호에 새로운 보안 시스템을 설치하기로 하였다. 이 보안 시스템은 열쇠가 아닌 암호로 동작하게 되어 있는 시스템이다.","position":{"start":{"line":6,"column":1,"offset":48},"end":{"line":6,"column":131,"offset":178},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":48},"end":{"line":6,"column":131,"offset":178},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"암호는 서로 다른 L개의 알파벳 소문자들로 구성되며 최소 한 개의 모음(a, e, i, o, u)과 최소 두 개의 자음으로 구성되어 있다고 알려져 있다. 또한 정렬된 문자열을 선호하는 조교들의 성향으로 미루어 보아 암호를 이루는 알파벳이 암호에서 증가하는 순서로 배열되었을 것이라고 추측된다. 즉, abc는 가능성이 있는 암호이지만 bac는 그렇지 않다.","position":{"start":{"line":8,"column":1,"offset":180},"end":{"line":8,"column":199,"offset":378},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":180},"end":{"line":8,"column":199,"offset":378},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"새 보안 시스템에서 조교들이 암호로 사용했을 법한 문자의 종류는 C가지가 있다고 한다. 이 알파벳을 입수한 민식, 영식 형제는 조교들의 방에 침투하기 위해 암호를 추측해 보려고 한다. C개의 문자들이 모두 주어졌을 때, 가능성 있는 암호들을 모두 구하는 프로그램을 작성하시오.","position":{"start":{"line":10,"column":1,"offset":380},"end":{"line":10,"column":155,"offset":534},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":380},"end":{"line":10,"column":155,"offset":534},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이","position":{"start":{"line":12,"column":4,"offset":539},"end":{"line":12,"column":6,"offset":541},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":536},"end":{"line":12,"column":6,"offset":541},"indent":[]},"data":{"id":"풀이","htmlAttributes":{"id":"풀이"},"hProperties":{"id":"풀이","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"백트래킹으로 가능한 오름차순만 허용하며 모든 조합을 찾으면서 한 개 이상의 모음, 두 개 이상의 자음을 가진 문자열만 골라낸다.","position":{"start":{"line":14,"column":1,"offset":543},"end":{"line":14,"column":72,"offset":614},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":543},"end":{"line":14,"column":72,"offset":614},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"코드 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"코드","position":{"start":{"line":16,"column":4,"offset":619},"end":{"line":16,"column":6,"offset":621},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":616},"end":{"line":16,"column":6,"offset":621},"indent":[]},"data":{"id":"코드","htmlAttributes":{"id":"코드"},"hProperties":{"id":"코드","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">bool</span> <span class=\"token function\">checkValidity</span><span class=\"token punctuation\">(</span>string s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> vowelCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> consonantCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> c <span class=\"token operator\">:</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">==</span> <span class=\"token string\">'i'</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'a'</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'e'</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'o'</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'u'</span><span class=\"token punctuation\">)</span> vowelCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> consonantCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> vowelCount <span class=\"token operator\">>=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> consonantCount <span class=\"token operator\">>=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> L<span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> alphas<span class=\"token punctuation\">,</span> string comb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>comb<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">checkValidity</span><span class=\"token punctuation\">(</span>comb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            cout <span class=\"token operator\">&lt;&lt;</span> comb <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> idx <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> alphas<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>comb<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>alphas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> string<span class=\"token operator\">::</span>npos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            comb<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>alphas<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> alphas<span class=\"token punctuation\">,</span> comb<span class=\"token punctuation\">,</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            comb<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    ios_base<span class=\"token operator\">::</span><span class=\"token function\">sync_with_stdio</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cin<span class=\"token punctuation\">.</span><span class=\"token function\">tie</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span><span class=\"token operator\">></span> alphas<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> L<span class=\"token punctuation\">,</span> C<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> L <span class=\"token operator\">>></span> C<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> C <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">char</span> c<span class=\"token punctuation\">;</span>\n        cin <span class=\"token operator\">>></span> c<span class=\"token punctuation\">;</span>\n\n        alphas<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>alphas<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> alphas<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> alphas<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":18,"column":1,"offset":623},"end":{"line":74,"column":4,"offset":1729},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":75,"column":1,"offset":1730}}}}