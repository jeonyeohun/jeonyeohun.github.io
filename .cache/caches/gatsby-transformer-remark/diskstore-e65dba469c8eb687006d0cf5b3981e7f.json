{"expireTime":9007200877354938000,"key":"transformer-remark-markdown-ast-e28fb17d14d030798890b002bad3e9d3-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.acmicpc.net/problem/13549","children":[{"type":"text","value":"https://www.acmicpc.net/problem/13549","position":{"start":{"line":2,"column":2,"offset":2},"end":{"line":2,"column":39,"offset":39},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":79,"offset":79},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":79,"offset":79},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"문제 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"문제","position":{"start":{"line":4,"column":4,"offset":84},"end":{"line":4,"column":6,"offset":86},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":81},"end":{"line":4,"column":6,"offset":86},"indent":[]},"data":{"id":"문제","htmlAttributes":{"id":"문제"},"hProperties":{"id":"문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"문제","position":{"start":{"line":6,"column":3,"offset":90},"end":{"line":6,"column":5,"offset":92},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":88},"end":{"line":6,"column":7,"offset":94},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":6,"column":7,"offset":94},"end":{"line":6,"column":11,"offset":98},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":88},"end":{"line":6,"column":11,"offset":98},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"수빈이는 동생과 숨바꼭질을 하고 있다. 수빈이는 현재 점 N(0 ≤ N ≤ 100,000)에 있고, 동생은 점 K(0 ≤ K ≤ 100,000)에 있다. 수빈이는 걷거나 순간이동을 할 수 있다. 만약, 수빈이의 위치가 X일 때 걷는다면 1초 후에 X-1 또는 X+1로 이동하게 된다. 순간이동을 하는 경우에는 0초 후에 2","position":{"start":{"line":8,"column":1,"offset":100},"end":{"line":8,"column":181,"offset":280},"indent":[]}},{"type":"text","value":"*","position":{"start":{"line":8,"column":181,"offset":280},"end":{"line":8,"column":183,"offset":282},"indent":[]}},{"type":"text","value":"X의 위치로 이동하게 된다.","position":{"start":{"line":8,"column":183,"offset":282},"end":{"line":8,"column":198,"offset":297},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":100},"end":{"line":8,"column":198,"offset":297},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"수빈이와 동생의 위치가 주어졌을 때, 수빈이가 동생을 찾을 수 있는 가장 빠른 시간이 몇 초 후인지 구하는 프로그램을 작성하시오.","position":{"start":{"line":10,"column":1,"offset":299},"end":{"line":10,"column":73,"offset":371},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":299},"end":{"line":10,"column":73,"offset":371},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"입력","position":{"start":{"line":12,"column":3,"offset":375},"end":{"line":12,"column":5,"offset":377},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":373},"end":{"line":12,"column":7,"offset":379},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":12,"column":7,"offset":379},"end":{"line":12,"column":11,"offset":383},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":373},"end":{"line":12,"column":11,"offset":383},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"첫 번째 줄에 수빈이가 있는 위치 N과 동생이 있는 위치 K가 주어진다. N과 K는 정수이다.","position":{"start":{"line":14,"column":1,"offset":385},"end":{"line":14,"column":53,"offset":437},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":385},"end":{"line":14,"column":53,"offset":437},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"출력","position":{"start":{"line":16,"column":3,"offset":441},"end":{"line":16,"column":5,"offset":443},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":439},"end":{"line":16,"column":7,"offset":445},"indent":[]}},{"type":"html","value":"<br>","position":{"start":{"line":16,"column":7,"offset":445},"end":{"line":16,"column":11,"offset":449},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":439},"end":{"line":16,"column":11,"offset":449},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"수빈이가 동생을 찾는 가장 빠른 시간을 출력한다.","position":{"start":{"line":18,"column":1,"offset":451},"end":{"line":18,"column":28,"offset":478},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":451},"end":{"line":18,"column":28,"offset":478},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#풀이","title":null,"children":[],"data":{"hProperties":{"aria-label":"풀이 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"풀이","position":{"start":{"line":20,"column":4,"offset":483},"end":{"line":20,"column":6,"offset":485},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":480},"end":{"line":20,"column":6,"offset":485},"indent":[]},"data":{"id":"풀이","htmlAttributes":{"id":"풀이"},"hProperties":{"id":"풀이","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"간선정보를 직접 만들어서 다익스트라 알고리즘을 적용해야 하는 문제였다. 한 지점에서 갈 수 있는 경우의 수는 +1, -1, X2 가 있기 때문에 이 위치가 유혀한 범위(0 < X < 100001) 라면 우선순위 큐에 넣어준다.","position":{"start":{"line":22,"column":1,"offset":487},"end":{"line":22,"column":127,"offset":613},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":487},"end":{"line":22,"column":127,"offset":613},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"우선순위 큐에 넣을 때는, 기존에 다익스트라에서 사용하던 간선 비용 대신 해당 움직임으로 소요되는 시간을 넣어준다. 따라서 +1, -1 로 이동할 때는 바로 이전 정점의 시간 +1 을 한 시간으로 우선순위 큐에 넣고, 순간이동을 할때는 이전 정점의 시간을 유지한 채로 우선순위 큐에 넣는다.","position":{"start":{"line":24,"column":1,"offset":615},"end":{"line":24,"column":163,"offset":777},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":615},"end":{"line":24,"column":163,"offset":777},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"코드 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"코드","position":{"start":{"line":26,"column":4,"offset":782},"end":{"line":26,"column":6,"offset":784},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":779},"end":{"line":26,"column":6,"offset":784},"indent":[]},"data":{"id":"코드","htmlAttributes":{"id":"코드"},"hProperties":{"id":"코드","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;queue></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;climits></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> dist<span class=\"token punctuation\">[</span><span class=\"token number\">100001</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> N<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Compare</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> a<span class=\"token punctuation\">,</span> pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>first <span class=\"token operator\">></span> b<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">dijkstra</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> start<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    priority_queue<span class=\"token operator\">&lt;</span>pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> vector<span class=\"token operator\">&lt;</span>pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">>></span><span class=\"token punctuation\">,</span> Compare<span class=\"token operator\">></span> pq<span class=\"token punctuation\">;</span>\n    pq<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> start <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pq<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> next <span class=\"token operator\">=</span> pq<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>second<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> costHere <span class=\"token operator\">=</span> pq<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">;</span>\n        pq<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>next <span class=\"token operator\">&lt;</span> <span class=\"token number\">100000</span> <span class=\"token operator\">&amp;&amp;</span> dist<span class=\"token punctuation\">[</span>next <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> costHere <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            dist<span class=\"token punctuation\">[</span>next <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> costHere <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            pq<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> costHere <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> next <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>next <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> dist<span class=\"token punctuation\">[</span>next <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> costHere <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            dist<span class=\"token punctuation\">[</span>next <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> costHere <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            pq<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> costHere <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> next <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>next <span class=\"token operator\">&lt;</span> <span class=\"token number\">50001</span> <span class=\"token operator\">&amp;&amp;</span> dist<span class=\"token punctuation\">[</span>next <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> costHere<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            dist<span class=\"token punctuation\">[</span>next <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> costHere<span class=\"token punctuation\">;</span>\n            pq<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> costHere<span class=\"token punctuation\">,</span> next <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    cin <span class=\"token operator\">>></span> N <span class=\"token operator\">>></span> K<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        dist<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> INT_MAX<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>N <span class=\"token operator\">==</span> K<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"0\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">dijkstra</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    cout <span class=\"token operator\">&lt;&lt;</span> dist<span class=\"token punctuation\">[</span>K<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":28,"column":1,"offset":786},"end":{"line":88,"column":4,"offset":1971},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":89,"column":1,"offset":1972}}}}