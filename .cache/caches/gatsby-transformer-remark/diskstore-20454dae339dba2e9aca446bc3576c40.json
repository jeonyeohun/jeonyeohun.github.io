{"expireTime":9007200877354307000,"key":"transformer-remark-markdown-ast-c2ebb4e5a750ba8f77278d9ca2bae86e-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"참고도서: ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":7,"offset":7},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne","position":{"start":{"line":2,"column":8,"offset":8},"end":{"line":2,"column":90,"offset":90},"indent":[]}}],"position":{"start":{"line":2,"column":7,"offset":7},"end":{"line":2,"column":91,"offset":91},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":91,"offset":91},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#2장---운영체제-구조","title":null,"children":[],"data":{"hProperties":{"aria-label":"2장   운영체제 구조 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"2장 - 운영체제 구조","position":{"start":{"line":4,"column":4,"offset":96},"end":{"line":4,"column":16,"offset":108},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":93},"end":{"line":4,"column":16,"offset":108},"indent":[]},"data":{"id":"2장---운영체제-구조","htmlAttributes":{"id":"2장---운영체제-구조"},"hProperties":{"id":"2장---운영체제-구조","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"2.1 시스템 콜의 목적은 무엇인가?","position":{"start":{"line":6,"column":3,"offset":112},"end":{"line":6,"column":23,"offset":132},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":110},"end":{"line":6,"column":25,"offset":134},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":110},"end":{"line":6,"column":25,"offset":134},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"운영체제에 의해 제공되는 시스템의 서비스를 사용할 수 있는 인터페이스를 제공하는 역할을 한다. 사용자 모드에서 발생하는 시스템 콜은 일반적으로 시스템 콜 인터페이스를 통해 커널모드로 사용모드를 전환하고 전달된 시스템콜의 종류에 따라 정해진 명령어들을 수행하게된다.","position":{"start":{"line":8,"column":3,"offset":138},"end":{"line":8,"column":150,"offset":285},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":138},"end":{"line":8,"column":150,"offset":285},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":136},"end":{"line":8,"column":150,"offset":285},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":136},"end":{"line":8,"column":150,"offset":285},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"2.2 명령 인터프리터의 목적은 무엇인가? 통상 커널에 포함되지 않는 이유는 무엇인가?","position":{"start":{"line":10,"column":3,"offset":289},"end":{"line":10,"column":51,"offset":337},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":287},"end":{"line":10,"column":53,"offset":339},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":287},"end":{"line":10,"column":53,"offset":339},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"명령 인터프리터는 사용자가 지정한 명령을 해석해서 그에 맞는 작업을 운영체제가 수행하도록 한다. 명령 인터프러터는 완전히 사용자를 위한 프로세스 이기 때문에 커널에 포함되지 않고 유저 모드에서 사용이 가능하도록 한다.","position":{"start":{"line":12,"column":3,"offset":343},"end":{"line":12,"column":124,"offset":464},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":343},"end":{"line":12,"column":124,"offset":464},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":341},"end":{"line":12,"column":124,"offset":464},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":341},"end":{"line":12,"column":124,"offset":464},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"2.3 UNIX 시스템에서 새 프로세스를 시작하기 위해 명령 인터프리터나 셸에서 어떤 시스템 콜이 실행되어야 하는가?","position":{"start":{"line":14,"column":3,"offset":468},"end":{"line":14,"column":68,"offset":533},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":466},"end":{"line":14,"column":70,"offset":535},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":466},"end":{"line":14,"column":70,"offset":535},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"셸에 실행 파일이 입력된다.","position":{"start":{"line":16,"column":4,"offset":540},"end":{"line":16,"column":19,"offset":555},"indent":[]}}],"position":{"start":{"line":16,"column":4,"offset":540},"end":{"line":16,"column":19,"offset":555},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":537},"end":{"line":16,"column":19,"offset":555},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"셸이 ","position":{"start":{"line":17,"column":4,"offset":559},"end":{"line":17,"column":7,"offset":562},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">fork()</code>","position":{"start":{"line":17,"column":7,"offset":562},"end":{"line":17,"column":15,"offset":570},"indent":[]}},{"type":"text","value":" 시스템 콜을 사용해서 새로운 프로세스를 만든다.","position":{"start":{"line":17,"column":15,"offset":570},"end":{"line":17,"column":42,"offset":597},"indent":[]}}],"position":{"start":{"line":17,"column":4,"offset":559},"end":{"line":17,"column":42,"offset":597},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":556},"end":{"line":17,"column":42,"offset":597},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"곧바로 ","position":{"start":{"line":18,"column":4,"offset":601},"end":{"line":18,"column":8,"offset":605},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">exec()</code>","position":{"start":{"line":18,"column":8,"offset":605},"end":{"line":18,"column":16,"offset":613},"indent":[]}},{"type":"text","value":" 시스템 콜을 사용해서 로더를 호출한다.","position":{"start":{"line":18,"column":16,"offset":613},"end":{"line":18,"column":38,"offset":635},"indent":[]}}],"position":{"start":{"line":18,"column":4,"offset":601},"end":{"line":18,"column":38,"offset":635},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":598},"end":{"line":18,"column":38,"offset":635},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"호출된 로더는 입력된 프로그램의 이름을 가진 프로세스를 찾는다.","position":{"start":{"line":19,"column":4,"offset":639},"end":{"line":19,"column":39,"offset":674},"indent":[]}}],"position":{"start":{"line":19,"column":4,"offset":639},"end":{"line":19,"column":39,"offset":674},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":636},"end":{"line":19,"column":39,"offset":674},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"찾은 프로세스를 새로 생성한 프로세스의 메모리 공간에 적재시킨다.","position":{"start":{"line":20,"column":4,"offset":678},"end":{"line":20,"column":40,"offset":714},"indent":[]}}],"position":{"start":{"line":20,"column":4,"offset":678},"end":{"line":20,"column":40,"offset":714},"indent":[]}}],"position":{"start":{"line":20,"column":1,"offset":675},"end":{"line":20,"column":40,"offset":714},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":537},"end":{"line":20,"column":40,"offset":714},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"2.4 시스템 프로그램의 목적은 무엇인가?","position":{"start":{"line":22,"column":3,"offset":718},"end":{"line":22,"column":26,"offset":741},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":716},"end":{"line":22,"column":28,"offset":743},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":716},"end":{"line":22,"column":28,"offset":743},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"시스템 프로그램은 컴퓨터 시스템이 시작되어서 종료될 때까지 계속 실행되면서 사용자가 필요로 하는 서비스들을 운영체제와 더불어 제공하는 역할을 한다.","position":{"start":{"line":24,"column":3,"offset":747},"end":{"line":24,"column":85,"offset":829},"indent":[]}}],"position":{"start":{"line":24,"column":3,"offset":747},"end":{"line":24,"column":85,"offset":829},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":745},"end":{"line":24,"column":85,"offset":829},"indent":[]}}],"position":{"start":{"line":24,"column":1,"offset":745},"end":{"line":24,"column":85,"offset":829},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"2.5 시스템 설계시 계층화된 접근 방식의 주요 장점은 무엇인가? 단점은 무엇인가?","position":{"start":{"line":26,"column":3,"offset":833},"end":{"line":26,"column":49,"offset":879},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":831},"end":{"line":26,"column":51,"offset":881},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":831},"end":{"line":26,"column":51,"offset":881},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":true,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"장점: Layered Approach 구조의 장점은 ","position":{"start":{"line":28,"column":4,"offset":886},"end":{"line":28,"column":33,"offset":915},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">디버깅과 구현의 편리함</code>","position":{"start":{"line":28,"column":33,"offset":915},"end":{"line":28,"column":47,"offset":929},"indent":[]}},{"type":"text","value":"에 있다. 각 계층은 자신과 자신의 하위 계층이 가진 서비스와 연산을 이용한다. 따라서 디버깅시에 문제가 있는 위치를 파악하기에 용이하다.","position":{"start":{"line":28,"column":47,"offset":929},"end":{"line":28,"column":124,"offset":1006},"indent":[]}}],"position":{"start":{"line":28,"column":4,"offset":886},"end":{"line":28,"column":124,"offset":1006},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":883},"end":{"line":29,"column":1,"offset":1007},"indent":[1]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"사용자 프로그램이 어떤 서비스를 얻기 위해서 각 계층을 통과해야하기 때문에 이 과정에서 오버헤드가 발생한다.","position":{"start":{"line":30,"column":4,"offset":1011},"end":{"line":30,"column":64,"offset":1071},"indent":[]}}],"position":{"start":{"line":30,"column":4,"offset":1011},"end":{"line":30,"column":64,"offset":1071},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1008},"end":{"line":30,"column":64,"offset":1071},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":883},"end":{"line":30,"column":64,"offset":1071},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"2.6 운영체제에서 제공하는 5가지 서비스를 나열하고 각 서비스가 사용자에게 편의를 제공하는 방법을 설명하라. 사용자 수준 프로그램이 이러한 서비스를 제공할 수 없는 경우는 언제인가?","position":{"start":{"line":32,"column":3,"offset":1075},"end":{"line":32,"column":105,"offset":1177},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1073},"end":{"line":32,"column":107,"offset":1179},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1073},"end":{"line":32,"column":107,"offset":1179},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">사용자 인터페이스</code>","position":{"start":{"line":34,"column":4,"offset":1184},"end":{"line":34,"column":15,"offset":1195},"indent":[]}},{"type":"text","value":": 사용자가 여러 명령을 쉽게 사용할 수 있는 인터페이스를 제공한다. 특히 GUI는 사용자에게 시각적인 경험을 제공하면서 사용자의 사용성을 크게 높인다. 사용자 수준의 프로그램 역시 인터페이스를 제공하지만 이 인터페이스들은 결국 운영체제가 제공하는 인터페이스 위에서 동작한다.","position":{"start":{"line":34,"column":15,"offset":1195},"end":{"line":34,"column":169,"offset":1349},"indent":[]}}],"position":{"start":{"line":34,"column":4,"offset":1184},"end":{"line":34,"column":169,"offset":1349},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1181},"end":{"line":34,"column":169,"offset":1349},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">프로그램 수행</code>","position":{"start":{"line":35,"column":4,"offset":1353},"end":{"line":35,"column":13,"offset":1362},"indent":[]}},{"type":"text","value":": 프로그램을 메모리에 적재하고 실행하는 것은 전적으로 운영체제의 일이다. 사용자 프로그램이 새로운 프로세스를 만들거나 프로세스를 중지시키는 것 역시 우리가 느끼기에는 사용자 수준의 프로그램이 하는 것 처럼 보이지만 결국 해당 프로그램이 만든 시스템 콜에 의해 프로그램의 상태가 운영체제에게 맡겨져 제어된다.","position":{"start":{"line":35,"column":13,"offset":1362},"end":{"line":35,"column":185,"offset":1534},"indent":[]}}],"position":{"start":{"line":35,"column":4,"offset":1353},"end":{"line":35,"column":185,"offset":1534},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1350},"end":{"line":35,"column":185,"offset":1534},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">입출력 연산</code>","position":{"start":{"line":36,"column":4,"offset":1538},"end":{"line":36,"column":12,"offset":1546},"indent":[]}},{"type":"text","value":": I/O 역시 시스템 콜의 집합체이다. 운영체제의 서비스 없이는 불가능하다.","position":{"start":{"line":36,"column":12,"offset":1546},"end":{"line":36,"column":55,"offset":1589},"indent":[]}}],"position":{"start":{"line":36,"column":4,"offset":1538},"end":{"line":36,"column":55,"offset":1589},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":1535},"end":{"line":36,"column":55,"offset":1589},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">파일 시스템 조작</code>","position":{"start":{"line":37,"column":4,"offset":1593},"end":{"line":37,"column":15,"offset":1604},"indent":[]}},{"type":"text","value":": 파일에 관리와 조작도 운영체제에서 제공하는 기능이다. 특히 파일의 권한이나 접근 허용에 대한 부분은 운영체제가 담당하는 매우 중요한 일이다.","position":{"start":{"line":37,"column":15,"offset":1604},"end":{"line":37,"column":95,"offset":1684},"indent":[]}}],"position":{"start":{"line":37,"column":4,"offset":1593},"end":{"line":37,"column":95,"offset":1684},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1590},"end":{"line":37,"column":95,"offset":1684},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"html","value":"<code class=\"language-text\">통신</code>","position":{"start":{"line":38,"column":4,"offset":1688},"end":{"line":38,"column":8,"offset":1692},"indent":[]}},{"type":"text","value":": 시스템 안에서 실행되고 프로세스들간의 통신도 운영체제의 역할이다.","position":{"start":{"line":38,"column":8,"offset":1692},"end":{"line":38,"column":46,"offset":1730},"indent":[]}}],"position":{"start":{"line":38,"column":4,"offset":1688},"end":{"line":38,"column":46,"offset":1730},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":1685},"end":{"line":38,"column":46,"offset":1730},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1181},"end":{"line":38,"column":46,"offset":1730},"indent":[1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":39,"column":1,"offset":1731}}}}