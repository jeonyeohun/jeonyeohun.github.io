{"expireTime":9007200877354938000,"key":"transformer-remark-markdown-ast-a4e73e10557d890550e31af82ed12e9f-gatsby-remark-katexgatsby-remark-imagesgatsby-remark-images-medium-zoomgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-autolink-headersgatsby-remark-emoji-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"참고도서: ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":7,"offset":7},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne","position":{"start":{"line":2,"column":8,"offset":8},"end":{"line":2,"column":90,"offset":90},"indent":[]}}],"position":{"start":{"line":2,"column":7,"offset":7},"end":{"line":2,"column":91,"offset":91},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":91,"offset":91},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#다시-찾아온-생산자-소비자-문제","title":null,"children":[],"data":{"hProperties":{"aria-label":"다시 찾아온 생산자 소비자 문제 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"다시 찾아온 생산자-소비자 문제","position":{"start":{"line":4,"column":4,"offset":96},"end":{"line":4,"column":21,"offset":113},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":93},"end":{"line":4,"column":21,"offset":113},"indent":[]},"data":{"id":"다시-찾아온-생산자-소비자-문제","htmlAttributes":{"id":"다시-찾아온-생산자-소비자-문제"},"hProperties":{"id":"다시-찾아온-생산자-소비자-문제","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"이전에 공부했던 생산자 소비자 문제가 다시 찾아왔다. 생산자-소비자 문제 혹은 유한 버퍼 문제는 어떤 버퍼에 생산자는 계속해서 자원을 넣으려고 하고, 소비자는 계속해서 자원을 빼내려고 할 때, 효과적으로 이 둘의 행동을 제어하는 문제이다. 세마포어를 통해 생산자 소비자 문제를 해결하기 위해 우리에겐 다음과 같은 자료구조가 필요하다","position":{"start":{"line":6,"column":1,"offset":115},"end":{"line":6,"column":186,"offset":300},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":115},"end":{"line":6,"column":186,"offset":300},"indent":[]}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">;</span>\nsemaphore mutex <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 사호배제를 위한 임계구역 진입여부 표시</span>\nsemaphore empty <span class=\"token operator\">=</span> N<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 비어있는 버퍼의 자리 개수</span>\nsemaphore full <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 차있는 버퍼의 자리 개수</span></code></pre></div>","position":{"start":{"line":8,"column":1,"offset":302},"end":{"line":13,"column":4,"offset":445},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"우리가 가지고 있는 유한한 버퍼의 크기가 N일 때, 소비자는 버퍼에서 한번의 하나의 자원을 획득해간다. 이때 empty semaphore는 빈자리가 하나 늘어났기 때문에 1 증가하고, full semaphore는 차 있던 버퍼 한 자리가 비워졌기 때문에 1 감소한다.","position":{"start":{"line":15,"column":1,"offset":447},"end":{"line":15,"column":150,"offset":596},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":447},"end":{"line":15,"column":150,"offset":596},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"세마포어로 유한 버퍼 문제를 구현해보자","position":{"start":{"line":17,"column":1,"offset":598},"end":{"line":17,"column":22,"offset":619},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":598},"end":{"line":17,"column":22,"offset":619},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#생산자producer","title":null,"children":[],"data":{"hProperties":{"aria-label":"생산자producer permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"생산자(Producer)","position":{"start":{"line":19,"column":4,"offset":624},"end":{"line":19,"column":17,"offset":637},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":621},"end":{"line":19,"column":17,"offset":637},"indent":[]},"data":{"id":"생산자producer","htmlAttributes":{"id":"생산자producer"},"hProperties":{"id":"생산자producer","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/* 자원 생성 */</span>\n\n    <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 빈자리가 생길 때까지 대기한다</span>\n    <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 임계구역 진입이 획득될 때까지 대기한다</span>\n\n    <span class=\"token comment\">/* 버퍼에 자원 넣기 */</span>\n\n    <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 임계구역 진입 lock을 푼다</span>\n    <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>full<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 버퍼에 새로 들어간 자원이 있다는 것을 알린다.</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":21,"column":1,"offset":639},"end":{"line":34,"column":4,"offset":876},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Producer의 역할을 자원을 버퍼에 넣는 것이다. 이런 맥락에서 위 코드를 해석해보면 Producer가 하는 일의 과정은 다음과 같다.","position":{"start":{"line":36,"column":1,"offset":878},"end":{"line":36,"column":78,"offset":955},"indent":[]}}],"position":{"start":{"line":36,"column":1,"offset":878},"end":{"line":36,"column":78,"offset":955},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"버퍼에 넣을 자원 정하기","position":{"start":{"line":38,"column":4,"offset":960},"end":{"line":38,"column":17,"offset":973},"indent":[]}}],"position":{"start":{"line":38,"column":4,"offset":960},"end":{"line":38,"column":17,"offset":973},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":957},"end":{"line":38,"column":17,"offset":973},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"버퍼에 빈자리가 있는지 확인, 빈자리가 없다면 대기","position":{"start":{"line":39,"column":4,"offset":977},"end":{"line":39,"column":32,"offset":1005},"indent":[]}}],"position":{"start":{"line":39,"column":4,"offset":977},"end":{"line":39,"column":32,"offset":1005},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":974},"end":{"line":39,"column":32,"offset":1005},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"빈자리가 생기면 ","position":{"start":{"line":40,"column":4,"offset":1009},"end":{"line":40,"column":13,"offset":1018},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">lock 획득</code>","position":{"start":{"line":40,"column":13,"offset":1018},"end":{"line":40,"column":22,"offset":1027},"indent":[]}},{"type":"text","value":" 후 임계구역 진입","position":{"start":{"line":40,"column":22,"offset":1027},"end":{"line":40,"column":32,"offset":1037},"indent":[]}}],"position":{"start":{"line":40,"column":4,"offset":1009},"end":{"line":40,"column":32,"offset":1037},"indent":[]}}],"position":{"start":{"line":40,"column":1,"offset":1006},"end":{"line":40,"column":32,"offset":1037},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"임계구역 내에서 버퍼에 자원 넣기","position":{"start":{"line":41,"column":4,"offset":1041},"end":{"line":41,"column":22,"offset":1059},"indent":[]}}],"position":{"start":{"line":41,"column":4,"offset":1041},"end":{"line":41,"column":22,"offset":1059},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":1038},"end":{"line":41,"column":22,"offset":1059},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"임계구역 탈출","position":{"start":{"line":42,"column":4,"offset":1063},"end":{"line":42,"column":11,"offset":1070},"indent":[]}}],"position":{"start":{"line":42,"column":4,"offset":1063},"end":{"line":42,"column":11,"offset":1070},"indent":[]}}],"position":{"start":{"line":42,"column":1,"offset":1060},"end":{"line":42,"column":11,"offset":1070},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"임계구역을 빠져나오면서 ","position":{"start":{"line":43,"column":4,"offset":1074},"end":{"line":43,"column":17,"offset":1087},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">lock 해제 및 full signal 실행</code>","position":{"start":{"line":43,"column":17,"offset":1087},"end":{"line":43,"column":43,"offset":1113},"indent":[]}}],"position":{"start":{"line":43,"column":4,"offset":1074},"end":{"line":43,"column":43,"offset":1113},"indent":[]}}],"position":{"start":{"line":43,"column":1,"offset":1071},"end":{"line":43,"column":43,"offset":1113},"indent":[]}}],"position":{"start":{"line":38,"column":1,"offset":957},"end":{"line":43,"column":43,"offset":1113},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"결국 생산자가 하는 역할은 빈자리가 생겼을 때 넣을 자원을 준비해두고 빈자리가 생길때까지 대기하다가 빈자리가 생기는 순간에 임계구역으로 진입해서 빈자리에 자원을 넣어주는 것이다.","position":{"start":{"line":45,"column":1,"offset":1115},"end":{"line":45,"column":100,"offset":1214},"indent":[]}}],"position":{"start":{"line":45,"column":1,"offset":1115},"end":{"line":45,"column":100,"offset":1214},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#소비자consumer","title":null,"children":[],"data":{"hProperties":{"aria-label":"소비자consumer permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"소비자(Consumer)","position":{"start":{"line":47,"column":4,"offset":1219},"end":{"line":47,"column":17,"offset":1232},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":1216},"end":{"line":47,"column":17,"offset":1232},"indent":[]},"data":{"id":"소비자consumer","htmlAttributes":{"id":"소비자consumer"},"hProperties":{"id":"소비자consumer","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>full<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 자원 대기</span>\n    <span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// lock 획득</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token comment\">/* 버퍼에서 자원 하나 가져오기. 해당 버퍼는 비워진다. */</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// lock 해제</span>\n    <span class=\"token function\">signal</span><span class=\"token punctuation\">(</span>empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 자원을 하나 가져갔기 때문에 버퍼에 빈자리가 생겼다는 것을 알린다.</span>\n\n    <span class=\"token comment\">/* 가져온 자원을 사용한다 */</span>\n\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":49,"column":1,"offset":1234},"end":{"line":62,"column":4,"offset":1489},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Consumer 의 역할은 버퍼에 남아있는 자원이 있다면, 해당자원을 버퍼에서 꺼내 가져오는 것이다. 이 맥락에서 위 코드를 읽어보면 Consumer의 작업은 다음과 같은 과정으로 이루어진다.","position":{"start":{"line":64,"column":1,"offset":1491},"end":{"line":64,"column":108,"offset":1598},"indent":[]}}],"position":{"start":{"line":64,"column":1,"offset":1491},"end":{"line":64,"column":108,"offset":1598},"indent":[]}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"full semaphore를 읽어서 버퍼에 자원이 있는지 확인","position":{"start":{"line":66,"column":4,"offset":1603},"end":{"line":66,"column":38,"offset":1637},"indent":[]}}],"position":{"start":{"line":66,"column":4,"offset":1603},"end":{"line":66,"column":38,"offset":1637},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1600},"end":{"line":66,"column":38,"offset":1637},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"자원이 있다면 계속 진행, 자원이 없다면 대기","position":{"start":{"line":67,"column":4,"offset":1641},"end":{"line":67,"column":29,"offset":1666},"indent":[]}}],"position":{"start":{"line":67,"column":4,"offset":1641},"end":{"line":67,"column":29,"offset":1666},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":1638},"end":{"line":67,"column":29,"offset":1666},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"자원이 있으면 ","position":{"start":{"line":68,"column":4,"offset":1670},"end":{"line":68,"column":12,"offset":1678},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">lock</code>","position":{"start":{"line":68,"column":12,"offset":1678},"end":{"line":68,"column":18,"offset":1684},"indent":[]}},{"type":"text","value":"을 획득하고 임계구역으로 진입해서 자원을 하나 소비","position":{"start":{"line":68,"column":18,"offset":1684},"end":{"line":68,"column":46,"offset":1712},"indent":[]}}],"position":{"start":{"line":68,"column":4,"offset":1670},"end":{"line":68,"column":46,"offset":1712},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1667},"end":{"line":68,"column":46,"offset":1712},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"임계구역 탈출","position":{"start":{"line":69,"column":4,"offset":1716},"end":{"line":69,"column":11,"offset":1723},"indent":[]}}],"position":{"start":{"line":69,"column":4,"offset":1716},"end":{"line":69,"column":11,"offset":1723},"indent":[]}}],"position":{"start":{"line":69,"column":1,"offset":1713},"end":{"line":69,"column":11,"offset":1723},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"임계구역을 빠져나오면서 ","position":{"start":{"line":70,"column":4,"offset":1727},"end":{"line":70,"column":17,"offset":1740},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">lock 해제 및 empty signal 실행</code>","position":{"start":{"line":70,"column":17,"offset":1740},"end":{"line":70,"column":44,"offset":1767},"indent":[]}}],"position":{"start":{"line":70,"column":4,"offset":1727},"end":{"line":70,"column":44,"offset":1767},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":1724},"end":{"line":70,"column":44,"offset":1767},"indent":[]}}],"position":{"start":{"line":66,"column":1,"offset":1600},"end":{"line":70,"column":44,"offset":1767},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"위와 같이 소비자를 구성하게 되면, 소비자는 버퍼가 오나전히 비워져있지 않다면 버퍼에 접근해서 자원을 하나 가져오게되고, 자원이 빠져나갔다는 것을 signal을 통해 알리게 된다.","position":{"start":{"line":72,"column":1,"offset":1769},"end":{"line":72,"column":101,"offset":1869},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":1769},"end":{"line":72,"column":101,"offset":1869},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#lock-을-함께-사용하는-이유","title":null,"children":[],"data":{"hProperties":{"aria-label":"lock 을 함께 사용하는 이유 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"lock 을 함께 사용하는 이유","position":{"start":{"line":74,"column":4,"offset":1874},"end":{"line":74,"column":21,"offset":1891},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":1871},"end":{"line":74,"column":21,"offset":1891},"indent":[]},"data":{"id":"lock-을-함께-사용하는-이유","htmlAttributes":{"id":"lock-을-함께-사용하는-이유"},"hProperties":{"id":"lock-을-함께-사용하는-이유","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"위 자료구조에서 세마포어가 총 세 개가 사용된다. 비어있는 버퍼의 갯수를 나타내는 ","position":{"start":{"line":76,"column":1,"offset":1893},"end":{"line":76,"column":47,"offset":1939},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">empty</code>","position":{"start":{"line":76,"column":47,"offset":1939},"end":{"line":76,"column":54,"offset":1946},"indent":[]}},{"type":"text","value":", 차 있는 버퍼의 갯수를 나타내는 ","position":{"start":{"line":76,"column":54,"offset":1946},"end":{"line":76,"column":74,"offset":1966},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">full</code>","position":{"start":{"line":76,"column":74,"offset":1966},"end":{"line":76,"column":80,"offset":1972},"indent":[]}},{"type":"text","value":" 그리고 프로세스간 상호 배제를 위해 사용하는 ","position":{"start":{"line":76,"column":80,"offset":1972},"end":{"line":76,"column":106,"offset":1998},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">mutex</code>","position":{"start":{"line":76,"column":106,"offset":1998},"end":{"line":76,"column":113,"offset":2005},"indent":[]}},{"type":"text","value":"이다. 세마포어 변수의 이름이 ","position":{"start":{"line":76,"column":113,"offset":2005},"end":{"line":76,"column":130,"offset":2022},"indent":[]}},{"type":"html","value":"<code class=\"language-text\">mutex</code>","position":{"start":{"line":76,"column":130,"offset":2022},"end":{"line":76,"column":137,"offset":2029},"indent":[]}},{"type":"text","value":" 로 지어져서 헷갈릴 수도 있지만, 이 변수는 binary semaphore이지 mutex lock은 아니다. 근데 왜 굳이 lock 역할을 하는 세마포어가 또 필요할끼?","position":{"start":{"line":76,"column":137,"offset":2029},"end":{"line":76,"column":232,"offset":2124},"indent":[]}}],"position":{"start":{"line":76,"column":1,"offset":1893},"end":{"line":76,"column":232,"offset":2124},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"문제는 full 과 empty의 signal 과 wait 연산에 있다. 두 연산은 그 자체로는 전혀 atomic 한 연산이 아니다. 내부적으로 값도 증가시켜주어야 하고, 대기를 시킬 때는 리스트에 PCB를 연결해주는 것 까지 해야한다. 따라서 signal 에 의해 동시에 여러 프로세스들이 임계구역 진입에 대한 조건을 만족하게 되면, 저마다 대기 큐에서 빠져나오려고 할 텐데, 이 때 binary semaphore를 사용해서 단 하나의 프로세스에게만 진입을 허용한다면, 동시에 여러 프로세스가 임계구역으로 진입하는 문제를 막을 수 있을 것이다.","position":{"start":{"line":78,"column":1,"offset":2126},"end":{"line":78,"column":305,"offset":2430},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":2126},"end":{"line":78,"column":305,"offset":2430},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":79,"column":1,"offset":2431}}}}