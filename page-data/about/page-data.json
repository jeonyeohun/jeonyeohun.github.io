{"componentChunkName":"component---src-pages-about-js","path":"/about/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"2c80a345-4ab1-553e-aaba-c3cbd336d441","excerpt":"Huffman Code Problem 허프만 코드는 문자를 데이터로 표현할 때 더 적은 데이터양을 사용하면서 문자를 표현하기 위해 데이터를 압축하는 방법이다. Basic Idea…","html":"<h1 id=\"huffman-code-problem\" style=\"position:relative;\"><a href=\"#huffman-code-problem\" aria-label=\"huffman code problem permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Huffman Code Problem</h1>\n<p>허프만 코드는 문자를 데이터로 표현할 때 더 적은 데이터양을 사용하면서 문자를 표현하기 위해 데이터를 압축하는 방법이다.</p>\n<h2 id=\"basic-idea\" style=\"position:relative;\"><a href=\"#basic-idea\" aria-label=\"basic idea permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Idea</h2>\n<p>이 방법의 기본적인 아이디어는 문자열를 이진수로 표현할 때, 해당 문장열에서 가장 자주 등장했던 문자를 다른 문자보다 더 짧게 표현하는 것이다. 그런데 이렇게 이진 코드의 길이를 가변으로 만들면, 이진 코드를 다시 문자열로 변환할 때, 어디에서 끊어서 문자를 해독해야하는지 알 수가 없게 된다. 예를 들어 A 라는 문자가 1001 로 표현되었고, B 라는 문자가 100 으로 표현되었다면, 1001001 이라는 코드가 있을 때, 첫 문자를 B로도 해석할 수 있고, A로도 해석할 수 있게된다. 지금은 우리에게 주어진 코드의 길이가 짧아 큰 손해가 없는 것 처럼 보이지만, 엄청나게 긴 문자열을 표현한 이진코드를 해석하게 된다면, 계산에 걸리는 시간은 어마어마할 것이다. 따라서, 이런 문제를 해결하기 위해 Prefix Code 라는 개념을 도입하게 된다.</p>\n<h2 id=\"prefix-free-code\" style=\"position:relative;\"><a href=\"#prefix-free-code\" aria-label=\"prefix free code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prefix Free Code</h2>\n<p>Prefix Free Code 는 어떤 이진 코드의 집합이 서로 접두어가 되지 않은 코드를 말한다. 예를 들면 우리에게 {0, 1, 01, 010} 이라는 이진코드 집합이 있을 때, 0은 01과 010의 접두어가 될 수 있고, 01은 010의 접두어가 될 수 있기 때문에, Prefix Free Code 가 될 수 없다. 하지만 만약 우리가 가진 이진코드 집합이 {00, 010, 100, 101} 이라면, 모든 코드가 서로 다른 코드에 대해 접두어가 될 수 없기 때문에 Prefix Free Code의 조건을 만족한다. 이 개념을 사용해서 Huffman Code는 위에서 언급했던 중복 해석 문제를 해결할 수 있게 되었다.</p>\n<h2 id=\"huffman-code-algorithm\" style=\"position:relative;\"><a href=\"#huffman-code-algorithm\" aria-label=\"huffman code algorithm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Huffman Code Algorithm</h2>\n<h3 id=\"algorithm-flow\" style=\"position:relative;\"><a href=\"#algorithm-flow\" aria-label=\"algorithm flow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Algorithm Flow</h3>\n<p>허프만 코드는 완전이진트리와 그리디 알고리즘을 통해 코드를 만들고 해석한다. 어떤 문자열의 속한 문자의 전체 빈도수가 100이라고 할 때, 각 문자들이 가진 빈도수가 다음과 같다고 하자.</p>\n<table>\n<thead>\n<tr>\n<th>a</th>\n<th>b</th>\n<th>c</th>\n<th>d</th>\n<th>e</th>\n<th>f</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>45</td>\n<td>13</td>\n<td>12</td>\n<td>16</td>\n<td>9</td>\n<td>5</td>\n</tr>\n</tbody>\n</table>\n<p>먼저 이 테이블을 빈도수가 낮은 순으로 정렬을 해주어야 한다. 정렬을 수행하면,</p>\n<table>\n<thead>\n<tr>\n<th>f</th>\n<th>e</th>\n<th>c</th>\n<th>b</th>\n<th>d</th>\n<th>a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>5</td>\n<td>9</td>\n<td>12</td>\n<td>13</td>\n<td>16</td>\n<td>45</td>\n</tr>\n</tbody>\n</table>\n<p>다음과 같은 테이블로 정렬이 된다. 허프만 코드는 빈도수가 낮은 두 개를 하나의 이진트리로 만들어 배열에 다시 넣게 된다. 따라서 빈도수가 제일 낮은 f 와 e 가 합쳐서 새롭게 14로 배열에 들어가게 된다. 따라서 이제 배열은,</p>\n<table>\n<thead>\n<tr>\n<th>f &#x26; e</th>\n<th>c</th>\n<th>b</th>\n<th>d</th>\n<th>a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>14</td>\n<td>12</td>\n<td>13</td>\n<td>16</td>\n<td>45</td>\n</tr>\n</tbody>\n</table>\n<p>가 된다. 다시 빈도수 순으로 정렬해보자.</p>\n<table>\n<thead>\n<tr>\n<th>c</th>\n<th>b</th>\n<th>f &#x26; e</th>\n<th>d</th>\n<th>a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>12</td>\n<td>13</td>\n<td>14</td>\n<td>16</td>\n<td>45</td>\n</tr>\n</tbody>\n</table>\n<p>여기서 빈도수가 가장 낮은 두개를 뽑아서 다시 합쳐준다면,</p>\n<table>\n<thead>\n<tr>\n<th>c &#x26; b</th>\n<th>f &#x26; e</th>\n<th>d</th>\n<th>a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>25</td>\n<td>14</td>\n<td>16</td>\n<td>45</td>\n</tr>\n</tbody>\n</table>\n<p>이렇게 되고, 다시 배열을 정렬하면,</p>\n<table>\n<thead>\n<tr>\n<th>f &#x26; e</th>\n<th>d</th>\n<th>c &#x26; b</th>\n<th>a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>14</td>\n<td>16</td>\n<td>25</td>\n<td>45</td>\n</tr>\n</tbody>\n</table>\n<p>이렇게 된다. 한 번 더 해보자</p>\n<table>\n<thead>\n<tr>\n<th>f &#x26; e &#x26; d</th>\n<th>c &#x26; b</th>\n<th>a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>30</td>\n<td>25</td>\n<td>45</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>( f &#x26; e -> d ) &#x26; (c &#x26; b)</th>\n<th>a</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>55</td>\n<td>45</td>\n</tr>\n</tbody>\n</table>\n<p>이렇게 된다. -> 표시는 서로 부모, 자식 노드 관계임을 표기하고 &#x26; 표시는 서로 형제 관계에 있다는 것을 표기했다.</p>\n<p>최종적으로는 루트 노드 아래에 왼쪽에는 a, 오른쪽에는 ( f &#x26; e -> d ) &#x26; (c &#x26; b) 가 붙어있는 이진트리가 완성된다.</p>\n<p>위 알고리즘을 조금 더 편하게 수행하는 자료구조가 없을까? 당연히 있다.. Min-Priority-Queue(최소우선순위 큐) 를 사용하면 extract 함수를 통해 최소 값을 바로바로 뽑아낼 수 있고 새로 들어가는 합쳐진 노드들도 큐에 들어가자마자 정렬이 되어 관리하기가 용이해 진다.</p>\n<h3 id=\"pseudo-code\" style=\"position:relative;\"><a href=\"#pseudo-code\" aria-label=\"pseudo code permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pseudo Code</h3>\n<p>그렇다면, Huffman Code Algorithm을 Min-Priority-Queue를 사용하는 방법으로 구현하는 pseudo code를 분석해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Huffman-Code (c)\n    n = size(C)\n    Q = C\n\n    for i = 1 to n-1 // 전체 노드들을 모두 다 돌아볼 것\n        do allocalte a new node z // 두 개의 최소등장 횟수 문자를 합칠 노드를 생성\n            left[z] = Extract-Min(Q)  // 왼쪽에 현재 큐에서 최소 빈도수를 뽑아 넣는다\n            right[z] = Extract-Min(Q) // 오른쪽에 현재 큐에서 최소 빈도수를 뽑아 넣는다\n            f[z] = f[left[z]] + f[right[z]] // 새로 만든 노드의 빈도수는 두 자녀노드의 빈도수를 합친 것\n            insert(Q, z) // 큐에 새 노드를 넣자.\n\n    return Extract-Min(Q) // 마지막에 하나남은 노드가 루트노드일 것이다.</code></pre></div>\n<h3 id=\"encoding-and-decoding\" style=\"position:relative;\"><a href=\"#encoding-and-decoding\" aria-label=\"encoding and decoding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Encoding and Decoding</h3>\n<ul>\n<li>문자을 huffman 코드로 만들 때는 위 알고리즘을 통해 트리로 만들고, leaf 노드에 다다를 떄까지 왼쪽 자식노드로 이동할 때는 0, 오른쪽 자식노드로 이동할 때는 1을 코드에 계속 더해준다.</li>\n<li>코드를 문자로 변환할 때는 똑같은 방법으로 leaf 노드에 다다를 때까지 코드가 0일 때는 왼쪽, 1일 때는 오른쪽으로 계속 트리를 따라 이동하고 leaf에 도착하면 그 노드에 저장되어 있는 문자를 읽어들이면 된다.</li>\n</ul>\n<h3 id=\"alogorithm-analysis\" style=\"position:relative;\"><a href=\"#alogorithm-analysis\" aria-label=\"alogorithm analysis permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Alogorithm Analysis</h3>\n<p>우선순위 큐를 사용하기 때문에 시간복잡도는 O(n log n) 이 될 것이다.</p>","frontmatter":{"title":"[알고리즘 정리] 허프만 코드(Huffman Code Problem)","date":"April 13, 2020","lang":null}}},{"node":{"id":"be0daf39-b2cf-53cb-ae30-cc27953f3021","excerpt":"전여훈 (Jeon, Yeo Hun) 저는  개발자 입니다! 🧑🏻‍💻 코더가 아닌 를 지향하는 프로젝트의 좋은 를 고민하는 를 만드는 동료와  성장하는 저는 이렇게 공부했습니다! 📚 한동대학교 전산전자공학부 컴퓨터공학 (2015.03 ~ 2021.08) American Scool…","html":"<h1 id=\"전여훈-jeon-yeo-hun\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%97%AC%ED%9B%88-jeon-yeo-hun\" aria-label=\"전여훈 jeon yeo hun permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전여훈 (Jeon, Yeo Hun)</h1>\n<h2 id=\"저는-code-classlanguage-text______code-개발자-입니다-🧑\" style=\"position:relative;\"><a href=\"#%EC%A0%80%EB%8A%94-code-classlanguage-text______code-%EA%B0%9C%EB%B0%9C%EC%9E%90-%EC%9E%85%EB%8B%88%EB%8B%A4-%F0%9F%A7%91\" aria-label=\"저는 code classlanguage text______code 개발자 입니다 🧑 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>저는 <code class=\"language-text\">______</code> 개발자 입니다! 🧑🏻‍💻</h2>\n<ol>\n<li><strong>코더가 아닌 <code class=\"language-text\">엔지니어</code>를 지향하는</strong></li>\n<li><strong>프로젝트의 좋은 <code class=\"language-text\">구조</code>를 고민하는</strong></li>\n<li><strong><code class=\"language-text\">사용자 친화적인 서비스</code>를 만드는</strong></li>\n<li><strong>동료와 <code class=\"language-text\">함께</code> 성장하는</strong></li>\n</ol>\n<h2 id=\"저는-이렇게-공부했습니다-\" style=\"position:relative;\"><a href=\"#%EC%A0%80%EB%8A%94-%EC%9D%B4%EB%A0%87%EA%B2%8C-%EA%B3%B5%EB%B6%80%ED%96%88%EC%8A%B5%EB%8B%88%EB%8B%A4-\" aria-label=\"저는 이렇게 공부했습니다  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>저는 이렇게 공부했습니다! 📚</h2>\n<ul>\n<li>한동대학교 전산전자공학부 컴퓨터공학 (2015.03 ~ 2021.08)</li>\n<li>American Scool of Ulaanbaatar (2008.09 ~ 2014.06)</li>\n</ul>\n<h2 id=\"그리고-이런-경험도-있어요-♂️\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%9D%B4%EB%9F%B0-%EA%B2%BD%ED%97%98%EB%8F%84-%EC%9E%88%EC%96%B4%EC%9A%94-%E2%99%82%EF%B8%8F\" aria-label=\"그리고 이런 경험도 있어요 ♂️ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그리고 이런 경험도 있어요! 🙋🏻‍♂️</h2>\n<ul>\n<li>2015.03 ~ 2021.06 <strong>포항시 대안교육기관 청소년 자유학교의 <code class=\"language-text\">교사</code></strong></li>\n<li>2019.01 ~ 2019.02 <strong>한동대학교 예비대학 ICT 응용입문 <code class=\"language-text\">TA</code></strong></li>\n<li>2019.03 ~ 2019.06 <strong>한동대학교 ICT 응용입문 <code class=\"language-text\">튜터</code></strong></li>\n<li>2019.03 ~ 2021.06 <strong>한동대학교 지능형 소프트웨어공학 연구실의 <code class=\"language-text\">학부 연구생</code></strong></li>\n<li>2019.09 ~ 2019.12 <strong>한동대학교 C 프로그래밍 <code class=\"language-text\">튜터</code></strong></li>\n<li>2020.05 ~ 2020.08 <strong>교내 SW중심대학 주관, SW 교육 동영상 공모전 <code class=\"language-text\">대상 수상</code></strong></li>\n<li>2020.09 ~ 2021.03 <strong>한동대학교 통일선도대학 사업단의 <code class=\"language-text\">프론트엔드 개발자</code></strong></li>\n<li>2021.03 ~ 2021.06 <strong>한동대학교 Java 프로그래밍 <code class=\"language-text\">TA</code></strong></li>\n</ul>\n<h2 id=\"개발이-좋아서-이런-것들도-만들었어요-\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C%EC%9D%B4-%EC%A2%8B%EC%95%84%EC%84%9C-%EC%9D%B4%EB%9F%B0-%EA%B2%83%EB%93%A4%EB%8F%84-%EB%A7%8C%EB%93%A4%EC%97%88%EC%96%B4%EC%9A%94-\" aria-label=\"개발이 좋아서 이런 것들도 만들었어요  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발이 좋아서 이런 것들도 만들었어요! 👀</h2>\n<h3 id=\"-hisshow--동아리공연-예매-플랫폼-github\" style=\"position:relative;\"><a href=\"#-hisshow--%EB%8F%99%EC%95%84%EB%A6%AC%EA%B3%B5%EC%97%B0-%EC%98%88%EB%A7%A4-%ED%94%8C%EB%9E%AB%ED%8F%BC-github\" aria-label=\" hisshow  동아리공연 예매 플랫폼 github permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💃 hisShow : 동아리공연 예매 플랫폼 [<a href=\"https://github.com/jeonyeohun/hisShow\">GitHub</a>]</h3>\n<blockquote>\n<p>동아리 공연을 쉽게 예약하고 관리하는 모바일 애플리케이션</p>\n</blockquote>\n<ul>\n<li>개발 기간 : 2020.05 ~ 2020.06</li>\n<li>사용 언어 및 기술 : Dart, Flutter, Firebase, FireStore, FireAuth</li>\n<li>\n<p>구현한 내용</p>\n<ul>\n<li>공연 등록/수정/삭제</li>\n<li>공연 좌석 예약</li>\n<li>공연 예약자 관리</li>\n<li>소셜 로그인</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"-kubic--통일-빅데이터-센터-github-홈페이지\" style=\"position:relative;\"><a href=\"#-kubic--%ED%86%B5%EC%9D%BC-%EB%B9%85%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%84%BC%ED%84%B0-github-%ED%99%88%ED%8E%98%EC%9D%B4%EC%A7%80\" aria-label=\" kubic  통일 빅데이터 센터 github 홈페이지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🇰🇷 KUBiC : 통일 빅데이터 센터 [<a href=\"https://github.com/jeonyeohun/TIBigdataFE\">GitHub</a>] [<a href=\"https://kubic.handong.edu/\">홈페이지</a>]</h3>\n<blockquote>\n<p>통일과 북한에 관련된 문헌과 문서를 검색하고 분석하는 웹 서비스</p>\n</blockquote>\n<ul>\n<li>개발 기간 : 2020.09 ~ 2021.03</li>\n<li>사용 언어 및 기술 : TypeScript, JavaScript, Angular, MongoDB, Express</li>\n<li>\n<p>구현한 내용</p>\n<ul>\n<li>검색 로직 구현</li>\n<li>커뮤니티 게시판</li>\n<li>소셜 로그인</li>\n<li>반응협 웹</li>\n<li>프로젝트 재구조화</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"-한동새섬봇--한동대-학생들을-위한-챗봇-github-홈페이지\" style=\"position:relative;\"><a href=\"#-%ED%95%9C%EB%8F%99%EC%83%88%EC%84%AC%EB%B4%87--%ED%95%9C%EB%8F%99%EB%8C%80-%ED%95%99%EC%83%9D%EB%93%A4%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%B1%97%EB%B4%87-github-%ED%99%88%ED%8E%98%EC%9D%B4%EC%A7%80\" aria-label=\" 한동새섬봇  한동대 학생들을 위한 챗봇 github 홈페이지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤖 한동새섬봇 : 한동대 학생들을 위한 챗봇 [<a href=\"https://github.com/jeonyeohun/SaeSeomBot\">GitHub</a>] [<a href=\"https://pf.kakao.com/_XxaQyK\">홈페이지</a>]</h3>\n<blockquote>\n<p>오픈API를 활용하여 다양한 정보를 제공하는 카카오톡 챗봇</p>\n</blockquote>\n<ul>\n<li>개발 기간 : 2021.03 ~ 2021.04</li>\n<li>사용 언어 및 기술 : JavaScript, AWS EC2, Express</li>\n<li>\n<p>구현한 내용</p>\n<ul>\n<li>챗봇용 API 서버</li>\n<li>카카오 오픈빌더를 활용</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"about","date":"January 27, 2019","lang":"en"}}}]}},"pageContext":{}},"staticQueryHashes":[]}