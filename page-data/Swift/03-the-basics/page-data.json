{"componentChunkName":"component---src-templates-blog-post-js","path":"/Swift/03-the-basics/","result":{"data":{"site":{"siteMetadata":{"title":"Hun's Footsteps 🥷","author":"전여훈","siteUrl":"https://jeonyeohun.github.io","comment":{"disqusShortName":"","utterances":"jeonyeohun/jeonyeohun.github.io"},"sponsor":{"buyMeACoffeeId":"jeonyeohun"}}},"markdownRemark":{"id":"19fd1401-cfc7-5484-84f7-ff332d4e4061","excerpt":"The Basics https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html 스위프트는 C, Objective-C 와 유사하지만 더 강력한 기능들을 제공한다. 스위프트가 제공하는 자료형은 다음과 같다: Int Double Float Bool Array Set Dictionary Tuple Array, Set, Dictionary는  이며 Tuple은 여러 데이터를 한번에 전달하고 반환할 때 사용하기에 용이한 타입이다. Constant and…","html":"<h1 id=\"the-basics\" style=\"position:relative;\"><a href=\"#the-basics\" aria-label=\"the basics permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Basics</h1>\n<blockquote>\n<p><a href=\"https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html\">https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html</a></p>\n</blockquote>\n<p>스위프트는 C, Objective-C 와 유사하지만 더 강력한 기능들을 제공한다. 스위프트가 제공하는 자료형은 다음과 같다:</p>\n<ol>\n<li>Int</li>\n<li>Double</li>\n<li>Float</li>\n<li>Bool</li>\n<li>Array</li>\n<li>Set</li>\n<li>Dictionary</li>\n<li>Tuple</li>\n</ol>\n<p>Array, Set, Dictionary는 <code class=\"language-text\">Collection Types</code> 이며 Tuple은 여러 데이터를 한번에 전달하고 반환할 때 사용하기에 용이한 타입이다.</p>\n<h2 id=\"constant-and-variable\" style=\"position:relative;\"><a href=\"#constant-and-variable\" aria-label=\"constant and variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Constant and Variable</h2>\n<h3 id=\"declaring-constants-and-variable\" style=\"position:relative;\"><a href=\"#declaring-constants-and-variable\" aria-label=\"declaring constants and variable permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Declaring Constants and Variable</h3>\n<ul>\n<li><code class=\"language-text\">Constant</code> 는 한번 데이터를 할당한 이후에는 재할당할 수 없는 <code class=\"language-text\">상수</code>이며, <code class=\"language-text\">Variable은</code> 값의 변경이 가능한 <code class=\"language-text\">변수</code>이다.</li>\n<li>Constant 는 <code class=\"language-text\">let</code> 키워드를 통해 선언하고, variable은 <code class=\"language-text\">var</code> 키워드를 통해 선언한다.</li>\n</ul>\n<h3 id=\"type-annotations\" style=\"position:relative;\"><a href=\"#type-annotations\" aria-label=\"type annotations permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Type Annotations</h3>\n<ul>\n<li>\n<p>변수 선언문 뒤에 세미콜론과 타입의 이름을 붙이면 타입을 선언할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> welcomeMessage<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span></code></pre></div>\n</li>\n<li>\n<p>콤마로 구분해서 한줄에 같은 타입의 변수를 여러개 선언하는 것도 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">var</span> red<span class=\"token punctuation\">,</span> green<span class=\"token punctuation\">,</span> blue<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Double</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"naming-constants-and-variables\" style=\"position:relative;\"><a href=\"#naming-constants-and-variables\" aria-label=\"naming constants and variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Naming Constants and Variables</h3>\n<ul>\n<li>\n<p>변수와 상수의 이름은 문자로 만들 수 있다. 심지어 유니코드로 만드는 것도 가능하다..!</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> 🐶🐮 <span class=\"token operator\">=</span> <span class=\"token string\">\"dogcow\"</span></code></pre></div>\n<blockquote>\n<p>엄청난 변수..</p>\n</blockquote>\n</li>\n<li>변수와 상수의 이름은 <code class=\"language-text\">공백문자</code>, <code class=\"language-text\">수학기호</code>, <code class=\"language-text\">화살표</code>가 포함되면 안된다.</li>\n<li>변수와 상수의 이름은 <code class=\"language-text\">숫자로 시작할 수 없다</code>.</li>\n<li>Swift 문법 키워드를 변수나 상수로 지정하고 싶을 때는 <code class=\"language-text\">``</code> 문자로 감까서 사용할 수 있지만 이런 변수명을 사용하는 것은 좋은 방법이 아니다.</li>\n</ul>\n<h3 id=\"printing-constants-and-variables\" style=\"position:relative;\"><a href=\"#printing-constants-and-variables\" aria-label=\"printing constants and variables permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Printing Constants and Variables</h3>\n<ul>\n<li>변수나 상수를 출력할 때는 <code class=\"language-text\">print</code> 함수를 사용한다.</li>\n<li>\n<p>print 함수는 <code class=\"language-text\">terminator</code> 를 인자로 받는데 기본 값으로 개행이 들어가 있다. 개행 없이 출력하고 싶다면,</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">,</span> terminator<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<p>이렇게 직접 terminator를 지정해주면 된다.</p>\n<ul>\n<li>\n<p>스위프트는 <code class=\"language-text\">string interpolation</code>을 통해 변수나 상수의 이름을 문자열에 집어넣어 출력할 수 있게 한다. <code class=\"language-text\">\\(변수이름)</code> 문법을 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The current value of friendlyWelcome is <span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>friendlyWelcome<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"integers\" style=\"position:relative;\"><a href=\"#integers\" aria-label=\"integers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Integers</h2>\n<ul>\n<li>스위프트는 8, 16, 32, 64 비트, unsigned 와 signed 정수를 표현할 수 있다.</li>\n<li>\n<p>최대 표현가능 비트수를 <code class=\"language-text\">Int</code> 뒤에 붙이고, unsigned로 제한하고 싶을 때는 <code class=\"language-text\">Int</code> 앞에 <code class=\"language-text\">U</code>를 붙인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> signedInt8<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int8</span>\n<span class=\"token keyword\">let</span> unsignedInt8<span class=\"token punctuation\">:</span> <span class=\"token builtin\">UInt8</span>\n<span class=\"token keyword\">let</span> signedInt16<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int16</span>\n<span class=\"token keyword\">let</span> unsignedInt16<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int16</span>\n<span class=\"token keyword\">let</span> signedInt32<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int32</span>\n<span class=\"token keyword\">let</span> unsignedInt32<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int32</span>\n<span class=\"token keyword\">let</span> signedInt64<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int64</span>\n<span class=\"token keyword\">let</span> unsignedInt64<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Int64</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"integer-bounds\" style=\"position:relative;\"><a href=\"#integer-bounds\" aria-label=\"integer bounds permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Integer Bounds</h3>\n<ul>\n<li>\n<p>최댓값과 최소값을 <code class=\"language-text\">min</code> 과 <code class=\"language-text\">max</code> 프로퍼티를 사용해 얻을 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">let</span> minValue <span class=\"token operator\">=</span> <span class=\"token builtin\">UInt8</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">min</span>\n<span class=\"token keyword\">let</span> maxValue <span class=\"token operator\">=</span> <span class=\"token builtin\">UInt8</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"int--uint\" style=\"position:relative;\"><a href=\"#int--uint\" aria-label=\"int  uint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Int &#x26; UInt</h3>\n<ul>\n<li><code class=\"language-text\">Int(UInt)</code> 타입의 기본 범위는 OS에 따라 달라진다. 32-bit OS에서 Int 는 <code class=\"language-text\">Int32</code> 와 같은 범위를 가지고, 64-bit OS에서 Int는 <code class=\"language-text\">Int64</code>의 범위를 가진다.</li>\n<li>정수의 범위를 특정해야하는 상황이 아니라면, Int의 범위를 지정해서 사용하지 않고 기본값 Int를 사용하는 것이 <code class=\"language-text\">일관성과 상호운용성(consistency and interoperability)</code> 측면에서 바람직하다.</li>\n</ul>\n<h2 id=\"floating-point-numbers\" style=\"position:relative;\"><a href=\"#floating-point-numbers\" aria-label=\"floating point numbers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Floating-Point Numbers</h2>\n<ul>\n<li><code class=\"language-text\">Double</code>은 64-bit 로 실수를 표현한다.</li>\n<li><code class=\"language-text\">Float</code>는 32-bit 로 실수를 표현한다.</li>\n<li>Double 과 Float 을 둘 다 사용해도 괜찮은 환경이라면 Float 보다는 Double을 사용하는 것이 권장된다.</li>\n</ul>","frontmatter":{"title":"[공식문서로 Swift 공부하기] 3. The Basics","date":"June 23, 2021"}}},"pageContext":{"slug":"/Swift/03-the-basics/","previous":{"fields":{"slug":"/Swift/02-a-swift-tour/"},"frontmatter":{"title":"[공식문서로 Swift 공부하기] 2. A Swift Tour","category":"Swift","draft":false}},"next":null}},"staticQueryHashes":["2486386679","3128451518"]}