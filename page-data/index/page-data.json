{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Hun's Footsteps 🥷","configs":{"countOfInitialPost":10}}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"from wikipedia (https://ko.wikipedia.org/wiki/%EB%B9%84%EC%A7%80%ED%84%B0_%ED%8C%A8%ED%84%B4) Visitor Pattern 방문자 패턴은 을 지키는 디자인 패턴이다. 방준자 패턴은 객체의 알고리즘을 객체에서 분리시켜 기존 객체의 구조를 수정하지 않고 새로운 알고리즘을 추가할 수 있도…","fields":{"slug":"/Design-Pattern/[디자인-패턴]-visitor-pattern/"},"frontmatter":{"date":"June 07, 2021","title":"[디자인 패턴] Visitor Pattern","category":"Design-Pattern","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42889 문제 슈퍼 게임 개발자 오렐리는 큰 고민에 빠졌다. 그녀가 만든 프랜즈 오천성이 대성공을 거뒀지만, 요즘 신규 사용자의 수가 급감한 것이다. 원인은 신규 사용자와 기존 사용자 사이에 스테이지 차이가 너무 큰 것이 문제였다. 이 문제를 어떻게 할까 고민 한…","fields":{"slug":"/Problem-Solving/[프로그래머스]-실패율/"},"frontmatter":{"date":"June 06, 2021","title":"[프로그래머스] 실패율","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/67256 문제 스마트폰 전화 키패드의 각 칸에 다음과 같이 숫자들이 적혀 있습니다. kakao_phone1.png 이 전화 키패드에서 왼손과 오른손의 엄지손가락만을 이용해서 숫자만을 입력하려고 합니다.\n맨 처음 왼손 엄지손가락은 * 키패드에 오른손 엄지손가락은 #…","fields":{"slug":"/Problem-Solving/[프로그래머스]-키패드-누르기/"},"frontmatter":{"date":"June 06, 2021","title":"[프로그래머스] 키패드","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/72410 문제 카카오에 입사한 신입 개발자 네오는 “카카오계정개발팀”에 배치되어, 카카오 서비스에 가입하는 유저들의 아이디를 생성하는 업무를 담당하게 되었습니다. “네오”에게 주어진 첫 업무는 새로 가입하는 유저들이 카카오 아이디 규칙에 맞지 않는 아이디를 입력했…","fields":{"slug":"/Problem-Solving/[프로그래머스]-신규-아이디-추천/"},"frontmatter":{"date":"June 03, 2021","title":"[프로그래머스] 신규 아이디 추천","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/64061 문제 게임개발자인 “죠르디”는 크레인 인형뽑기 기계를 모바일 게임으로 만들려고 합니다.\n“죠르디”는 게임의 재미를 높이기 위해 화면 구성과 규칙을 다음과 같이 게임 로직에 반영하려고 합니다. crane_game_101.png 게임 화면은 “1 x 1” 크…","fields":{"slug":"/Problem-Solving/[프로그래머스]-크레인-인형뽑기-게임/"},"frontmatter":{"date":"June 03, 2021","title":"[프로그래머스] 크레인 인형뽑기 게임","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/4949 문제 세계는 균형이 잘 잡혀있어야 한다. 양과 음, 빛과 어둠 그리고 왼쪽 괄호와 오른쪽 괄호처럼 말이다. 정민이의 임무는 어떤 문자열이 주어졌을 때, 괄호들의 균형이 잘 맞춰져 있는지 판단하는 프로그램을 짜는 것이다. 문자열에 포함되는 괄호는 소괄호(”()”) 와 대괄호(”[]“)로 2종…","fields":{"slug":"/Problem-Solving/[백준-알고리즘]-4949번-균형잡힌-세상/"},"frontmatter":{"date":"June 03, 2021","title":"[백준 알고리즘] 4949번: 균형잡힌 세상","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1759 문제 바로 어제 최백준 조교가 방 열쇠를 주머니에 넣은 채 깜빡하고 서울로 가 버리는 황당한 상황에 직면한 조교들은, 702호에 새로운 보안 시스템을 설치하기로 하였다. 이 보안 시스템은 열쇠가 아닌 암호로 동작하게 되어 있는 시스템이다. 암호는 서로 다른 L개의 알파벳 소문자들로 구성되며…","fields":{"slug":"/Problem-Solving/[백준-알고리즘]-1759번-암호-만들기/"},"frontmatter":{"date":"June 02, 2021","title":"[백준 알고리즘] 1759번: 암호 만들기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/60058 문제 카카오에 신입 개발자로 입사한 “콘”은 선배 개발자로부터 개발역량 강화를 위해 다른 개발자가 작성한 소스 코드를 분석하여 문제점을 발견하고 수정하라는 업무 과제를 받았습니다. 소스를 컴파일하여 로그를 보니 대부분 소스 코드 내 작성된 괄호가 개수는 …","fields":{"slug":"/Problem-Solving/[프로그래머스]-괄호-변환하기/"},"frontmatter":{"date":"June 02, 2021","title":"[프로그래머스] 괄호 변환","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"전역 변수, 지역 변수 자바스크립트에서 전역변수는 함수 내에 포함되지 않는 변수를 의미한다. 따라서 전역 변수로 선언된 변수는 전역 객체인  에 바인딩된다. 스코프 자바스크립트는 , ,  로 나눌 수 있다. 전역 스코프는 코드의 모든 부분에서 접근이 가능한 영역, 블록스코프는 중괄호로 둘러쌓은 코드영역을 의미하고, 함수 스코프는 함수의 선언에 만들어져있는…","fields":{"slug":"/JavaScript/scope/"},"frontmatter":{"date":"May 27, 2021","title":"[JavaScript] 자바스크립트 동작원리 - 스코프(Scope)","category":"JavaScript","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/1844# 문제 ROR 게임은 두 팀으로 나누어서 진행하며, 상대 팀 진영을 먼저 파괴하면 이기는 게임입니다. 따라서, 각 팀은 상대 팀 진영에 최대한 빨리 도착하는 것이 유리합니다. 지금부터 당신은 한 팀의 팀원이 되어 게임을 진행하려고 합니다. 다음은 5 x 5…","fields":{"slug":"/Problem-Solving/[프로그래머스]-게임-맵-최단거리/"},"frontmatter":{"date":"May 26, 2021","title":"[프로그래머스] 게임 맵 최단거리","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42888# 문제 카카오톡 오픈채팅방에서는 친구가 아닌 사람들과 대화를 할 수 있는데, 본래 닉네임이 아닌 가상의 닉네임을 사용하여 채팅방에 들어갈 수 있다. 신입사원인 김크루는 카카오톡 오픈 채팅방을 개설한 사람을 위해, 다양한 사람들이 들어오고, 나가는 것을 지…","fields":{"slug":"/Problem-Solving/[프로그래머스]-오픈채팅방/"},"frontmatter":{"date":"May 25, 2021","title":"[프로그래머스] 오픈채팅방","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/12973 문제 짝지어 제거하기는, 알파벳 소문자로 이루어진 문자열을 가지고 시작합니다. 먼저 문자열에서 같은 알파벳이 2개 붙어 있는 짝을 찾습니다. 그다음, 그 둘을 제거한 뒤, 앞뒤로 문자열을 이어 붙입니다. 이 과정을 반복해서 문자열을 모두 제거한다면 짝지어…","fields":{"slug":"/Problem-Solving/[프로그래머스]-짝지어-제거하기/"},"frontmatter":{"date":"May 25, 2021","title":"[프로그래머스] 짝지어 제거하기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"Memento Pattern  https://en.wikipedia.org/wiki/Memento_pattern Memento 패턴은 인스턴스의 상태를 저장하고 복원할 수 있는 기능을 제공하는 디자인 패턴이다. 만약 어떤 인스턴스의 상태를 인스턴스 내부에 저장한다면 캡슐화가 파괴되고. 외부에서 해당 객체의 상태를 관리하기 위해 인스턴스에 직접 적용해야하는…","fields":{"slug":"/Design-Pattern/[디자인-패턴]-memento-pattern/"},"frontmatter":{"date":"May 25, 2021","title":"[디자인 패턴] Memento Pattern","category":"Design-Pattern","draft":false}}},{"node":{"excerpt":"Facade Pattern  Facade 패턴은 하나의 인터페이스를 통해 여러 서브시스템의 기능을 통합해서 사용할 수 있도록 하는 디자인 패턴이다. 만약 사용자가 호출해야하는 클래스의 메서드가 여러개가 있다면, Facade 역할을 하는 인터페이스를 하나 만들고 사용자에게는 하나의 함수만 호출하게 한 뒤, 자신이 다른 서브 클래스들의 함수를 호출하여 로직을…","fields":{"slug":"/Design-Pattern/[디자인-패턴]-facade-pattern/"},"frontmatter":{"date":"May 25, 2021","title":"[디자인 패턴] Facade Pattern","category":"Design-Pattern","draft":false}}},{"node":{"excerpt":"개발자 면접질문과 답변들. 더 많은 내용은 깃허브 저장소에서 확인할 수 있습니다 (https://github.com/jeonyeohun/GetReadyForInterview) 정렬 알고리즘 버블정렬 - O(N^2) 로직(오름차순) 처음부터 n - i 까지 인접한 인덱스를 비교해서 값이 가장 큰 요소를 n - i 번째에 위치시킵니다. i는 정렬이 완료된 요…","fields":{"slug":"/Interview/[면접준비]-알고리즘/"},"frontmatter":{"date":"May 24, 2021","title":"[면접준비] 알고리즘","category":"Interview","draft":false}}},{"node":{"excerpt":"개발자 면접질문과 답변들. 더 많은 내용은 깃허브 저장소에서 확인할 수 있습니다 (https://github.com/jeonyeohun/GetReadyForInterview) 배열 & 링크드 리스트 베열과 링크드 리스트의 차이가 뭐에요? 배열은 연속된 메모리 공간에 데이터를 저장하고 리스트는 비연속적인 공간에 데이터를 저장한 뒤 두 데이터를 노드로 연결한…","fields":{"slug":"/Interview/[면접준비]-데이터구조/"},"frontmatter":{"date":"May 24, 2021","title":"[면접준비] 데이터구조","category":"Interview","draft":false}}},{"node":{"excerpt":"개발자 면접질문과 답변들. 더 많은 내용은 깃허브 저장소에서 확인할 수 있습니다 (https://github.com/jeonyeohun/GetReadyForInterview) Key Super Key 에 대해서 말해보세요 Super Key 는 테이블 내의 특정한 튜플을 식별할 수 있도록하는 어트리뷰트의 집합입니다. 어떤 어트리뷰트의 집합으로 특정한 튜플을…","fields":{"slug":"/Interview/[면접준비]-데이터베이스/"},"frontmatter":{"date":"May 24, 2021","title":"[면접준비] 데이터베이스","category":"Interview","draft":false}}},{"node":{"excerpt":"개발자 면접질문과 답변들. 더 많은 내용은 깃허브 저장소에서 확인할 수 있습니다 (https://github.com/jeonyeohun/GetReadyForInterview) Application Layer HTTP HTTP는 statless 하다는 것이 어떤 의미인지 설명해보세요. HTTP 는 stateles protocol로 서버가 클라이언트의 상태정…","fields":{"slug":"/Interview/[면접준비]-네트워크/"},"frontmatter":{"date":"May 24, 2021","title":"[면접준비] 네트워크","category":"Interview","draft":false}}},{"node":{"excerpt":"개발자 면접질문과 답변들. 더 많은 내용은 깃허브 저장소에서 확인할 수 있습니다 (https://github.com/jeonyeohun/GetReadyForInterview) 프로세스 (Process) 프로세스가 무엇인지 설명해보세요. 프로세스는 실행 중인 프로그램으로 디스크로부터 메모리에 적재되어 CPU의 할당을 받을 수 있는 상태를 말합니다. 프로세스…","fields":{"slug":"/Interview/[면접준비]-운영체제/"},"frontmatter":{"date":"May 24, 2021","title":"[면접준비] 운영체제","category":"Interview","draft":false}}},{"node":{"excerpt":"개발자 면접질문과 답변들. 더 많은 내용은 깃허브 저장소에서 확인할 수 있습니다 (https://github.com/jeonyeohun/GetReadyForInterview) 상태유지와 인증을 위한 기술들 세션과 쿠키를 사용하는 이유와 두 방식의 차이를 설명해보세요. 쿠키와 세션 모두  한 http 통신의을 보완하기 위해 사용합니다. 쿠키나 세션에 이전에…","fields":{"slug":"/Interview/[면접준비]-웹/"},"frontmatter":{"date":"May 24, 2021","title":"[면접준비] 웹","category":"Interview","draft":false}}},{"node":{"excerpt":"개발자 면접질문과 답변들. 더 많은 내용은 깃허브 저장소에서 확인할 수 있습니다 (https://github.com/jeonyeohun/GetReadyForInterview) JavaScript JS의 원시타입을 말해보세요. boolean, number, string, symbol, undefined, null 로 7가지가 있습니다. Undefined 와…","fields":{"slug":"/Interview/[면접준비]-자바스크립트/"},"frontmatter":{"date":"May 24, 2021","title":"[면접준비] 자바스크립트","category":"Interview","draft":false}}},{"node":{"excerpt":"콜 스택에는 무엇이 쌓이는 걸까? 자바스크립트 엔진은 메모리 힙과 콜 스택으로 동작한다는 것을 우리는 알고있다. 콜 스택은 자바스크립트 엔진이 실행하고자 하는 함수가 담기지만, 그냥 코드가 담기는 것이 아니다. 함수가 실행되기 위해서는 지역변수, 전역변수와 같은 함수의 실행환경을 알아야 한다. 는 이런 함수의 실행정보를 담는 단위이다. 운영체제에서 프로세…","fields":{"slug":"/JavaScript/[javascript]-자바스크립트-동작원리---실행-컨텍스트/"},"frontmatter":{"date":"May 22, 2021","title":"[JavaScript] 자바스크립트 동작원리 - 실행 컨텍스트","category":"JavaScript","draft":false}}},{"node":{"excerpt":"자바스크립트 엔진은 싱글스레드이다. 자바스크립트 언어를 파싱하고 실행하는 자바스크립트 엔진은 싱글스레드로 구성되어 있다. 따라서 동기적으로 코드가 처리되어야 한다. 자바스크립트 엔진’만’ 사용한다면 말이다. 자바스크립트 엔진의 메모리 구조. 자바스크립트 엔진은 두 종류의 메모리 구조를 가진다. 메모리 힙 : 메모리 힙은 객체나 변수 등의 할당을 위해 사용…","fields":{"slug":"/JavaScript/EventLoop/"},"frontmatter":{"date":"May 22, 2021","title":"[JavaScript] 자바스크립트 동작원리 - Web API와 이벤트 루프","category":"JavaScript","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 네트워크 공부의 기초가 되는 용어들 End System End system (종단 시스템) : 네트워크를 통해 연결되어 있는 모든 장치들을 의미한다. 우리는 주로 이 장치들을  라고 부른다. 우리가 또 잘 알고있는 것 처럼  는 그 기능에 따라…","fields":{"slug":"/Computer-Network/Access-Network/"},"frontmatter":{"date":"May 22, 2021","title":"[네트워크] 기본 용어들과 접속 네트워크(Basic Terms and Access Network)","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"붙었다..! 코딩테스트 코딩테스트는 쉽지는 않았다. 두 번째 문제에서 효율성을 O(N) 이하의 알고리즘으로 해결해야하는데, 고민을 많이 해봤지만 제대로 O(N) 으로 만들지는 못했다. 다른 문제는 코딩테스트를 준비하면서 스택이나 우선순위 큐와 같은 자료구조들을 공부해왔어서 시간을 조금만 들이면 충분히 풀 수 있었다. 제출을 다 하고도 “이건 되겠다” 라는…","fields":{"slug":"/Essay/2021-05-08-라인-인턴-코테/"},"frontmatter":{"date":"May 08, 2021","title":"[취업준비] LINE AD Platform 채용 연계형 인턴 코테 후기","category":"Essay","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2665 문제 문제 n×n 바둑판 모양으로 총 n2개의 방이 있다. 일부분은 검은 방이고 나머지는 모두 흰 방이다. 검은 방은 사면이 벽으로 싸여 있어 들어갈 수 없다. 서로 붙어 있는 두 개의 흰 방 사이에는 문이 있어서 지나다닐 수 있다. 윗줄 맨 왼쪽 방은 시작방으로서 항상 흰 방이고, 아랫줄…","fields":{"slug":"/Problem-Solving/2021-05-07-2665-미로만들기/"},"frontmatter":{"date":"May 07, 2021","title":"[백준 알고리즘] 2665번: 미로만들기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/20040 문제 문제 사이클 게임은 두 명의 플레이어가 차례대로 돌아가며 진행하는 게임으로, 선 플레이어가 홀수 번째 차례를, 후 플레이어가 짝수 번째 차례를 진행한다. 게임 시작 시 0 부터 n − 1 까지 고유한 번호가 부여된 평면 상의 점 n 개가 주어지며, 이 중 어느 세 점도 일직선 위에 …","fields":{"slug":"/Problem-Solving/2021-05-06-20040번-싸이클게임/"},"frontmatter":{"date":"May 06, 2021","title":"[백준 알고리즘] 20040번: 사이클 게임","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/5639 문제 문제 이진 검색 트리는 다음과 같은 세 가지 조건을 만족하는 이진 트리이다. 노드의 왼쪽 서브트리에 있는 모든 노드의 키는 노드의 키보다 작다.\n노드의 오른쪽 서브트리에 있는 모든 노드의 키는 노드의 키보다 크다.\n왼쪽, 오른쪽 서브트리도 이진 검색 트리이다. 전위 순회 (루트-왼쪽-…","fields":{"slug":"/Problem-Solving/2021-04-28-5639번-이진검색트리/"},"frontmatter":{"date":"April 28, 2021","title":"[백준 알고리즘] 5639번: 이진검색트리","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42885 문제 문제 무인도에 갇힌 사람들을 구명보트를 이용하여 구출하려고 합니다. 구명보트는 작아서 한 번에 최대 2명씩 밖에 탈 수 없고, 무게 제한도 있습니다. 예를 들어, 사람들의 몸무게가 70kg, 50kg, 80kg, 50kg이고 구명보트의 무게 제한이 …","fields":{"slug":"/Problem-Solving/2021-04-20-프로그래머스-구명보트/"},"frontmatter":{"date":"April 20, 2021","title":"[프로그래머스] 구명보트","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42627 문제 문제 하드디스크는 한 번에 하나의 작업만 수행할 수 있습니다. 디스크 컨트롤러를 구현하는 방법은 여러 가지가 있습니다. 가장 일반적인 방법은 요청이 들어온 순서대로 처리하는 것입니다. 예를들어 0ms 시점에 3ms가 소요되는 A작업 요청 1ms 시점…","fields":{"slug":"/Problem-Solving/2021-04-20-프로그래머스-디스크컨트롤러/"},"frontmatter":{"date":"April 20, 2021","title":"[프로그래머스] 디스크 컨트롤러","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42628 문제 문제 이중 우선순위 큐는 다음 연산을 할 수 있는 자료구조를 말합니다. I: 숫자 큐에 주어진 숫자를 삽입합니다.\nD 1: 큐에서 최댓값을 삭제합니다.\nD -1: 큐에서 최솟값을 삭제합니다.\n이중 우선순위 큐가 할 연산 operations가 매개변수…","fields":{"slug":"/Problem-Solving/2021-04-20-프로그래머스-이중우선순위큐/"},"frontmatter":{"date":"April 20, 2021","title":"[프로그래머스] 이중우선순위큐","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42748 문제 문제 점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 …","fields":{"slug":"/Problem-Solving/2021-04-20-프로그래머스-체육복/"},"frontmatter":{"date":"April 20, 2021","title":"[프로그래머스] 체육복","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42748 문제 문제 Leo는 카펫을 사러 갔다가 아래 그림과 같이 중앙에는 노란색으로 칠해져 있고 테두리 1줄은 갈색으로 칠해져 있는 격자 모양 카펫을 봤습니다. Leo는 집으로 돌아와서 아까 본 카펫의 노란색과 갈색으로 색칠된 격자의 개수는 기억했지만, 전체 카…","fields":{"slug":"/Problem-Solving/2021-04-20-프로그래머스-카펫/"},"frontmatter":{"date":"April 20, 2021","title":"[프로그래머스] K번째 수","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42748 문제 문제 어떤 숫자에서 k개의 수를 제거했을 때 얻을 수 있는 가장 큰 숫자를 구하려 합니다. 예를 들어, 숫자 1924에서 수 두 개를 제거하면 19, 12, 14, 92, 94, 24 를 만들 수 있습니다. 이 중 가장 큰 숫자는 94 입니다. 문자…","fields":{"slug":"/Problem-Solving/2021-04-20-프로그래머스-큰수만들기/"},"frontmatter":{"date":"April 20, 2021","title":"[프로그래머스] 큰 수 만들기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42747 문제 문제 H-Index는 과학자의 생산성과 영향력을 나타내는 지표입니다. 어느 과학자의 H-Index를 나타내는 값인 h를 구하려고 합니다. 위키백과1에 따르면, H-Index는 다음과 같이 구합니다. 어떤 과학자가 발표한 논문 n편 중, h번 이상 인…","fields":{"slug":"/Problem-Solving/2021-04-20-프로그래머스-H-index/"},"frontmatter":{"date":"April 20, 2021","title":"[프로그래머스] K번째 수","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42748 문제 문제 배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다. 예를 들어 array가 1, 5, 2, 6, 3, 7, 4, i = 2, j = 5, k = 3이라면 array의 2번째부터 5번째까지 …","fields":{"slug":"/Problem-Solving/2021-04-20-프로그래머스-K번째수/"},"frontmatter":{"date":"April 20, 2021","title":"[프로그래머스] K번째 수","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/60057 문제 문제 데이터 처리 전문가가 되고 싶은 “어피치”는 문자열을 압축하는 방법에 대해 공부를 하고 있습니다. 최근에 대량의 데이터 처리를 위한 간단한 비손실 압축 방법에 대해 공부를 하고 있는데, 문자열에서 같은 값이 연속해서 나타나는 것을 그 문자의 개…","fields":{"slug":"/Problem-Solving/2021-04-17-프로그래머스-문자열압축/"},"frontmatter":{"date":"April 17, 2021","title":"[프로그래머스] 문자열 압축","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42839 문제 문제 한자리 숫자가 적힌 종이 조각이 흩어져있습니다. 흩어진 종이 조각을 붙여 소수를 몇 개 만들 수 있는지 알아내려 합니다. 각 종이 조각에 적힌 숫자가 적힌 문자열 numbers가 주어졌을 때, 종이 조각으로 만들 수 있는 소수가 몇 개인지 re…","fields":{"slug":"/Problem-Solving/2021-04-17-프로그래머스-소수찾기/"},"frontmatter":{"date":"April 17, 2021","title":"[프로그래머스] 소수찾기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/1829 문제 문제 출판사의 편집자인 어피치는 네오에게 컬러링북에 들어갈 원화를 그려달라고 부탁하여 여러 장의 그림을 받았다. 여러 장의 그림을 난이도 순으로 컬러링북에 넣고 싶었던 어피치는 영역이 많으면 색칠하기가 까다로워 어려워진다는 사실을 발견하고 그림의 난이…","fields":{"slug":"/Problem-Solving/2021-04-17-프로그래머스-카카오프렌즈컬리링북/"},"frontmatter":{"date":"April 17, 2021","title":"[프로그래머스] 카카오프렌즈 컬러링북","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/42586 문제 문제 프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다. 또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기…","fields":{"slug":"/Problem-Solving/2021-04-16-프로그래머스-기능개발/"},"frontmatter":{"date":"April 16, 2021","title":"[프로그래머스] 기능개발","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://programmers.co.kr/learn/courses/30/lessons/76503# 문제 문제 각 점에 가중치가 부여된 트리가 주어집니다. 당신은 다음 연산을 통하여, 이 트리의 모든 점들의 가중치를 0으로 만들고자 합니다. 임의의 연결된 두 점을 골라서 한쪽은 1 증가시키고, 다른 한쪽은 1 감소시킵니다.\n하지만, 모든 트리가 위의 …","fields":{"slug":"/Problem-Solving/2021-04-16-프로그래머스-모두 0으로 만들기/"},"frontmatter":{"date":"April 16, 2021","title":"[프로그래머스] 모두 0으로 만들기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/17626 문제 문제 트럭 여러 대가 강을 가로지르는 일 차선 다리를 정해진 순으로 건너려 합니다. 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다.\n※ 트럭이 다리에…","fields":{"slug":"/Problem-Solving/2021-04-15-프로그래머스-다리를지나는트럭/"},"frontmatter":{"date":"April 15, 2021","title":"[프로그래머스] 다리를 지나는 트럭","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2422 문제 문제 한윤정과 친구들은 이탈리아로 방학 여행을 갔다. 이탈리아는 덥다. 윤정이와 친구들은 아이스크림을 사먹기로 했다. 아이스크림 가게에는 N종류의 아이스크림이 있다. 모든 아이스크림은 1부터 N까지 번호가 매겨져있다. 어떤 종류의 아이스크림을 함께먹으면, 맛이 아주 형편없어진다. 따라…","fields":{"slug":"/Problem-Solving/2021-04-13-2422번-한윤정이이탈리아에가서아이스크림을사먹는데/"},"frontmatter":{"date":"April 13, 2021","title":"[백준 알고리즘] 2422번: 한윤정이 이탈리아에 가서 아이스크림을 사먹는데","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1806 문제 문제 10,000 이하의 자연수로 이루어진 길이 N짜리 수열이 주어진다. 이 수열에서 연속된 수들의 부분합 중에 그 합이 S 이상이 되는 것 중, 가장 짧은 것의 길이를 구하는 프로그램을 작성하시오. 입력 첫째 줄에 N (10 ≤ N < 100,000)과 S (0 < S ≤ 100,0…","fields":{"slug":"/Problem-Solving/2021-04-10-1806번-부분합/"},"frontmatter":{"date":"April 10, 2021","title":"[백준 알고리즘] 1806번: 부분합","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/20366 문제 문제 언니 엘자와 동생 안나에게는 N개의 눈덩이가 있다. 각 눈덩이 i (1 ≤ i ≤ N)의 지름은 Hi 이다. 하나의 눈사람은 두 개의 눈덩이로 구성되며, 눈덩이 하나를 아래에 두고 그 눈덩이보다 크지 않은 다른 눈덩이를 쌓아올리는 방식으로 만들 수 있다. 이때, 눈사람의 키는 …","fields":{"slug":"/Problem-Solving/2021-04-10-20366번-같이눈사람만들래/"},"frontmatter":{"date":"April 10, 2021","title":"[백준 알고리즘] 20366번: 같이 눈사람 만들래?","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/15961 문제 문제 회전 초밥 음식점에는 회전하는 벨트 위에 여러 가지 종류의 초밥이 접시에 담겨 놓여 있고, 손님은 이 중에서 자기가 좋아하는 초밥을 골라서 먹는다. 초밥의 종류를 번호로 표현할 때, 다음 그림은 회전 초밥 음식점의 벨트 상태의 예를 보여주고 있다. 벨트 위에는 같은 종류의 초밥…","fields":{"slug":"/Problem-Solving/2021-04-10-15961번-회원초밥/"},"frontmatter":{"date":"April 10, 2021","title":"[백준 알고리즘] 15961번: 회전초밥","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/11659 문제 문제 수 N개가 주어졌을 때, i번째 수부터 j번째 수까지 합을 구하는 프로그램을 작성하시오. 입력 첫째 줄에 수의 개수 N과 합을 구해야 하는 횟수 M이 주어진다. 둘째 줄에는 N개의 수가 주어진다. 수는 1,000보다 작거나 같은 자연수이다. 셋째 줄부터 M개의 줄에는 합을 구해…","fields":{"slug":"/Problem-Solving/2021-04-09-11659번-구간힙구하기4/"},"frontmatter":{"date":"April 09, 2021","title":"[백준 알고리즘] 11659번: 구간 합 구하기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/19637 문제 문제 게임 개발자인 밀리는 전투력 시스템을 만들어, 캐릭터가 가진 전투력을 기준으로 칭호를 붙여주려고 한다. 예를 들어, 전투력 10,000 이하의 캐릭터는 WEAK, 10,000 초과 그리고 100,000 이하의 캐릭터는 NORMAL, 100,000 초과 그리고 1,000,000 …","fields":{"slug":"/Problem-Solving/2021-04-08-19637번-IF문대신써줘/"},"frontmatter":{"date":"April 08, 2021","title":"[백준 알고리즘] 19637번: IF문 대신 써줘","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2470 문제 문제 KOI 부설 과학연구소에서는 많은 종류의 산성 용액과 알칼리성 용액을 보유하고 있다. 각 용액에는 그 용액의 특성을 나타내는 하나의 정수가 주어져있다. 산성 용액의 특성값은 1부터 1,000,000,000까지의 양의 정수로 나타내고, 알칼리성 용액의 특성값은 -1부터 -1,000…","fields":{"slug":"/Problem-Solving/2021-04-08-2470번-두용액/"},"frontmatter":{"date":"April 08, 2021","title":"[백준 알고리즘] 2470번: 두 용액","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/11728 문제 문제 정렬되어있는 두 배열 A와 B가 주어진다. 두 배열을 합친 다음 정렬해서 출력하는 프로그램을 작성하시오. 입력 첫째 줄에 배열 A의 크기 N, 배열 B의 크기 M이 주어진다. (1 ≤ N, M ≤ 1,000,000) 둘째 줄에는 배열 A의 내용이, 셋째 줄에는 배열 B의 내용이…","fields":{"slug":"/Problem-Solving/2021-04-08-11728번-배열합치기/"},"frontmatter":{"date":"April 08, 2021","title":"[백준 알고리즘] 11728번: 배열합치기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1789 문제 문제 서로 다른 N개의 자연수의 합이 S라고 한다. S를 알 때, 자연수 N의 최댓값은 얼마일까? 입력 첫째 줄에 자연수 S(1 ≤ S ≤ 4,294,967,295)가 주어진다. 출력 첫째 줄에 자연수 N의 최댓값을 출력한다. 풀이 그냥 수학적으로 푸는 방법도 있지만, 이분탐색을 연습…","fields":{"slug":"/Problem-Solving/2021-04-07-1789번-수들의 합/"},"frontmatter":{"date":"April 07, 2021","title":"[백준 알고리즘] 1789번: 수들의 합","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1620 문제 문제 문제가 너무 길어서 생략… 입력 첫째 줄에는 도감에 수록되어 있는 포켓몬의 개수 N이랑 내가 맞춰야 하는 문제의 개수 M이 주어져. N과 M은 1보다 크거나 같고, 100,000보다 작거나 같은 자연수인데, 자연수가 뭔지는 알지? 모르면 물어봐도 괜찮아. 나는 언제든지 질문에 답…","fields":{"slug":"/Problem-Solving/2021-04-06-1620번-나는야포켓몬마스터이다솜/"},"frontmatter":{"date":"April 06, 2021","title":"[백준 알고리즘] 1620번: 나는야 포켓몬 마스터 이다솜","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2346 문제 문제 N개의 풍선이 있다. 각 풍선 안에는 -N부터 N까지의 수가 적혀있는 종이가 들어 있다. 이 풍선들을 다음과 같은 규칙으로 터뜨린다. 우선, 제일 처음에는 1번 풍선을 터뜨린다. 다음에는 풍선 안에 있는 종이를 꺼내어 그 종이에 적혀있는 값만큼 이동하여 다음 풍선을 터뜨린다. 양…","fields":{"slug":"/Problem-Solving/2021-04-04-10799번-쇠막대기/"},"frontmatter":{"date":"April 04, 2021","title":"[백준 알고리즘] 2346번: 풍선터뜨리기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/13549 문제 문제 수빈이는 동생과 숨바꼭질을 하고 있다. 수빈이는 현재 점 N(0 ≤ N ≤ 100,000)에 있고, 동생은 점 K(0 ≤ K ≤ 100,000)에 있다. 수빈이는 걷거나 순간이동을 할 수 있다. 만약, 수빈이의 위치가 X일 때 걷는다면 1초 후에 X-1 또는 X+1로 이동하게 …","fields":{"slug":"/Problem-Solving/2021-04-05-13549번-숨바꼭질3/"},"frontmatter":{"date":"April 04, 2021","title":"[백준 알고리즘] 13549번: 숨바꼭질 3","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/10799 문제 문제 여러 개의 쇠막대기를 레이저로 절단하려고 한다. 효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자른다. 쇠막대기와 레이저의 배치는 다음 조건을 만족한다. 쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있다. - 쇠막…","fields":{"slug":"/Problem-Solving/2021-04-04-2346번-풍선터뜨리기/"},"frontmatter":{"date":"April 04, 2021","title":"[백준 알고리즘] 10799번: 쇠막대기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1935 문제 문제 후위 표기식과 각 피연산자에 대응하는 값들이 주어져 있을 때, 그 식을 계산하는 프로그램을 작성하시오. 입력 첫째 줄에 피연산자의 개수(1 ≤ N ≤ 26) 가 주어진다. 그리고 둘째 줄에는 후위 표기식이 주어진다. (여기서 피연산자는 A~Z의 영대문자이며, A부터 순서대로 N개…","fields":{"slug":"/Problem-Solving/2021-04-04-1935번-후위표기식/"},"frontmatter":{"date":"April 04, 2021","title":"[백준 알고리즘] 1935번: 후위 표기식2","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"두번째 인증샷 두 번째 코딩테스트 지난 라인 코딩테스트는 예상했던 대로 불합격 메일을 받았다. 그래도 좋은 경험이었고 이번 상반기에는 일단 되는건 다 해보자라는 마음이었기 때문에 마음이 어렵거나 하지는 않았다. 그리고 오늘은 몇 주 전에 신청했던 카카오 계열사의 코딩테스트를 치뤘다. 라인 코테때 5시간에 가까운 코딩테스트를 겪어서 그런지 2시간 동안 3문…","fields":{"slug":"/Essay/2021-04-03-카카오커머스-공개채용-코테후기/"},"frontmatter":{"date":"April 03, 2021","title":"[취업준비] 2021 카카오커머스 - 메이커스 신입 프론트엔드 개발 1차 테스트 후기","category":"Essay","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1922 문제 문제 도현이는 컴퓨터와 컴퓨터를 모두 연결하는 네트워크를 구축하려 한다. 하지만 아쉽게도 허브가 있지 않아 컴퓨터와 컴퓨터를 직접 연결하여야 한다. 그런데 모두가 자료를 공유하기 위해서는 모든 컴퓨터가 연결이 되어 있어야 한다. (a와 b가 연결이 되어 있다는 말은 a에서 b로의 경로…","fields":{"slug":"/Problem-Solving/2021-04-03-1922번-네트워크연결/"},"frontmatter":{"date":"April 03, 2021","title":"[백준 알고리즘] 1922번: 네트워크 연결","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1967 문제 문제 용량이 다른 두 개의 빈 물통 A, B가 있다. 이 물통들에 물을 채우고 비우는 일을 반복하여 두 물통을 원하는 상태(목표하는 양의 물을 담은 상태)가 되도록 만들고자 한다. 물통 이외에는 물의 양을 정확히 잴 수 있는 방법이 없으며, 가능한 작업은 다음과 같은 세 종류가 전부이…","fields":{"slug":"/Problem-Solving/2021-04-03-14867번-물통/"},"frontmatter":{"date":"April 03, 2021","title":"[백준 알고리즘] 14867번: 물통","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1967 문제 문제 트리(tree)는 사이클이 없는 무방향 그래프이다. 트리에서는 어떤 두 노드를 선택해도 둘 사이에 경로가 항상 하나만 존재하게 된다. 트리에서 어떤 두 노드를 선택해서 양쪽으로 쫙 당길 때, 가장 길게 늘어나는 경우가 있을 것이다. 이럴 때 트리의 모든 노드들은 이 두 노드를 지…","fields":{"slug":"/Problem-Solving/2021-04-03-1967번-트리의지름/"},"frontmatter":{"date":"April 03, 2021","title":"[백준 알고리즘] 1967번: 트리의 지름","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1766 문제 문제 민오는 1번부터 N번까지 총 N개의 문제로 되어 있는 문제집을 풀려고 한다. 문제는 난이도 순서로 출제되어 있다. 즉 1번 문제가 가장 쉬운 문제이고 N번 문제가 가장 어려운 문제가 된다. 어떤 문제부터 풀까 고민하면서 문제를 훑어보던 민오는, 몇몇 문제들 사이에는 ‘먼저 푸는 …","fields":{"slug":"/Problem-Solving/2021-03-30-1766번-문제집/"},"frontmatter":{"date":"March 30, 2021","title":"[백준 알고리즘] 1766번: 문제집","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2887 문제 문제 서기 2012년! 드디어 2년간 수많은 국민들을 기다리게 한 게임 ACM Craft (Association of Construction Manager Craft)가 발매되었다. 이 게임은 지금까지 나온 게임들과는 다르게 ACM크래프트는 다이나믹한 게임 진행을 위해 건물을 짓는 순…","fields":{"slug":"/Problem-Solving/2021-03-27-1005번-ACM-CRAFT/"},"frontmatter":{"date":"March 27, 2021","title":"[백준 알고리즘] 1005번: ACM Craft","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2887 문제 문제 때는 2040년, 이민혁은 우주에 자신만의 왕국을 만들었다. 왕국은 N개의 행성으로 이루어져 있다. 민혁이는 이 행성을 효율적으로 지배하기 위해서 행성을 연결하는 터널을 만들려고 한다. 행성은 3차원 좌표위의 한 점으로 생각하면 된다. 두 행성 A(xA, yA, zA)와 B(xB…","fields":{"slug":"/Problem-Solving/2021-03-27-2887번-행성터널/"},"frontmatter":{"date":"March 27, 2021","title":"[백준 알고리즘] 2887번: 행성터널","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1647 문제 문제 동물원에서 막 탈출한 원숭이 한 마리가 세상구경을 하고 있다. 그러다가 평화로운 마을에 가게 되었는데, 그곳에서는 알 수 없는 일이 벌어지고 있었다. 마을은 N개의 집과 그 집들을 연결하는 M개의 길로 이루어져 있다. 길은 어느 방향으로든지 다닐 수 있는 편리한 길이다. 그리고 …","fields":{"slug":"/Problem-Solving/2021-03-27-1647번-도시분할계획/"},"frontmatter":{"date":"March 27, 2021","title":"[백준 알고리즘] 1647번: 도시 분할 계획","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1613 문제 문제 역사, 그 중에서도 한국사에 해박한 세준이는 많은 역사적 사건들의 전후 관계를 잘 알고 있다. 즉, 임진왜란이 병자호란보다 먼저 일어났으며, 무오사화가 기묘사화보다 먼저 일어났다는 등의 지식을 알고 있는 것이다. 세준이가 알고 있는 일부 사건들의 전후 관계들이 주어질 때, 주어진…","fields":{"slug":"/Problem-Solving/2021-03-26-1613번-역사/"},"frontmatter":{"date":"March 26, 2021","title":"[백준 알고리즘] 1613번: 역사","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/11404 문제 문제 n(2 ≤ n ≤ 100)개의 도시가 있다. 그리고 한 도시에서 출발하여 다른 도시에 도착하는 m(1 ≤ m ≤ 100,000)개의 버스가 있다. 각 버스는 한 번 사용할 때 필요한 비용이 있다. 모든 도시의 쌍 (A, B)에 대해서 도시 A에서 B로 가는데 필요한 비용의 최솟…","fields":{"slug":"/Problem-Solving/2021-03-25-11404번-플로이드/"},"frontmatter":{"date":"March 25, 2021","title":"[백준 알고리즘] 11404번: 플로이드","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2631 문제 문제 KOI 어린이집에는 N명의 아이들이 있다. 오늘은 소풍을 가는 날이다. 선생님은 1번부터 N번까지 번호가 적혀있는 번호표를 아이들의 가슴에 붙여주었다. 선생님은 아이들을 효과적으로 보호하기 위해 목적지까지 번호순서대로 일렬로 서서 걸어가도록 하였다. 이동 도중에 보니 아이들의 번…","fields":{"slug":"/Problem-Solving/2021-03-25-2631번-줄세우기/"},"frontmatter":{"date":"March 25, 2021","title":"[백준 알고리즘] 2631번: 줄세우기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1915 문제 문제 n×m의 0, 1로 된 배열이 있다. 이 배열에서 1로 된 가장 큰 정사각형의 크기를 구하는 프로그램을 작성하시오. 위와 같은 예제에서는 가운데의 2×2 배열이 가장 큰 정사각형이다. 입력 첫째 줄에 n, m(1 ≤ n, m ≤ 1,000)이 주어진다. 다음 n개의 줄에는 m개의…","fields":{"slug":"/Problem-Solving/2021-03-23-1915번-가장큰정사각형/"},"frontmatter":{"date":"March 23, 2021","title":"[백준 알고리즘] 1915번: 가장 큰 정사각형","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1504 문제 문제 방향성이 없는 그래프가 주어진다. 세준이는 1번 정점에서 N번 정점으로 최단 거리로 이동하려고 한다. 또한 세준이는 두 가지 조건을 만족하면서 이동하는 특정한 최단 경로를 구하고 싶은데, 그것은 바로 임의로 주어진 두 정점은 반드시 통과해야 한다는 것이다. 세준이는 한번 이동했던…","fields":{"slug":"/Problem-Solving/2021-03-23-1504번-특정한최단경로/"},"frontmatter":{"date":"March 23, 2021","title":"[백준 알고리즘] 1504번: 특정한 최단 경로","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/4485 문제 문제 젤다의 전설 게임에서 화폐의 단위는 루피(rupee)다. 그런데 간혹 ‘도둑루피’라 불리는 검정색 루피도 존재하는데, 이걸 획득하면 오히려 소지한 루피가 감소하게 된다! 젤다의 전설 시리즈의 주인공, 링크는 지금 도둑루피만 가득한 N x N 크기의 동굴의 제일 왼쪽 위에 있다. …","fields":{"slug":"/Problem-Solving/2021-03-23-4485번-녹색옷이젤다/"},"frontmatter":{"date":"March 23, 2021","title":"[백준 알고리즘] 4485번: 녹색 옷 입은 애가 젤다지?","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1238 문제 문제 N개의 숫자로 구분된 각각의 마을에 한 명의 학생이 살고 있다. 어느 날 이 N명의 학생이 X (1 ≤ X ≤ N)번 마을에 모여서 파티를 벌이기로 했다. 이 마을 사이에는 총 M개의 단방향 도로들이 있고 i번째 길을 지나는데 Ti(1 ≤ Ti ≤ 100)의 시간을 소비한다. 각…","fields":{"slug":"/Problem-Solving/2021-03-22-1238번-파티/"},"frontmatter":{"date":"March 22, 2021","title":"[백준 알고리즘] 1238번: 파티","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1216 문제 문제 알고스팟 운영진이 모두 미로에 갇혔다. 미로는 NM 크기이며, 총 11크기의 방으로 이루어져 있다. 미로는 빈 방 또는 벽으로 이루어져 있고, 빈 방은 자유롭게 다닐 수 있지만, 벽은 부수지 않으면 이동할 수 없다. 알고스팟 운영진은 여러명이지만, 항상 모두 같은 방에 있어야 한…","fields":{"slug":"/Problem-Solving/2021-03-22-1216번-알고스팟/"},"frontmatter":{"date":"March 22, 2021","title":"[백준 알고리즘] 1216번: 알고스팟","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1916 문제 문제 N개의 도시가 있다. 그리고 한 도시에서 출발하여 다른 도시에 도착하는 M개의 버스가 있다. 우리는 A번째 도시에서 B번째 도시까지 가는데 드는 버스 비용을 최소화 시키려고 한다. A번째 도시에서 B번째 도시까지 가는데 드는 최소비용을 출력하여라. 도시의 번호는 1부터 N까지이다…","fields":{"slug":"/Problem-Solving/2021-03-22-1916번-최소비용/"},"frontmatter":{"date":"March 22, 2021","title":"[백준 알고리즘] 1916번: 최소비용 구하기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/10775 문제 문제 오늘은 신승원의 생일이다. 박승원은 생일을 맞아 신승원에게 인천국제공항을 선물로 줬다. 공항에는 G개의 게이트가 있으며 각각은 1에서 G까지의 번호를 가지고 있다. 공항에는 P개의 비행기가 순서대로 도착할 예정이며, 당신은 i번째 비행기를 1번부터 gi (1 ≤ gi ≤ G) …","fields":{"slug":"/Problem-Solving/2021-03-22-10775번-공항/"},"frontmatter":{"date":"March 22, 2021","title":"[백준 알고리즘] 10775번: 공항","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/4195 문제 문제 민혁이는 소셜 네트워크 사이트에서 친구를 만드는 것을 좋아하는 친구이다. 우표를 모으는 취미가 있듯이, 민혁이는 소셜 네트워크 사이트에서 친구를 모으는 것이 취미이다. 어떤 사이트의 친구 관계가 생긴 순서대로 주어졌을 때, 두 사람의 친구 네트워크에 몇 명이 있는지 구하는 프로그…","fields":{"slug":"/Problem-Solving/2021-03-21-4195번-친구네트워크/"},"frontmatter":{"date":"March 21, 2021","title":"[백준 알고리즘] 4195번: 친구 네트워크","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"이런거 처음해봐서 너무 떨렸다.. 취업 준비 방학 내내 연구 & 큐빅개발만 하다가 방학이 끝나버렸다. 그리고 개강과 함께 취업준비를 시작했다. 사실 내가 너무 안일하게 생각하고 있었던 것 같다. “그냥 열심히 하다보면 회사에서 일 할 기회가 생기겠지” 라는 마음이었는데, 막상 마지막 학기가 시작되니 그런 것 보다는  라는 생각이 제일 먼저 들었다. 3학년…","fields":{"slug":"/Essay/2021-03-20-LINE-상반기-공개채용-코테후기/"},"frontmatter":{"date":"March 20, 2021","title":"[취업준비] 2021 라인(LINE) 신입 개발자 공개채용 코딩테스트 후기","category":"Essay","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1976 문제 문제 동혁이는 친구들과 함께 여행을 가려고 한다. 한국에는 도시가 N개 있고 임의의 두 도시 사이에 길이 있을 수도, 없을 수도 있다. 동혁이의 여행 일정이 주어졌을 때, 이 여행 경로가 가능한 것인지 알아보자. 물론 중간에 다른 도시를 경유해서 여행을 할 수도 있다. 예를 들어 도시…","fields":{"slug":"/Problem-Solving/2021-03-19-1976번-여행가자/"},"frontmatter":{"date":"March 19, 2021","title":"[백준 알고리즘] 1976번: 여행가자","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1520 문제 문제 여행을 떠난 세준이는 지도를 하나 구하였다. 이 지도는 아래 그림과 같이 직사각형 모양이며 여러 칸으로 나뉘어져 있다. 한 칸은 한 지점을 나타내는데 각 칸에는 그 지점의 높이가 쓰여 있으며, 각 지점 사이의 이동은 지도에서 상하좌우 이웃한 곳끼리만 가능하다. 1 현재 제일 왼쪽…","fields":{"slug":"/Problem-Solving/2021-03-19-1520번-내리막길/"},"frontmatter":{"date":"March 19, 2021","title":"[백준 알고리즘] 1520번: 내리막길","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/3079 문제 문제 N×N 게임판에 수가 적혀져 있다. 이 게임의 목표는 가장 왼쪽 위 칸에서 가장 오른쪽 아래 칸으로 규칙에 맞게 점프를 해서 가는 것이다. 각 칸에 적혀있는 수는 현재 칸에서 갈 수 있는 거리를 의미한다. 반드시 오른쪽이나 아래쪽으로만 이동해야 한다. 0은 더 이상 진행을 막는 …","fields":{"slug":"/Problem-Solving/2021-03-18-1890번-점프/"},"frontmatter":{"date":"March 18, 2021","title":"[백준 알고리즘] 1890번: 점프","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/3079 문제 문제 상근이와 친구들은 오스트레일리아로 여행을 떠났다. 상근이와 친구들은 총 M명이고, 지금 공항에서 한 줄로 서서 입국심사를 기다리고 있다. 입국심사대는 총 N개가 있다. 각 입국심사관이 심사를 하는데 걸리는 시간은 사람마다 모두 다르다. k번 심사대에 앉아있는 심사관이 한 명을 심…","fields":{"slug":"/Problem-Solving/2021-03-17-3079번-입국심사/"},"frontmatter":{"date":"March 17, 2021","title":"[백준 알고리즘] 3079번: 입국심사","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1939 문제 문제 N(2≤N≤10,000)개의 섬으로 이루어진 나라가 있다. 이들 중 몇 개의 섬 사이에는 다리가 설치되어 있어서 차들이 다닐 수 있다. 영식 중공업에서는 두 개의 섬에 공장을 세워 두고 물품을 생산하는 일을 하고 있다. 물품을 생산하다 보면 공장에서 다른 공장으로 생산 중이던 물…","fields":{"slug":"/Problem-Solving/2021-03-17-1939번-중량제한/"},"frontmatter":{"date":"March 17, 2021","title":"[백준 알고리즘] 1939번: 중량제한","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/13305 문제 문제 어떤 나라에 N개의 도시가 있다. 이 도시들은 일직선 도로 위에 있다. 편의상 일직선을 수평 방향으로 두자. 제일 왼쪽의 도시에서 제일 오른쪽의 도시로 자동차를 이용하여 이동하려고 한다. 인접한 두 도시 사이의 도로들은 서로 길이가 다를 수 있다. 도로 길이의 단위는 km를 사…","fields":{"slug":"/Problem-Solving/2021-03-15-13305번-주유소/"},"frontmatter":{"date":"March 15, 2021","title":"[백준 알고리즘] 13305번: 주유소","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2644 문제 문제 우리 나라는 가족 혹은 친척들 사이의 관계를 촌수라는 단위로 표현하는 독특한 문화를 가지고 있다. 이러한 촌수는 다음과 같은 방식으로 계산된다. 기본적으로 부모와 자식 사이를 1촌으로 정의하고 이로부터 사람들 간의 촌수를 계산한다. 예를 들면 나와 아버지, 아버지와 할아버지는 각…","fields":{"slug":"/Problem-Solving/2021-03-14-2644번-촌수계산/"},"frontmatter":{"date":"March 14, 2021","title":"[백준 알고리즘] 2644번: 촌수계산","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1826 문제 문제 성경이는 트럭을 정글 속에서 운전하다가 트럭의 연료탱크에 갑자기 구멍이 나서 1km를 가는데 1L의 연료가 새 나가게 되었다. 이것을 고치기 위해서는 가장 가까운 마을에 가야 한다. 그런데 그냥 가다가는 중간에 연료가 다 빠질 수가 있다. 다행스럽게도 정글 곳곳에 연료를 채울 수…","fields":{"slug":"/Problem-Solving/2021-03-14-1826번-연료채우기/"},"frontmatter":{"date":"March 14, 2021","title":"[백준 알고리즘] 1826번: 연료 채우기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/14503 문제 문제 로봇 청소기가 주어졌을 때, 청소하는 영역의 개수를 구하는 프로그램을 작성하시오. 로봇 청소기가 있는 장소는 N×M 크기의 직사각형으로 나타낼 수 있으며, 1×1크기의 정사각형 칸으로 나누어져 있다. 각각의 칸은 벽 또는 빈 칸이다. 청소기는 바라보는 방향이 있으며, 이 방향은…","fields":{"slug":"/Problem-Solving/2021-03-13-14503번-로봇청소기/"},"frontmatter":{"date":"March 13, 2021","title":"[백준 알고리즘] 14503번: 로봇 청소기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/15591 문제 문제 농부 존은 남는 시간에 MooTube라 불리는 동영상 공유 서비스를 만들었다. MooTube에서 농부 존의 소들은 재밌는 동영상들을 서로 공유할 수 있다. 소들은 MooTube에 1부터 N까지 번호가 붙여진 N (1 ≤ N ≤ 5,000)개의 동영상을 이미 올려 놓았다. 하지만…","fields":{"slug":"/Problem-Solving/2021-03-13-15591번-MOOTUBE/"},"frontmatter":{"date":"March 13, 2021","title":"[백준 알고리즘] 15591번: MooTube (Silver)","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1987 문제 문제 세로 R칸, 가로 C칸으로 된 표 모양의 보드가 있다. 보드의 각 칸에는 대문자 알파벳이 하나씩 적혀 있고, 좌측 상단 칸 (1행 1열) 에는 말이 놓여 있다. 말은 상하좌우로 인접한 네 칸 중의 한 칸으로 이동할 수 있는데, 새로 이동한 칸에 적혀 있는 알파벳은 지금까지 지나온…","fields":{"slug":"/Problem-Solving/2021-03-12-1987번-알파벳/"},"frontmatter":{"date":"March 12, 2021","title":"[백준 알고리즘] 1987번: 알파벳","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2110 문제 문제 도현이의 집 N개가 수직선 위에 있다. 각각의 집의 좌표는 x1, …, xN이고, 집 여러개가 같은 좌표를 가지는 일은 없다. 도현이는 언제 어디서나 와이파이를 즐기기 위해서 집에 공유기 C개를 설치하려고 한다. 최대한 많은 곳에서 와이파이를 사용하려고 하기 때문에, 한 집에는 …","fields":{"slug":"/Problem-Solving/2021-03-11-2110번-공유기설치/"},"frontmatter":{"date":"March 11, 2021","title":"[백준 알고리즘] 2110번: 공유기 설치","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1202 문제 문제 세계적인 도둑 상덕이는 보석점을 털기로 결심했다. 상덕이가 털 보석점에는 보석이 총 N개 있다. 각 보석은 무게 Mi와 가격 Vi를 가지고 있다. 상덕이는 가방을 K개 가지고 있고, 각 가방에 담을 수 있는 최대 무게는 Ci이다. 가방에는 최대 한 개의 보석만 넣을 수 있다. 상…","fields":{"slug":"/Problem-Solving/2021-03-11-1202번-보석도둑/"},"frontmatter":{"date":"March 11, 2021","title":"[백준 알고리즘] 1202번: 보석도둑","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1715 문제 문제 첫째 줄에 테스트 케이스의 수가 주어진다. 각 케이스의 첫 줄에 정수 N(1 ≤ N ≤ 1,000)과 M(1 ≤ M ≤ 1,000)이 주어진다. 다음 줄부터 M개의 줄에는 각각 정수 ai, bi가 주어진다. (1 ≤ ai ≤ bi ≤ N) 입력 첫째 줄에 N이 주어진다. (1 ≤…","fields":{"slug":"/Problem-Solving/2021-03-11-1715번-카드정렬하기/"},"frontmatter":{"date":"March 11, 2021","title":"[백준 알고리즘] 1715번: 카드 정렬하기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2512 문제 문제 국가의 역할 중 하나는 여러 지방의 예산요청을 심사하여 국가의 예산을 분배하는 것이다. 국가예산의 총액은 미리 정해져 있어서 모든 예산요청을 배정해 주기는 어려울 수도 있다. 그래서 정해진 총액 이하에서 가능한 한 최대의 총 예산을 다음과 같은 방법으로 배정한다. 모든 요청이 배…","fields":{"slug":"/Problem-Solving/2021-03-10-2512번-예산/"},"frontmatter":{"date":"March 10, 2021","title":"[백준 알고리즘] 2512번: 예산","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1654 문제 문제 집에서 시간을 보내던 오영식은 박성원의 부름을 받고 급히 달려왔다. 박성원이 캠프 때 쓸 N개의 랜선을 만들어야 하는데 너무 바빠서 영식이에게 도움을 청했다. 이미 오영식은 자체적으로 K개의 랜선을 가지고 있다. 그러나 K개의 랜선은 길이가 제각각이다. 박성원은 랜선을 모두 N개…","fields":{"slug":"/Problem-Solving/2021-03-10-1654번-랜선자르기/"},"frontmatter":{"date":"March 10, 2021","title":"[백준 알고리즘] 1654번: 랜선 자르기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2805 문제 문제 상근이는 나무 M미터가 필요하다. 근처에 나무를 구입할 곳이 모두 망해버렸기 때문에, 정부에 벌목 허가를 요청했다. 정부는 상근이네 집 근처의 나무 한 줄에 대한 벌목 허가를 내주었고, 상근이는 새로 구입한 목재절단기를 이용해서 나무를 구할것이다. 목재절단기는 다음과 같이 동작한…","fields":{"slug":"/Problem-Solving/2021-03-09-2805번-나무자르기/"},"frontmatter":{"date":"March 09, 2021","title":"[백준 알고리즘] 2805번: 나무 자르기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2217 문제 문제 N(1 ≤ N ≤ 100,000)개의 로프가 있다. 이 로프를 이용하여 이런 저런 물체를 들어올릴 수 있다. 각각의 로프는 그 굵기나 길이가 다르기 때문에 들 수 있는 물체의 중량이 서로 다를 수도 있다. 하지만 여러 개의 로프를 병렬로 연결하면 각각의 로프에 걸리는 중량을 나눌…","fields":{"slug":"/Problem-Solving/2021-03-08-2217번-로프/"},"frontmatter":{"date":"March 08, 2021","title":"[백준 알고리즘] 2217번: 로프","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2293 문제 문제 n가지 종류의 동전이 있다. 각각의 동전이 나타내는 가치는 다르다. 이 동전을 적당히 사용해서, 그 가치의 합이 k원이 되도록 하고 싶다. 그 경우의 수를 구하시오. 각각의 동전은 몇 개라도 사용할 수 있다. 사용한 동전의 구성이 같은데, 순서만 다른 것은 같은 경우이다. 입력 …","fields":{"slug":"/Problem-Solving/2021-03-08-2293번-동전1/"},"frontmatter":{"date":"March 08, 2021","title":"[백준 알고리즘] 2293번: 동전1","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2636 문제 문제 아래 <그림 1>과 같이 정사각형 칸들로 이루어진 사각형 모양의 판이 있고, 그 위에 얇은 치즈(회색으로 표시된 부분)가 놓여 있다. 판의 가장자리(<그림 1>에서 네모 칸에 X친 부분)에는 치즈가 놓여 있지 않으며 치즈에는 하나 이상의 구멍이 있을 수 있다. 이 치즈를 공기 중…","fields":{"slug":"/Problem-Solving/2021-03-08-2636번-치즈/"},"frontmatter":{"date":"March 08, 2021","title":"[백준 알고리즘] 2636번: 치즈","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2583 문제 문제 눈금의 간격이 1인 M×N(M,N≤100)크기의 모눈종이가 있다. 이 모눈종이 위에 눈금에 맞추어 K개의 직사각형을 그릴 때, 이들 K개의 직사각형의 내부를 제외한 나머지 부분이 몇 개의 분리된 영역으로 나누어진다. 예를 들어 M=5, N=7 인 모눈종이 위에 <그림 1>과 같이…","fields":{"slug":"/Problem-Solving/2021-03-07-2583번-영역구하기/"},"frontmatter":{"date":"March 07, 2021","title":"[백준 알고리즘] 2583번: 영역구하기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/9466 문제 문제 이번 가을학기에 ‘문제 해결’ 강의를 신청한 학생들은 텀 프로젝트를 수행해야 한다. 프로젝트 팀원 수에는 제한이 없다. 심지어 모든 학생들이 동일한 팀의 팀원인 경우와 같이 한 팀만 있을 수도 있다. 프로젝트 팀을 구성하기 위해, 모든 학생들은 프로젝트를 함께하고 싶은 학생을 선…","fields":{"slug":"/Problem-Solving/2021-03-07-9466-텀프로젝트/"},"frontmatter":{"date":"March 07, 2021","title":"[백준 알고리즘] 9466번: 텀 프로젝트","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/7569 문제 문제 철수의 토마토 농장에서는 토마토를 보관하는 큰 창고를 가지고 있다. 토마토는 아래의 그림과 같이 격자모양 상자의 칸에 하나씩 넣은 다음, 상자들을 수직으로 쌓아 올려서 창고에 보관한다. 토마토 창고에 보관되는 토마토들 중에는 잘 익은 것도 있지만, 아직 익지 않은 토마토들도 있을…","fields":{"slug":"/Problem-Solving/2021-03-06-7569-토마토/"},"frontmatter":{"date":"March 06, 2021","title":"[백준 알고리즘] 7569번: 토마토","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1016 문제 문제\n어떤 수 X가 1보다 큰 제곱수로 나누어 떨어지지 않을 때, 제곱ㄴㄴ수라고 한다. 제곱수는 정수의 제곱이다. min과 max가 주어지면, min과 max를 포함한 사이에 제곱ㄴㄴ수가 몇 개 있는지 출력한다. 입력\n첫째 줄에 두 정수 min과 max가 주어진다. 출력\n첫째 줄에 m…","fields":{"slug":"/Problem-Solving/2021-03-05-1016번-제곱노노수/"},"frontmatter":{"date":"March 05, 2021","title":"[백준 알고리즘] 1016번: 제곱 ㄴㄴ 수 ","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/15711 문제 문제\n환상의 나라 디디랜드에서는 인연의 증표로 끈을 하나씩 가지고 있다. 그들은 지극히 평범한 방법으로 이 끈을 이용하여 어떤 두 사람이 환상의 짝꿍인지 판단하는데, 두 사람의 끈을 서로 이어붙이고 그 끈을 다시 길이가 소수인 끈 두개로 정확히 나눌 수 있다면 두 사람은 환상의 짝꿍…","fields":{"slug":"/Problem-Solving/2021-03-05-15711번-환상의짝꿍/"},"frontmatter":{"date":"March 05, 2021","title":"[백준 알고리즘] 15711번: 환상의 짝꿍","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/6588 문제 문제\n1742년, 독일의 아마추어 수학가 크리스티안 골드바흐는 레온하르트 오일러에게 다음과 같은 추측을 제안하는 편지를 보냈다. 4보다 큰 모든 짝수는 두 홀수 소수의 합으로 나타낼 수 있다.\n예를 들어 8은 3 + 5로 나타낼 수 있고, 3과 5는 모두 홀수인 소수이다. 또, 20 …","fields":{"slug":"/Problem-Solving/2021-03-04-6588번-골드바흐의추측/"},"frontmatter":{"date":"March 04, 2021","title":"[백준 알고리즘] 6588번: 골드바흐의 추측","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1644 문제 문제\n하나 이상의 연속된 소수의 합으로 나타낼 수 있는 자연수들이 있다. 몇 가지 자연수의 예를 들어 보면 다음과 같다. 3 : 3 (한 가지)\n41 : 2+3+5+7+11+13 = 11+13+17 = 41 (세 가지)\n53 : 5+7+11+13+17 = 53 (두 가지)\n하지만 연속…","fields":{"slug":"/Problem-Solving/2021-03-04-1644번-소수의연속합/"},"frontmatter":{"date":"March 04, 2021","title":"[백준 알고리즘] 1644번: 소수의 연속합","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2485 문제 문제\n직선으로 되어있는 도로의 한 편에 가로수가 임의의 간격으로 심어져있다. KOI 시에서는 가로수들이 모두 같은 간격이 되도록 가로수를 추가로 심는 사업을 추진하고 있다. KOI 시에서는 예산문제로 가능한 한 가장 적은 수의 나무를 심고 싶다. 편의상 가로수의 위치는 기준점으로 부터…","fields":{"slug":"/Problem-Solving/2021-03-04-2485번-가로수/"},"frontmatter":{"date":"March 04, 2021","title":"[백준 알고리즘] 2485번: 가로수","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2661 문제 문제\n숫자 1, 2, 3으로만 이루어지는 수열이 있다. 임의의 길이의 인접한 두 개의 부분 수열이 동일한 것이 있으면, 그 수열을 나쁜 수열이라고 부른다. 그렇지 않은 수열은 좋은 수열이다. 다음은 나쁜 수열의 예이다. 33\n32121323\n123123213\n다음은 좋은 수열의 예이다…","fields":{"slug":"/Problem-Solving/2021-03-04-2661번-좋은수열/"},"frontmatter":{"date":"March 04, 2021","title":"[백준 알고리즘] 2661번: 좋은수열","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/15686 문제 문제\n크기가 N×N인 도시가 있다. 도시는 1×1크기의 칸으로 나누어져 있다. 도시의 각 칸은 빈 칸, 치킨집, 집 중 하나이다. 도시의 칸은 (r, c)와 같은 형태로 나타내고, r행 c열 또는 위에서부터 r번째 칸, 왼쪽에서부터 c번째 칸을 의미한다. r과 c는 1부터 시작한다.…","fields":{"slug":"/Problem-Solving/2021-03-03-15686번-치킨배달/"},"frontmatter":{"date":"March 03, 2021","title":"[백준 알고리즘] 15686번: 치킨배달","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/5430 문제 문제\n선영이는 주말에 할 일이 없어서 새로운 언어 AC를 만들었다. AC는 정수 배열에 연산을 하기 위해 만든 언어이다. 이 언어에는 두 가지 함수 R(뒤집기)과 D(버리기)가 있다. 함수 R은 배열에 있는 숫자의 순서를 뒤집는 함수이고, D는 첫 번째 숫자를 버리는 함수이다. 배열이…","fields":{"slug":"/Problem-Solving/2021-03-03-5430번-AC/"},"frontmatter":{"date":"March 03, 2021","title":"[백준 알고리즘] 5430번: AC","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/6064 문제 문제\n최근에 ICPC 탐사대는 남아메리카의 잉카 제국이 놀라운 문명을 지닌 카잉 제국을 토대로 하여 세워졌다는 사실을 발견했다. 카잉 제국의 백성들은 특이한 달력을 사용한 것으로 알려져 있다. 그들은 M과 N보다 작거나 같은 두 개의 자연수 x, y를 가지고 각 년도를 <x:y>와 같…","fields":{"slug":"/Problem-Solving/2021-03-02-6064번-카잉달력/"},"frontmatter":{"date":"March 02, 2021","title":"[백준 알고리즘] 6064번: 카잉달력","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/14500 문제 문제\n폴리오미노란 크기가 1×1인 정사각형을 여러 개 이어서 붙인 도형이며, 다음과 같은 조건을 만족해야 한다. 정사각형은 서로 겹치면 안 된다.\n도형은 모두 연결되어 있어야 한다.\n정사각형의 변끼리 연결되어 있어야 한다. 즉, 꼭짓점과 꼭짓점만 맞닿아 있으면 안 된다.\n정사각형 4…","fields":{"slug":"/Problem-Solving/2021-03-02-14500번-테트로미노/"},"frontmatter":{"date":"March 02, 2021","title":"[백준 알고리즘] 14500번: 테트로미노","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2309 문제 문제\n왕비를 피해 일곱 난쟁이들과 함께 평화롭게 생활하고 있던 백설공주에게 위기가 찾아왔다. 일과를 마치고 돌아온 난쟁이가 일곱 명이 아닌 아홉 명이었던 것이다. 아홉 명의 난쟁이는 모두 자신이 “백설 공주와 일곱 난쟁이”의 주인공이라고 주장했다. 뛰어난 수학적 직관력을 가지고 있던 …","fields":{"slug":"/Problem-Solving/2021-03-02-2309번-일곱난쟁이/"},"frontmatter":{"date":"March 02, 2021","title":"[백준 알고리즘] 2309번: 일곱 난쟁이","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/6603 문제 문제\n독일 로또는 {1, 2, …, 49}에서 수 6개를 고른다. 로또 번호를 선택하는데 사용되는 가장 유명한 전략은 49가지 수 중 k(k>6)개의 수를 골라 집합 S를 만든 다음 그 수만 가지고 번호를 선택하는 것이다. 예를 들어, k=8, S={1,2,3,5,8,13,21,34}…","fields":{"slug":"/Problem-Solving/2021-03-02-6603번-로또/"},"frontmatter":{"date":"March 02, 2021","title":"[백준 알고리즘] 6603번: 로또","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/3085 문제 문제\n상근이는 어렸을 적에 “봄보니 (Bomboni)” 게임을 즐겨했다. 가장 처음에 N×N크기에 사탕을 채워 놓는다. 사탕의 색은 모두 같지 않을 수도 있다. 상근이는 사탕의 색이 다른 인접한 두 칸을 고른다. 그 다음 고른 칸에 들어있는 사탕을 서로 교환한다. 이제, 모두 같은 색…","fields":{"slug":"/Problem-Solving/2021-03-02-3085번-사탕게임/"},"frontmatter":{"date":"March 02, 2021","title":"[백준 알고리즘] 3085번: 사탕게임","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1182 문제 문제\nN개의 정수로 이루어진 수열이 있을 때, 크기가 양수인 부분수열 중에서 그 수열의 원소를 다 더한 값이 S가 되는 경우의 수를 구하는 프로그램을 작성하시오. 입력\n첫째 줄에 정수의 개수를 나타내는 N과 정수 S가 주어진다. (1 ≤ N ≤ 20, |S| ≤ 1,000,000) 둘…","fields":{"slug":"/Problem-Solving/2021-03-02-1182번-부분수열합/"},"frontmatter":{"date":"March 02, 2021","title":"[백준 알고리즘] 1182번: 부분수열합","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1966 문제 문제\n여러분도 알다시피 여러분의 프린터 기기는 여러분이 인쇄하고자 하는 문서를 인쇄 명령을 받은 ‘순서대로’, 즉 먼저 요청된 것을 먼저 인쇄한다. 여러 개의 문서가 쌓인다면 Queue 자료구조에 쌓여서 FIFO - First In First Out - 에 따라 인쇄가 되게 된다. 하…","fields":{"slug":"/Problem-Solving/2021-02-14-1966번-프린터큐/"},"frontmatter":{"date":"February 14, 2021","title":"[백준 알고리즘] 1966번: 프린터 큐","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1158 문제 문제\n요세푸스 문제는 다음과 같다. 1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고, 양의 정수 K(≤ N)가 주어진다. 이제 순서대로 K번째 사람을 제거한다. 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 이 과정을 계속해 나간다. 이 과정은 N명의 사람이 모두 제거될…","fields":{"slug":"/Problem-Solving/2021-02-14-1158번-요세푸스문제/"},"frontmatter":{"date":"February 14, 2021","title":"[백준 알고리즘] 1158번: 요세푸스 문제","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1874 문제 문제\n스택 (stack)은 기본적인 자료구조 중 하나로, 컴퓨터 프로그램을 작성할 때 자주 이용되는 개념이다. 스택은 자료를 넣는 (push) 입구와 자료를 뽑는 (pop) 입구가 같아 제일 나중에 들어간 자료가 제일 먼저 나오는 (LIFO, Last in First out) 특성을 …","fields":{"slug":"/Problem-Solving/2021-02-13-1874번-스택수열/"},"frontmatter":{"date":"February 13, 2021","title":"[백준 알고리즘] 1874번: 스택 수열","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1026 문제 문제\n옛날 옛적에 수학이 항상 큰 골칫거리였던 나라가 있었다. 이 나라의 국왕 김지민은 다음과 같은 문제를 내고 큰 상금을 걸었다. 길이가 N인 정수 배열 A와 B가 있다. 다음과 같이 함수 S를 정의하자. S = A0×B0 + … + AN-1×BN-1 S의 값을 가장 작게 만들기 위…","fields":{"slug":"/Problem-Solving/2021-01-30-1026번-보물/"},"frontmatter":{"date":"January 30, 2021","title":"[백준 알고리즘] 1026번: 보물","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/10816 문제 문제\n숫자 카드는 정수 하나가 적혀져 있는 카드이다. 상근이는 숫자 카드 N개를 가지고 있다. 정수 M개가 주어졌을 때, 이 수가 적혀있는 숫자 카드를 상근이가 몇 개 가지고 있는지 구하는 프로그램을 작성하시오. 입력\n첫째 줄에 상근이가 가지고 있는 숫자 카드의 개수 N(1 ≤ N …","fields":{"slug":"/Problem-Solving/2021-01-30-10816번-숫자카드2/"},"frontmatter":{"date":"January 30, 2021","title":"[백준 알고리즘] 10816번: 숫자카드2","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1406 문제 문제\n한 줄로 된 간단한 에디터를 구현하려고 한다. 이 편집기는 영어 소문자만을 기록할 수 있는 편집기로, 최대 600,000글자까지 입력할 수 있다. 이 편집기에는 ‘커서’라는 것이 있는데, 커서는 문장의 맨 앞(첫 번째 문자의 왼쪽), 문장의 맨 뒤(마지막 문자의 오른쪽), 또는 …","fields":{"slug":"/Problem-Solving/2021-01-28-1406번-에디터/"},"frontmatter":{"date":"January 28, 2021","title":"[백준 알고리즘] 1406번: 에디터","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/10815 문제 문제\n첫째 줄에 상근이가 가지고 있는 숫자 카드의 개수 N(1 ≤ N ≤ 500,000)이 주어진다. 둘째 줄에는 숫자 카드에 적혀있는 정수가 주어진다. 숫자 카드에 적혀있는 수는 -10,000,000보다 크거나 같고, 10,000,000보다 작거나 같다. 두 숫자 카드에 같은 수가…","fields":{"slug":"/Problem-Solving/2021-01-26-10815번-숫자카드/"},"frontmatter":{"date":"January 26, 2021","title":"[백준 알고리즘] 10815번: 숫자 카드","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 DHCP  은 호스트가 자신의 ip 주소를 동적으로 얻을 수 있게하는 방법이다. 호스트는 가장 처음에는 고유한 ip주소를 가지고 있지 않다가 DHCP 서버에서 사용가능한 ip주소를 전달받아 사용하고, 사용을 마친 이후에는 다시 DHCP 서버에 …","fields":{"slug":"/Computer-Network/2020-11-11-네트워크-DHCP/"},"frontmatter":{"date":"November 11, 2020","title":"[네트워크] IP : DHCP","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 네트워크 계층 네트워크 계층은 호스트와 호스트간의 패킷을 전달하는 논리적 역할을 하는 계층이다. 네트워크 계층의 기능은 크게 두 가지로 나눌 수 있다. Forwarding(Data Plane) : 데이터를 다루는  영역에서는 패킷을 어떻게 전달…","fields":{"slug":"/Computer-Network/2020-11-10-네트워크-Internet-Protocol/"},"frontmatter":{"date":"November 10, 2020","title":"[네트워크] IP : Internet Protocol - IPv4","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 비연결형 트랜스포트(UDP) UDP는 다중화와 역다중화 기능, 그리고 오류검사기능을 제외하고는 IP(인터넷 프로토콜, 네트워크 계층의 프로토콜)과 크게 다르지 않다. UDP는 연결을 시도하는에 비연결형 트랜스포트라고 불린다. UDP는 데이터 무…","fields":{"slug":"/Computer-Network/2020-10-13-네트워크-UDP/"},"frontmatter":{"date":"October 13, 2020","title":"[네트워크] 비연결형 트랜스포트 : UDP","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 TCP 연결 TCP는 항상 연결 전에 핸드쉐이킹 과정을 거치지 때문에  서비스이다. TCP로 연결된 두 프로세스는 서로 양방향으로 데이터를 주고받을 수 있다. 따라서 TCP연결은  서비스라고 하기도 한다. TCP 연결은 항상 두 프로세스 사이의…","fields":{"slug":"/Computer-Network/2020-10-13-네트워크-TCP/"},"frontmatter":{"date":"October 13, 2020","title":"[네트워크] 연결지향형 트랜스포트: TCP","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 트랜스포트 계층 트랜스포트 계층은 서로 다른 호스트엣 동작하는 두 프로세스의 을 지원하는 계층이다. 트랜스포트 계층이 있기 떄문에, 각 호스트에서 동작하는 어플리케이션은 두 호스트가 직접적으로 연결되어 있다고 생각한다. 어플리케이션 계층에서 트…","fields":{"slug":"/Computer-Network/2020-10-13-네트워크-트랜스포트계층/"},"frontmatter":{"date":"October 13, 2020","title":"[네트워크] 트랜스포트 계층","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 Reliable Data Transfer TCP 와 같은 서비스는 신뢰적 데이터 전송을 보장한다. 신뢰적 데이터 전송이란, 목적지 프로세스에 항상 모든 데이터가 순서대로 도착하고, 중간에 손실되는 데이터가 없음을 의미한다. Forward Err…","fields":{"slug":"/Computer-Network/2020-10-13-네트워크-신뢰성 있는 데이터 전송/"},"frontmatter":{"date":"October 13, 2020","title":"[네트워크] 신뢰성 있는 데이터 전송의 원리","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 인터넷 비디오 비디오 데이터는 결국 여러장의 이미지를 가지고 있는 데이터이다. 일반적으로는 초당 24~25장의 프레임(이미지)를 가지고 있다. 이런 비디오는 용량이 크기 때문에 여러 방법으로 이미지들을 압축해서 비디오의 용량을 줄이는 인코딩이 …","fields":{"slug":"/Computer-Network/2020-10-12-네트워크-비디오스트리밍-CDN/"},"frontmatter":{"date":"October 12, 2020","title":"[네트워크] 비디오 스트리밍과 컨텐츠 분배 네트워크","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 호스트를 식별하는 방법 패킷을 전달하거나 어떤 서버로 접속할 떄, 우리는 해당 호스트가 누구인지 식별할 수 있는 수단이 필요하다. 그래서 우리는 www.example.com 과 같은 을 사용한다. 하지만 호스트 이름은 가변 문자이기 때문에 라우…","fields":{"slug":"/Computer-Network/2020-10-01-네트워크-DNS/"},"frontmatter":{"date":"October 01, 2020","title":"[네트워크] DNS","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 P2P 개요 P2P는 일반적인 클라인언트-서버 구조와는 달리 서로  라고 부르는 호스트들이 클라이언트도 되고, 서버의 역할을 하기도 한다. 이런 구조는 P2P 네트워크에  를 제공하는데, P2P는 어떤 호스트가 파일을 내려받는 것과 동시에 다른…","fields":{"slug":"/Computer-Network/2020-10-02-네트워크-P2P/"},"frontmatter":{"date":"October 01, 2020","title":"[네트워크] P2P","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 네트워크 어플리케이션 구조 네트워크 어플리케이션의 구조는 어플리케이션 개발자에 의해서 이 어플리케이션이 여러 end system에서 어떻게 구성되어야 하는지에 대해 담고있다. 일반적으로  와 를 사용한다. 클라이언트-서버 구조 : 항상 켜져있는…","fields":{"slug":"/Computer-Network/2020-09-29-네트워크-네트워크-어플리케이션의-원리/"},"frontmatter":{"date":"September 30, 2020","title":"[네트워크] 네트워크 어플리케이션의 원리","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 HTTP(HyperText Transfer Protocol) HTTP는 웹의 어플리케이션 계층 프로토콜이다. HTTP는 클라이언트와 서버프로그램으로 구현되고 두 프로그램이 HTTP를 통해 메세지를 주고받으며 통신한다. 웹 페이지는  로 구성되어…","fields":{"slug":"/Computer-Network/2020-09-30-네트워크-웹과-HTTP/"},"frontmatter":{"date":"September 30, 2020","title":"[네트워크] 웹과 HTTP","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 인터넷 메일 시스템의 구조 인터넷 메일 시스템은 크게 세 가지 구성요소로 이루어져 있다.  : 사용자 에이전트는 사용자들이 사용하는 메일 어플리케이션을 말한다. 지메일, 야후메일 처럼 사용자 에이전트를 통해서 사용자들은 메일을 작성하고, 읽고,…","fields":{"slug":"/Computer-Network/2020-09-30-네트워크-전자메일/"},"frontmatter":{"date":"September 30, 2020","title":"[네트워크] 인터넷 전자메일","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 프로토콜 인터페이스 어떤 네트워크 계층 N이 있을 때, 이 계층은 자신의 바로 위 계층에 서비스를 제공한다. 이 서비스는 인터페이스를 통해서 제공되기 때문에, 윗 계층은 단순히 서비스를 사용하기만 할 뿐, 내부적으로 어떤 구성으로 이루어져 있는…","fields":{"slug":"/Computer-Network/2020-09-18-네트워크-네트워크-계층구조/"},"frontmatter":{"date":"September 18, 2020","title":"[네트워크] 프로토콜 계층과 서비스 모델","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 지연 유형 패킷 교환에서 발생하는 지연은 단순히 한 요소에만 영향을 받지 않는다. 다양한 지연의 유형들이 있지만 주요한 몇가지 지연 유형들을 먼저 알아보자. Processing Delay(처리 지연) 처리 지연은 라우터 내부에서 발생한다. 전달…","fields":{"slug":"/Computer-Network/2020-09-17-네트워크-네트워크지연-손실-계산하기/"},"frontmatter":{"date":"September 17, 2020","title":"[네트워크] 패킷 교환 네트워크에서의 지연(Delay and Loss in Packet Switching)","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 네트워크 공부의 기초가 되는 용어들 End System End system (종단 시스템) : 네트워크를 통해 연결되어 있는 모든 장치들을 의미한다. 우리는 주로 이 장치들을  라고 부른다. 우리가 또 잘 알고있는 것 처럼  는 그 기능에 따라…","fields":{"slug":"/Computer-Network/2020-09-15-네트워크-기본 용어들과 접속 네트워크/"},"frontmatter":{"date":"September 15, 2020","title":"[네트워크] 기본 용어들과 접속 네트워크(Basic Terms and Access Network)","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"참고도서: 컴퓨터 네트워킹 : 하향식 접근. 7판. James F. Kurose , Keith W.Ross 지음 데이터를 이동시키는 방식 링크와 스위치를 통해서 데이터를 이동시키는 방법은  과 으로 나뉜다. Packet Switching(패킷 교환) 어떤 두 end system이 정보를 서로 송수신하게 되면 해당 데이터들은  이라는 작은 세그먼트로 나뉘어…","fields":{"slug":"/Computer-Network/2020-09-15-네트워크-네트워크코어/"},"frontmatter":{"date":"September 15, 2020","title":"[네트워크] 네트워크 코어(Network Core)","category":"Computer-Network","draft":false}}},{"node":{"excerpt":"코로나와 관계에 대한 생각 2020년 상반기는 코로나19로 인해 모든 것이 일반적이지 않은 세상 속에서 살았다. 곧 포항에 가게 될 줄 알고 싸두었던 내 짐들은 여름이 되도록 결국 풀지 못했고 결국 그대로 친누나의 옷방에서 3개월을 지내게 되었다. 나는 사람을 만나는 것을 그다지 즐기지 않는 사람인데, 몇 개월을 혼자 지내다보니 외로움이 많이 느껴졌다. …","fields":{"slug":"/Essay/2020년-1학기-회고/"},"frontmatter":{"date":"July 22, 2020","title":"[회고] 2020년 여름방학의 끝자락에서 적는 회고록","category":"Essay","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1699 문제 문제\n어떤 자연수 N은 그보다 작거나 같은 제곱수들의 합으로 나타낼 수 있다. 예를 들어 11=3^2+1^2+1^2(3개 항)이다. 이런 표현방법은 여러 가지가 될 수 있는데, 11의 경우 11=2^2+2^2+1^2+1^2+1^2(5개 항)도 가능하다. 이 경우, 수학자 숌크라테스는 …","fields":{"slug":"/Problem-Solving/2020-07-17-1699번-제곱수의 합/"},"frontmatter":{"date":"July 17, 2020","title":"[백준 알고리즘] 1699번: 제곱수의 합","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/10026 문제 문제\n적록색약은 빨간색과 초록색의 차이를 거의 느끼지 못한다. 따라서, 적록색약인 사람이 보는 그림은 아닌 사람이 보는 그림과는 좀 다를 수 있다. 크기가 N×N인 그리드의 각 칸에 R(빨강), G(초록), B(파랑) 중 하나를 색칠한 그림이 있다. 그림은 몇 개의 구역으로 나뉘어져…","fields":{"slug":"/Problem-Solving/2020-07-16-10026번-적록색약/"},"frontmatter":{"date":"July 16, 2020","title":"[백준 알고리즘] 10026번: 적록색약","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/14502 문제 문제\n언제나 최고만을 지향하는 굴지의 대기업 진영 주식회사가 신규 사원 채용을 실시한다. 인재 선발 시험은 1차 서류심사와 2차 면접시험으로 이루어진다. 최고만을 지향한다는 기업의 이념에 따라 그들은 최고의 인재들만을 사원으로 선발하고 싶어 한다. 그래서 진영 주식회사는, 다른 모든…","fields":{"slug":"/Problem-Solving/2020-07-15-1946번-신입사원/"},"frontmatter":{"date":"July 15, 2020","title":"[백준 알고리즘] 1946번: 신입사원","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/14502 문제 문제\n인체에 치명적인 바이러스를 연구하던 연구소에서 바이러스가 유출되었다. 다행히 바이러스는 아직 퍼지지 않았고, 바이러스의 확산을 막기 위해서 연구소에 벽을 세우려고 한다. 연구소는 크기가 N×M인 직사각형으로 나타낼 수 있으며, 직사각형은 1×1 크기의 정사각형으로 나누어져 있다…","fields":{"slug":"/Problem-Solving/2020-07-06-14502번-연구실/"},"frontmatter":{"date":"July 06, 2020","title":"[백준 알고리즘] 14502번: 연구실","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/7562 문제 문제\n체스판 위에 한 나이트가 놓여져 있다. 나이트가 한 번에 이동할 수 있는 칸은 아래 그림에 나와있다. 나이트가 이동하려고 하는 칸이 주어진다. 나이트는 몇 번 움직이면 이 칸으로 이동할 수 있을까? ![](https://www.acmicpc.net/upload/images/kni…","fields":{"slug":"/Problem-Solving/2020-07-01-7562번-나이트의 이동/"},"frontmatter":{"date":"July 01, 2020","title":"[백준 알고리즘] 7561번: 나이트의 이동","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 9장 - 메인 메모리 9.1 내부 단편와와 외부 단편와 사이의 차이점을 설명하라. 외부 단편화는 프로세스가 메모리에 연속적인 공간에 적재되고 방출 되면서 생기는 사용 가능한 공간의 분산 때문에 생기…","fields":{"slug":"/Operating-Systems/2020-06-18-운영체제-공룡책-9장-연습문제/"},"frontmatter":{"date":"June 18, 2020","title":"[운영체제] 공룡책(Operating System Concepts) 연습문제 풀기: 9장","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 6장 - 동기화 도구들 6.1 6.4절에서 인터럽트를 자주 비활성화하면 시스템 클록에 영향을 줄 수 있다고 언급했다. 왜 이런 일이 발생할 수 있고 그러한 영향을 최소화할 수 있는 방법에 대해 설명…","fields":{"slug":"/Operating-Systems/2020-06-18-운영체제-공룡책-6장-연습문제/"},"frontmatter":{"date":"June 18, 2020","title":"[운영체제] 공룡책(Operating System Concepts) 연습문제 풀기: 6장","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 5장 - CPU 스케줄링 5.1 CPU 스케줄링 알고리즘은 스케줄 된 프로세스의 실행 순서를 결정한다. 하나의 프로세서에서 n개의 프로세스를 스케줄 하면 몇 개의 다른 스케줄이 가능한가? 하나의 프…","fields":{"slug":"/Operating-Systems/2020-06-18-운영체제-공룡책-5장-연습문제/"},"frontmatter":{"date":"June 18, 2020","title":"[운영체제] 공룡책(Operating System Concepts) 연습문제 풀기: 5장","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 4.1 다중 스레딩이 단일 스레드 솔루션보다 더 나은 성능을 제공하는 세 가지 예제를 제시하라 가장 흔한 예시는 웹서버의 예일 것이다. 동시에 다수의 사용자가 연결을 요청하는 상황에서 단일 스레드로…","fields":{"slug":"/Operating-Systems/2020-06-18-운영체제-공룡책-4장-연습문제/"},"frontmatter":{"date":"June 18, 2020","title":"[운영체제] 공룡책(Operating System Concepts) 연습문제 풀기: 4장","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 3.1 그림 3.30에 표시된 프로그램을 사용하여 LINE A에서 출력되는 내용을 설명하라 위 프로그램을 실행하면  시스템 콜에 의해 새로운 프로세스가 하나 생성된다. 같은 내용을 가지고 있는 두 …","fields":{"slug":"/Operating-Systems/2020-06-16-운영체제-공룡책-3장-연습문제/"},"frontmatter":{"date":"June 16, 2020","title":"[운영체제] 공룡책(Operating System Concepts) 연습문제 풀기: 3장","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 2장 - 운영체제 구조 2.1 시스템 콜의 목적은 무엇인가? 운영체제에 의해 제공되는 시스템의 서비스를 사용할 수 있는 인터페이스를 제공하는 역할을 한다. 사용자 모드에서 발생하는 시스템 콜은 일반…","fields":{"slug":"/Operating-Systems/2020-06-15-운영체제-공룡책-2장-연습문제/"},"frontmatter":{"date":"June 15, 2020","title":"[운영체제] 공룡책(Operating System Concepts) 연습문제 풀기: 2장","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"문자열 검색 라빈 카프 알고리즘은 문자열에 사용하는 알고리즘이다. 어떤 주어진 문자열  에서  라는 문자열을 검색한다고 해보자. 우리가 직관적으로 떠올리는 가장 단순한 방법은 abba를 기준 문자열과 같은 시작 위치에 맞추고 기준 문자열의 시작위치를 한칸씩 뒤로 밀면서 두 문자열이 일치되는 순간을 찾는 것이다. 이 경우에는 기준 문자열의 길이 m, 검색할…","fields":{"slug":"/Algorithm-Analysis/2020-06-12-알고리즘-Rabin-Karp/"},"frontmatter":{"date":"June 12, 2020","title":"[알고리즘 정리] 라빈 카프 알고리즘(Rabin-Karp Algorithm)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"기수 정렬, Radix Sort 기수 정렬은  와 마찬가지로 비교연산을 수행하지 않아 조건이 맞는 상황에서 빠른 정렬 속도를 보장하는 알고리즘이다. 전체적인 컨셉은 데이터의 각 자릿수를 낮은 자리수에서부터 가장 큰 자리수까지 올라가면서 정렬을 수행하는 것이다. 그리고 이런 이유 때문에 자릿수가 존재하지 않는 데이터를 기수정렬로 정렬하는 것은 불가능하다. …","fields":{"slug":"/Algorithm-Analysis/2020-06-11-알고리즘-Radix-Sort/"},"frontmatter":{"date":"June 11, 2020","title":"[알고리즘 정리] 기수정렬(Radix Sort)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 메모리 딘편화 외부 단편화 (External Fragmentation) 앞서서 우리가 공부했던 내용에 따르면, 프로세스는 메모리에 올라오면서 메모리의 사용가능한 공간인 을 찾아 그곳에 적재된다. 그…","fields":{"slug":"/Operating-Systems/2020-06-10-운영체제-메모리-단편화와-페이징/"},"frontmatter":{"date":"June 10, 2020","title":"[운영체제] 메모리 단편화와 페이징(Memory fragmentation and Paging)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 메인 메모리 컴퓨터 시스템 안에서 CPU가 직접적으로 접근할 수 있는 저장장치는 각 코어 안에 내장된 캐시와 메인메모리 뿐이다. 메인메모리 없는 컴퓨터는 시체나 다름없는데(사실 다른 주요장치들도 없…","fields":{"slug":"/Operating-Systems/2020-06-09-운영체제-메인-메모리-구조/"},"frontmatter":{"date":"June 09, 2020","title":"[운영체제] 메인 메모리의 구조","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 소스코드에서 응용프로그램이 되기까지… 우리가 작성한 소스코드는 한 번의 버튼이나 커맨드를 통해서 실행되곤 하지만 그 내부는 생각보다 복잡하다. 컴파일부터 실행파일이 되어 프로세스로 메모리에 적재되기…","fields":{"slug":"/Operating-Systems/2020-06-09-운영체제-빌드과정/"},"frontmatter":{"date":"June 09, 2020","title":"[운영체제] 소스코드가 빌드되는 과정","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"합병정렬, 머지소트, 병합정렬 합병정렬은 퀵정렬과 마찬가지로 분할정복을 이용해서 정렬을 수행하는 알고리즘이다. 퀵정렬과는 다르게 항상 𝛩(nlgn) 의 시간 복잡도를 보장한다는 장점이 있지만, 정렬을 위해 추가적인 메모리를 크게 사용한다는 단점이 있다. Algorithm Concept 합병정렬은 다음과 같은 과정을 통해 배열의 요소들을 정렬하게 된다. (…","fields":{"slug":"/Algorithm-Analysis/2020-05-31-알고리즘-Merge-Sort/"},"frontmatter":{"date":"May 31, 2020","title":"[알고리즘 정리] 합병정렬(Merge Sort)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"Comparison Sort 모든 정렬 알고리즘은 기본적으로 배열의 요소들을 검사하는 과정이 포함되어 있다. 결국 배열의 데이터들을 비교하기 위해서는 Decision Tree 를 만들어 경우의 수를 따져볼 수 있는데, 이로부터 우리는 decision tree 의 높이인 logn 만큼 비교연산이 일어난다는 것을 알아낼 수 있다. 비교연산의 시간 복잡도는 Օ…","fields":{"slug":"/Algorithm-Analysis/2020-05-31-알고리즘-Counting-Sort/"},"frontmatter":{"date":"May 31, 2020","title":"[알고리즘 정리] 계수정렬(Counting Sort)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"퀵소트 퀵 정렬은 이름 그대로 매우 빠르게 정렬을 수행하는 알고리즘이다. 기본적으로 분할정복의 성격을 가지고 있고 실제로도 많이 사용되는 대표적인 정렬 알고리즘이다. 동시에 자료구조 수강생들을 괴롭게 하는 친구 중 한명이긴 하지만.. Algorithm Concept 퀵 정렬은 다음과 같은 과정으로 정렬을 진행한다. 정렬은 오름차순으로 진행한다고 가정하자.…","fields":{"slug":"/Algorithm-Analysis/2020-05-30-알고리즘-Quick-Sort/"},"frontmatter":{"date":"May 30, 2020","title":"[알고리즘 정리] 퀵정렬(Quick Sort)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"All Pairs Shortest Path 지금까지 다뤘던 다익스트라 알고리즘이나 벨만포드 알고리즘은 모두 하나의 정점으로부터 다른 모든 정점까지의 최단거리를 구하는  문제를 풀기위한 알고리즘이었다. 오늘 소개할 플로이드-워셜 알고리즘은 그래프에 있는 모든 모든 정점에 대해 각 정점들이 다른 정점들까지 도달하기 위해 필요한 모든 최단 거리를 구하는 문제이…","fields":{"slug":"/Algorithm-Analysis/2020-05-29-알고리즘-Floyd-Warshall/"},"frontmatter":{"date":"May 29, 2020","title":"[알고리즘 정리] 플로이드-워셜 알고리즘(Floyd-Warshall Algorithm)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 교착상태(Deadlock) 흔히 데드락이라고 우리가 부르는 교착상태는 프로세스나 스레드가 서로가 서로의 자원을 얻길 원하면서 무한정하게 대기하는 상태를 가르킨다. 이전에 세마포어를 공부하면서 경험했…","fields":{"slug":"/Operating-Systems/2020-05-28-운영체제-데드락조건/"},"frontmatter":{"date":"May 28, 2020","title":"[운영체제] 교착상태의 발생조건(Necessary Conditions of Deadlock)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne Resource Deadlock 교착상태는 일반적으로 지금까지 다뤄왔던 자원을 점유하는 상황 속에서 발생하는  과 스레드간 통신 상황에서 발생하는  으로 나뉜다. Communication deadl…","fields":{"slug":"/Operating-Systems/2020-05-28-운영체제-데드락해결안/"},"frontmatter":{"date":"May 28, 2020","title":"[운영체제] 교착상태를 해결하는 방법들","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 세마포어의 문제점 lock 과 semaphore의 사용은 임계구역 문제를 어느정도 해결해주지만, block 지점을 개발자가 직접 설계해서 구현해야하는 어려움이 있다. 때문에 자칫 잘못하면 세마포어를…","fields":{"slug":"/Operating-Systems/2020-05-25-운영체제-모니터/"},"frontmatter":{"date":"May 25, 2020","title":"[운영체제] 모니터(Monitor)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 독자와 저자 문제 한국어로 직역해서 독자와 저자라고 했지만, 우리에게 더 편한 데이터베이스를 한번 생각해보자. 독자는 데이터베이스를 read 하는 요청, 저자는 데이터베이스를 write 하는 요청이…","fields":{"slug":"/Operating-Systems/2020-05-21-운영체제-Readers-Wirters-문제/"},"frontmatter":{"date":"May 23, 2020","title":"[운영체제] 고전적 동기화 문제-2 : 독자와 저자 문제(The Readers-Writers Problem)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 다시 찾아온 생산자-소비자 문제 이전에 공부했던 생산자 소비자 문제가 다시 찾아왔다. 생산자-소비자 문제 혹은 유한 버퍼 문제는 어떤 버퍼에 생산자는 계속해서 자원을 넣으려고 하고, 소비자는 계속해…","fields":{"slug":"/Operating-Systems/2020-05-21-운영체제-유한버퍼문제/"},"frontmatter":{"date":"May 22, 2020","title":"[운영체제] 고전적 동기화 문제-1 : 유한 버퍼 문제(The Bounded-Buffer Problem)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 식사하는 철학자들 철학자들이면서 너무 단순 무식하다.. 식사하는 철학자들 문제는 이렇다. 식사를 하기 위해 모인 철학자 N 명이 있고, 각 철학자들 사이에는 젓가락이 하나씩 총 5개가 있다. 철학자…","fields":{"slug":"/Operating-Systems/2020-05-21-운영체제-식사하는-철학자-문제/"},"frontmatter":{"date":"May 21, 2020","title":"[운영체제] 고전적 동기화 문제-3 : 식사하는 철학자 문제(The Dining-Philosophers Problem)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 마치 세마포어가 임계구역 문제를 해결하는 만능열쇠처럼 보였지만 실상은 그렇지 않다. 다음 예시를 한번 보자. 교착상태(Deadlock) P0 P1 프로세스 P1 과 P2가 임계구역 진입을 시도하려고…","fields":{"slug":"/Operating-Systems/2020-05-20-운영체제-교착상태와기아상태/"},"frontmatter":{"date":"May 20, 2020","title":"[운영체제] 교착상태, 기아상태 그리고 우선순위역전(Deadlocks, Starvation and Priority Inversion)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 뮤텍스(Mutex Lock) 소프트웨어적으로 임계구역 문제를 해결하기 위한 방법 중 하나이다. 임계구역문제를 소프트웨어 단에서 해결하기 위해서는 운영체제를 설계하는 개발자가 알고리즘을 잘 만들어 두…","fields":{"slug":"/Operating-Systems/2020-05-20-운영체제-뮤텍스/"},"frontmatter":{"date":"May 20, 2020","title":"[운영체제] 뮤텍스(Mutex Lock)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 세마포어(Semaphore)는 여러 프로세스(혹은 스레드)가 공유자원을 사용할 때 생기는 임계구역 문제를 해결하기 위한 방법 중 하나이다. 앞서서 가장 간단한 Mutex Lock 기법을 보았는데, …","fields":{"slug":"/Operating-Systems/2020-05-20-운영체제-세마포/"},"frontmatter":{"date":"May 20, 2020","title":"[운영체제] 세마포어(Semaphore)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 임계구역 문제에 대한 해결책으로 피터슨의 해결안이 제안되었지만 최신의 OS와 시스템들은 필요에 따라 명령어의 순서를 변경해서 실행하기 때문에 피터슨의 해결안이 항상 임계구역 문제를 해결한다는 보장이…","fields":{"slug":"/Operating-Systems/2020-05-18-운영체제-testandset-compareandswap/"},"frontmatter":{"date":"May 18, 2020","title":"[운영체제] Test-and-Set 과 Compare-and-Swap","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"DAG는  이다. 풀어서 써보면,  라고 할 수 있다. 벨만-포트 알고리즘의 가장 큰 문제는 음수 사이클이 있는지 확인하기 위해 걸리는 시간이었다. 그러나 DAG에서는 사이클이 존재하지 않고, 방향이 있기 때문에 추가적인 연산없이 최단거리를 찾는 것이 가능할 것이다. Algorithm Strategy 방향이 있고 사이클이 없는 그래프라는 것은 곧 모든 정…","fields":{"slug":"/Algorithm-Analysis/2020-05-17-알고리즘-SSP-DAG/"},"frontmatter":{"date":"May 17, 2020","title":"[알고리즘 정리] DAG에서 최단경로를 찾는 법","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"다익스트라 알고리즘은 SSP 문제를 해결하기 위한 알고리즘 중 벨만-포드 알고리즘에 비해서 속도가 더 빠른 알고리즘이다. 하지만 음수 간선이 있을 때는 해답을 찾지 못한다. 그래서 만약 알고리즘 문제에서 음수 간선이 입력으로 주어진다면 벨만-포드 알고리즘을 사용해야하고, 양수 간선으로만 이루어진 그래프가 주어진다면, 벨만-포드 알고리즘과 다익스트라 알고리…","fields":{"slug":"/Algorithm-Analysis/2020-05-17-알고리즘-SSP-다익스트라알고리즘(Daijkstra)/"},"frontmatter":{"date":"May 17, 2020","title":"[알고리즘 정리] 다익스트라 알고리즘(Daijkstra Algorithm)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1753 문제 문제\n방향그래프가 주어지면 주어진 시작점에서 다른 모든 정점으로의 최단 경로를 구하는 프로그램을 작성하시오. 단, 모든 간선의 가중치는 10 이하의 자연수이다. 입력\n첫째 줄에 정점의 개수 V와 간선의 개수 E가 주어진다. (1≤V≤20,000, 1≤E≤300,000) 모든 정점에는 …","fields":{"slug":"/Problem-Solving/2020-05-17-1753번-최단경로/"},"frontmatter":{"date":"May 17, 2020","title":"[백준 알고리즘] 1753번: 최단경로","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2468 문제 문제\n재난방재청에서는 많은 비가 내리는 장마철에 대비해서 다음과 같은 일을 계획하고 있다. 먼저 어떤 지역의 높이 정보를 파악한다. 그 다음에 그 지역에 많은 비가 내렸을 때 물에 잠기지 않는 안전한 영역이 최대로 몇 개가 만들어 지는 지를 조사하려고 한다. 이때, 문제를 간단하게 하…","fields":{"slug":"/Problem-Solving/2020-05-17-2468번-안전영역/"},"frontmatter":{"date":"May 17, 2020","title":"[백준 알고리즘] 2468번: 안전 영역","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/4386 문제 문제\n도현이는 우주의 신이다. 이제 도현이는 아무렇게나 널브러져 있는 n개의 별들을 이어서 별자리를 하나 만들 것이다. 별자리의 조건은 다음과 같다. 별자리를 이루는 선은 서로 다른 두 별을 일직선으로 이은 형태이다.\n모든 별들은 별자리 위의 선을 통해 서로 직/간접적으로 이어져 있어…","fields":{"slug":"/Problem-Solving/2020-05-16-4386번-별자리-만들기/"},"frontmatter":{"date":"May 16, 2020","title":"[백준 알고리즘] 4386번: 별자리 만들기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/11657 문제 문제\nN개의 도시가 있다. 그리고 한 도시에서 출발하여 다른 도시에 도착하는 버스가 M개 있다. 각 버스는 A, B, C로 나타낼 수 있는데, A는 시작도시, B는 도착도시, C는 버스를 타고 이동하는데 걸리는 시간이다. 시간 C가 양수가 아닌 경우가 있다. C = 0인 경우는 순간…","fields":{"slug":"/Problem-Solving/2020-05-16-11657번-타임머신/"},"frontmatter":{"date":"May 16, 2020","title":"[백준 알고리즘] 11657번: 타임머신","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"이제 본격적으로 SSP를 해결하기 위한 알고리즘을 살펴보자. 처음으로 소개할 알고리즘은 Bellman-Ford 알고리즘이다. 우리 말로는 벨만-포드 알고리즘이라고 한다. Bellman-Ford Algorithm 벨만-포드 알고리즘의 특징은 SSP를 해결하는 알고리즘 접근 중 유일하게 negative weight 이 존재하는 그래프에서도 최단경로를 찾을 수…","fields":{"slug":"/Algorithm-Analysis/2020-05-15-알고리즘-SSP-벨만포드알고리즘(BellmanFord)/"},"frontmatter":{"date":"May 15, 2020","title":"[알고리즘 정리] 벨만-포드 알고리즘(Bellman-Ford Algorithm)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"는 가중치가 있는 그래프에서 어떤 정점에서 다른 정점으로 이동하기까지 가장 짧은 가중치의 합으로 목적지에 도달하는 방법을 찾기 위한 전략이다. 최단 경로문제는 몇가지 유형으로 나누어진다. Single Source: 하나의 노드로부터 출발해서 다른 모든 노드의 최단 경로를 찾는 문제 Single Destination: 모든 노드로부터 하나의 목적지 까지의 …","fields":{"slug":"/Algorithm-Analysis/2020-05-15-알고리즘-최단경로/"},"frontmatter":{"date":"May 15, 2020","title":"[알고리즘 정리] 최단경로(Shortest Path)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 여러 프로세스가 동시에 작업을 수행할 때, 이 프로세스들 사이에 데이터의 공유가 있을 수 있다. 앞선 수업들에서 정리했던 것 처럼, 공유 메모리나 메세지를 전달하는 방식으로 말이다. 그런데 만약 데…","fields":{"slug":"/Operating-Systems/2020-05-14-운영체제-임계구역문제/"},"frontmatter":{"date":"May 14, 2020","title":"[운영체제] 임계 구역 문제와 피터슨의 해결안(Critical Section Problem and Peterson's Solution)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"Kruskal MST Algorithm 최소 신장 트리를 구하는 알고리즘 중 하나인 크루스칼 알고리즘을 알아보자. Algorithm Concept 크루스칼 알고리즘은 Greedy Algorithm을 적용해서 가중치가 가장 적은 간선들을 계속 선택한다. 알고리즘은 다음과 같은 과정으로 이루어진다. 그래프의 모든 간선을 가중치가 낮은 순서대로 정렬 순서대로 …","fields":{"slug":"/Algorithm-Analysis/2020-05-13-알고리즘-MST-크루스칼알고리즘/"},"frontmatter":{"date":"May 13, 2020","title":"[알고리즘 정리] 크루스칼 알고리즘(Kruskal Algorithm)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"프림 알고리즘은 크루스칼 알고리즘처럼 간선의 가중치가 낮은 간선부터 선택해서 MST를 만들어 나가지만, 크루스칼 알고리즘과는 다르게 여러 트리들을 만들고 점점 합치는 것이 아니라 하나의 트리를 유지해가면서 새로운 간선을 추가해나가는 방식으로 진행한다. Algorithm Concept 프림 알고리즘은 다음과 같은 과정으로 진행된다. 임의의 루트노드 r을 포…","fields":{"slug":"/Algorithm-Analysis/2020-05-13-알고리즘-MST-프림알고리즘/"},"frontmatter":{"date":"May 13, 2020","title":"[알고리즘 정리] 프림 알고리즘(Prim's Algorithm)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/9372 문제 문제\n그래프가 주어졌을 때, 그 그래프의 최소 스패닝 트리를 구하는 프로그램을 작성하시오. 최소 스패닝 트리는, 주어진 그래프의 모든 정점들을 연결하는 부분 그래프 중에서 그 가중치의 합이 최소인 트리를 말한다. 입력\n첫째 줄에 정점의 개수 V(1 ≤ V ≤ 10,000)와 간선의 개…","fields":{"slug":"/Problem-Solving/2020-05-13-1197번-최소-스패닝-트리/"},"frontmatter":{"date":"May 13, 2020","title":"[백준 알고리즘] 1197번: 최소 스패닝 트리","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/9372 문제 문제\n상근이는 겨울방학을 맞아 N개국을 여행하면서 자아를 찾기로 마음먹었다. 하지만 상근이는 새로운 비행기를 무서워하기 때문에, 최대한 적은 종류의 비행기를 타고 국가들을 이동하려고 한다. 이번 방학 동안의 비행 스케줄이 주어졌을 때, 상근이가 가장 적은 종류의 비행기를 타고 모든 국…","fields":{"slug":"/Problem-Solving/2020-05-13-9372번-상근이의여행/"},"frontmatter":{"date":"May 13, 2020","title":"[백준 알고리즘] 9372번: 상근이의 여행","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"Spanning Tree Minimum Spanning Tree 를 시작하기 전에, Spanning Tree가 무엇인지 정리해보자. Spanning Tree Condition  라고도 하는 스패닝 트리는 다음과 같은 조건이 성립해야한다. N개의 정점을 가지는 그래프에서 최소 N-1 개의 간선으로 연결되어 있다. 그래프의 모든 정점을 포함한다. 그래프의 모…","fields":{"slug":"/Algorithm-Analysis/2020-05-12-알고리즘-최소신장트리/"},"frontmatter":{"date":"May 12, 2020","title":"[알고리즘 정리] 최소 신장 트리(MST)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/11266 문제 문제\n그래프가 주어졌을 때, 단절점을 모두 구해 출력하는 프로그램을 작성하시오. 단절점이란 그 정점을 제거했을 때, 그래프가 두 개 또는 그 이상으로 나누어지는 정점을 말한다. 즉, 제거했을 때 그래프의 connected component의 개수가 증가하는 정점을 말한다. 입력\n첫째…","fields":{"slug":"/Problem-Solving/2020-05-12-백준-단절점/"},"frontmatter":{"date":"May 12, 2020","title":"[백준 알고리즘] 11266번: 단절점","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"Articulation Point (단절점) 방향이 없는 그래프에서 어떤 정점(vertex)를 제거했을 때, 두 개 이상의 그래프가 형성되게 하는 정점을 Articulation Point 라고 한다. 조금 더 쉽게 이야기하자면, 이 정점이 두 그래프의 연결점이 되는 것과 같다. 다음 그래프를 한번 살펴보자.  이 그래프는 정점 C를 기준으로 두 그래프로 …","fields":{"slug":"/Algorithm-Analysis/2020-05-11-알고리즘-단절점(Articulation-Point)/"},"frontmatter":{"date":"May 11, 2020","title":"[알고리즘 정리] 단절점(Articulation Point)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"Critical Path (임계경로) 방향 그래프는 위상정렬에서 보았던 것 처럼 어떤 순서를 표현하는 것이 가능하다.  는 방향 그래프에서 어떤 정점까지 도달하는데 가장 오래 걸리는 경로를 의미한다. 가장 짧은 경로를 구하는 것이 더 의미있게 느껴질 수도 있겠지만, 가장 오래걸리는 경로를 구한다면, 가능한 모든 경로가 해당 경로의 거리나 시간 이내로 마칠…","fields":{"slug":"/Algorithm-Analysis/2020-05-08-알고리즘-임계경로(Critical-Path)/"},"frontmatter":{"date":"May 08, 2020","title":"[알고리즘 정리] 임계 경로(Critical Path)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/9252 문제 문제\n방향 그래프가 주어졌을 때, 그 그래프를 SCC들로 나누는 프로그램을 작성하시오. 방향 그래프의 SCC는 우선 정점의 최대 부분집합이며, 그 부분집합에 들어있는 서로 다른 임의의 두 정점 u, v에 대해서 u에서 v로 가는 경로와 v에서 u로 가는 경로가 모두 존재하는 경우를 말…","fields":{"slug":"/Problem-Solving/2020-05-08-백준-SCC/"},"frontmatter":{"date":"May 08, 2020","title":"[백준 알고리즘] 2150번: Strongly Connected Component","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"Strongly Connected Component  라고도 하는 Strongly Connected Component 는 방향 그래프에서 다음과 같은 조건이 성립하는 정점들의 집합이다. SCC 내에 있는 어떤 두 정점에 대한 경로가 항상 존재한다. 즉, 사이클이 존재한다. 서로 다른 SCC에 속하는 두 정점은 서로 양방향으로 연결될 수 없다. 즉, SCC…","fields":{"slug":"/Algorithm-Analysis/2020-05-08-알고리즘-강한연결요소(Strongly-Connected-Component)/"},"frontmatter":{"date":"May 08, 2020","title":"[알고리즘 정리] 강한 연결 요소(Strongly Connected Component)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne Real-Time CPU Scheduling 운영체제가 실시간으로 동작하면서 스케줄링을 수행하는 것을 우리는 두 종류로 구분한다.  : 우선순위가 높은 프로세스가 먼저 실행되도록 보장하는 시스템  …","fields":{"slug":"/Operating-Systems/2020-05-07-운영체제-실시간스케줄링/"},"frontmatter":{"date":"May 07, 2020","title":"[운영체제] 실시간 CPU 스케줄링(Real-Time CPU Scheduling)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 이전 수업에서 다뤘던 내용은 모두 단일한 프로세서와 단일한 코어인 환경에서의 스케줄링 전략들이었다. 하지만 현재 상황에서는 프로세서를 하나만 쓰거나 코어를 하나만 사용하는 일은 전무하다. 실제 상황…","fields":{"slug":"/Operating-Systems/2020-05-07-운영체제-멀티프로세서스케줄링/"},"frontmatter":{"date":"May 07, 2020","title":"[운영체제] 멀티 프로세서 스케줄링(Multiple Processor Scdeduling)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"2846번: 오르막길 접근 방법: 탐색 알고리즘 아이디어를 생각했다. 탐색을 시작하는 출발 인덱스를 설정하고 내리막길을 만날때까지 인덱스를 증가시킨다. 내리막길을 만나면 오르막길의 끝 인덱스의 값과 출발 지점의 값의 차를 구해서 높이를 구하고 그 높이가 현재까지 구한 값들 중 최대 높이인지 확인한다. 탐색은 주어진 수열의 끝의 도달할때까지 진행하고 중복 …","fields":{"slug":"/Problem-Solving/2019-12-27-2846번-오르막길/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2846번: 오르막길","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"2783번: 삼각김밥 접근 방법: 사실 거스름돈 문제와 비슷한 전개로 가야한다고 생각해서 벡터도 두개만들고 이리저리 삽질을 하다가 문제를 다시 보니 이런게 아닌것 같아서 1그램당 가격을 구하고 가장 싼 가격으로 1000그램을 만드는 방식으로 풀었더니 풀렸다. 엄청 간단한 문제였는데 너무 복잡하게 생각한 것 같고 잠깐 쉬다가 다시 하니까 머리가 잘 돌아가는…","fields":{"slug":"/Problem-Solving/2019-12-27-2783번-삼각김밥/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2783번: 삼각김밥","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"3000번: 직각 삼각형 접근 방법: 접근 방법 1: 처음 시도했던 방법은 빗변의 갯수를 구하는 방법이었다. 좌표축과 평행하려면 각 3개의 x, y좌표 중 적어도 각각 두 개의 좌표가 같은 위치에 있어야 한다. 따라서 겹치는 점이 아예 없는 좌표들을 빗변으로 생각하고 만들어진 빗변의 양끝점의 x나 y좌표와 일치하는 점을 찾는 방법을 시도했다. 결과는 시간…","fields":{"slug":"/Problem-Solving/2019-12-29-3000번-직각-삼각형/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 3000번: 직각 삼각형","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"3040번: 백설 공주와 일곱 난쟁이 접근 방법: 처음에는 이것저것 이상하게 시도를 많이 해봤는데 잘 안돼서 단순하지만 확실한 방법으로 해결했다. 벡터에 입력을 모두 저장하고 모든 요소들을 이중 for 문으로 순회하면서 두 개의 요소의 값을 0으로 만든다. 어차피 입력은 1이상 99이하이므로 0이 들어올 일이 없어 괜찮다. 그리고 벡터의 요소들의 합을 구…","fields":{"slug":"/Problem-Solving/2019-12-27-3040번-백설-공주와-일곱-난쟁이/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 3040번: 백설 공주와 일곱 난쟁이","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"15552번: 빠른 A+B 빠른 입출력 연습용 문제. 별 다른 접근 방법이 필요없다. 통과 코드:","fields":{"slug":"/Problem-Solving/2019-12-30-15552번-빠른-A+B/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 15552번: 빠른 A+B","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1181번: 단어 정렬 접근 방법: C++에서 지원하는 sort함수는 nlogn 복잡도라서 따로 내가 구현할 필요없이 이 함수를 사용하면 될 것 같다. 전체 단어들을 벡터에 넣어두고 글자길이 순서대로 꺼내서 새로운 벡터에 넣고 같은 글자길이들 끼리 정렬을 해주어야하는데, 각 글자길이당 시작되는 벡터 인덱스를 소트 함수에 넣어주어서 글자 길이가 같은 단어들…","fields":{"slug":"/Problem-Solving/2019-12-30-1181번-단어-정렬/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1181번: 단어 정렬","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"8958번: OX퀴즈 접근 방법: 연속된 갯수를 세는 변수하나를 만들어서 그 변수의 값과 O가 나올 때마다 1을 곱해서 점수를 계속 누적시키면서 더한다. 통과 코드:","fields":{"slug":"/Problem-Solving/2019-12-30-8958번-OX퀴즈/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 8958번: OX퀴즈","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1436번: 영화감독 숌 접근 방법: 사실 나머지 연산으로 해도 될 것 같긴 한데, 문자열로 처리하는게 제일 간단해보여서 나는 i를 0부터 계속 증가시키면서 i를 문자열로 변환하고 해당 문자열에 666이 포함되어 있는지 확인하는 방법을 시도했다. string 라이브러리의 substr() 함수는 substring을 찾으면 그 string을 반환하고, 찾지 …","fields":{"slug":"/Problem-Solving/2020-01-01-1436번-영화감독-숌/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1436번: 영화감독 숌","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"10989번: 수 정렬하기 3 접근 방법: 접근 방법 1: 문제에서 카운팅 정렬을 사용하라는 힌트를 주어서 구글링을 통해 카운팅 정렬의 개념을 보고 구현에 성공 했다. 근데 메모리 초과 오류가 났다. 이 문제에서 메모리가 8MB로 제한되어 있기 때문에 배열을 3개까지 사용해야하는 카운팅 정렬은 불가능 했다. 접근 방법 2: 자연수가 10000까지 들어오므…","fields":{"slug":"/Problem-Solving/2020-01-03-10989번-수-정렬하기-3/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 10989번: 수 정렬하기 3","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"448. Find All Numbers Disappeared in an Array 접근 방법: 처음에는 벡터를 두개 사용해서 find함수를 통해 해결하려고 했는데, std::find 함수는 모든 배열 요소를 검사하는 O(N^2) 의 복잡도를 가진다. 그래서 시간초과를 해결하기 위해 set을 사용하기로 했다. set 자료구조는 아이템이 들어갈 때마다 자동으…","fields":{"slug":"/Problem-Solving/2019-12-31-1764번-듣보잡/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1764번: 듣보잡","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1427번: 소트인사이드 접근 방법: 사실 C로 풀었으면 좀 헤맸을 것 같은데 CPP로 풀어서 쉽게 풀 수 있었다. 내림차순 정렬을 위해서 sort함수의 마지막 인자로 넣어줄 functional 라이브러리의 greater()을 가져오고 입력으로 받은 string을 정렬해주기만 하면 끝이다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-03-1427번-소트인사이드/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1427번: 소트인사이드","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"2798번: 블랙잭 접근 방법: 브루트 포스 문제인것 같다. 어차피 N이 최대 100개까지 밖에 못들어오기 때문에 모든 경우의 수를 다 계산해도 시간초과는 나지 않을 것 같다. 반복문을 세 개 중첩해서 쓰면서 3개를 더해서 나올 수 있는 M이하의 최댓값을 구한다. 통과 코드:","fields":{"slug":"/Problem-Solving/2019-12-30-2798번-블랙잭/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2798번: 블랙잭","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1712번: 손익분기점 접근 방법: 접근 방법 1: x를 증가시키면서 손익분기점을 넘는 갯수를 찾으려고 했는데 시간 초과가 됐다. 접근 방법 2: 손익 분기점을 찾는 공식이 있어 찾아보니 고정비용/가변비용-가격 을 계산하면 손익분기점에 대한 상품 갯수를 알 수 있는데, 여기서 손익 분기점에 정확히 도달하게되는 상품 갯수가 나오기 때문에 손익분기점을 넘지 …","fields":{"slug":"/Problem-Solving/2019-12-30-1712번-손익분기점/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1712번: 손익분기점","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"11650번: 좌표 정렬하기 접근 방법: 벡터를 두개 써보기도 하고 map을 써보기도 하고 엄청 헤맸다..그러다가 pair 를 벡터의 아이템으로 넣을 수 있다는 것을 알게되어 이 방법으로 시도해 보았다. pair를 벡터 안에 입력 받을 때마다 넣고 sort함수를 통해 벡터를 정렬하면 first 기준으로 오름차순 정렬되고 first끼리 같다면 second …","fields":{"slug":"/Problem-Solving/2020-01-04-11650번-좌표-정렬하기/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 11650번: 좌표 정렬하기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"15650번: N과 M (2) 접근 방법: N과 M(1)과 마찬가지로 진행하면서 오름차순인 수열들만 결과 벡터에 넣어두고 맨 마지막의 결과 벡터에 들어있는 값들을 출력해주었다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-05-15650번-N과-M-(2)/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 15650번: N과 M (2)","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"2108번: 통계학 접근 방법: 산술평균: numeric 라이브러리에 들어있는 accumulate 함수를 통해서 입력받은 값들이 들어있는 벡터 요소들의 총합을 구하고 N으로 나눈다. cmath 의 round를 이용해서 반올림을 구현한다. 중앙값: 입력이 언제나 홀수개로 들어오기 때문에 그냥 벡터의 사이즈/2 를 해주면 중앙값의 인덱스를 구할 수 있다. 중…","fields":{"slug":"/Problem-Solving/2020-01-03-2108번-통계학/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2108번: 통계학","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"11651번: 좌표 정렬하기 2 접근 방법: 기존 정렬하기 코드에서 sort 함수의 인자로 새로 정의한 비교함수를 넣어주었다. 이 함수에서는 pair 의 second 끼리 비교하고 second가 서로 같으면 first끼리 다시 비교해서 first가 더 작은 수를 앞으로 정렬시키도록 구성했다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-05-11651번-좌표-정렬하기-2/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 11651번: 좌표 정렬하기 2","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"10814번: 나이순 정렬 접근 방법: map 자료구조를 사용하면 쉽게 해결할 수 있다. map 은 pair를 insert 하면 바로 first를 기준으로 정렬한다. 그리고 first가 같은 같은 pair는 원래 허용이 안되지만 multimap이라는 특수한 자료구조를 사용하면 여러개의 first 값을 유지하면서 first가 같은 값은 나중에 들어온 순서대…","fields":{"slug":"/Problem-Solving/2020-01-04-10814번-나이순-정렬/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 10814번: 나이순 정렬","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1018번: 체스판 다시 칠하기 접근 방법: 접근 방법 1: 처음에는 각 행의 첫 자리를 홀수번째 열, 짝수번째 열과 비교하며 바꿔야하는 자리를 찾는 방법으로 해결하려고 했는데, 틀렸습니다가 계속 나왔다. 그래서 반례를 찾아보니 만약 (0, 0) 자리의 말만 바꾸면 해결되는 경우가 있을 수 있기 때문에 이 방법은 잘못된 방법이라는 것을 알았다. 접근 방법…","fields":{"slug":"/Problem-Solving/2020-01-01-1018번-체스판-다시-칠하기/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1018번: 체스판 다시 칠하기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"15651번: N과 M (3) 접근 방법: 기존 N과 M을 구현할 때는 bool형 visited 벡터를 두어서 이미 들렀던 노드의 여부를 체크해줘서 first와 second가 같은 값을 가지지 않도록 했었는데, 이번 문제는 중복을 허용하기 때문에 visited 벡터를 없애고 모든 노드를 매번 순회하면 된다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-05-15651번-N과-M-(3)/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 15651번: N과 M (3)","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"15652번: N과 M (4) 접근 방법: N과 M 3번의 코드에서 비내림차순만 확인해서 비내림차순인 세트들만 출력해준다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-05-15652번-N과-M-(4)/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 15652번: N과 M (4)","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"15649번: N과 M (1) 접근 방법: DFS를 통해 해결하는 문제. 백트래킹을 연습하는 단계에 들어왔는데 자료구조때 배웠던 DFS를 다 까먹어서 구글링하면서 다시 공부했다. 전체적인 알고리즘은 깊이를 계속 내려가면서 방문했던 노드를 마킹하고 깊이가 내려갈 때마다 아이템을 넣을 배열 위치를 하나씩 늘려간다. 그리고 배열이 M 길이만큼 채워지면 채워진 …","fields":{"slug":"/Problem-Solving/2020-01-05-15649번-N과-M-(1)/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 15649번: N과 M (1)","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"7568번: 덩치 접근 방법: int 형 데이터 두개를 가지는 pair변수를 만들어 몸무게와 키를 쌍으로 입력받아 벡터에 모두 저장한다. 모든 아이템의 등수는 초기에 1위로 설정된다. 그리고 벡터의 아이템을 처음부터 다른 아이템들과 모두 비교하면서 자신보다 더 큰 몸무게와 키를 가진 아이템을 만나면 등수를 1씩 올려준다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-06-7568번-덩치/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 7568번: 덩치","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"10867번: 중복 빼고 정렬하기 접근 방법: 정렬, 그리고 중복된 수를 허용하지 않는다는 조건을 보고 바로 set이 떠올랐다. 입력을 set으로 받기만하고 출력만 해주면 될 것 같다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-07-10867번-중복-빼고-정렬하기/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 10867번: 중복 빼고 정렬하기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"15947번: 아기 석환 뚜루루 뚜루 접근 방법: 어차피 뚜루루 뚜루 부분을 제외한 다른 부분은 그대로 출력하면 되기 때문에 배열에 모든 문자열을 따로따로 맵핑해두고 입력으로 들어오는 N을 전체 문자열 갯수인 14로 나누고 남은 나머지 위치에 있는 문자열을 출력해주면 된다. 이때 출력할 문자열이 tururu 나 turu 면 N을 14로 나눈 몫만큼 반복해…","fields":{"slug":"/Problem-Solving/2020-01-07-15947번-아기-석환-뚜루루-뚜루/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 15947번: 아기 석환 뚜루루 뚜루","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"2164번: 카드2 접근 방법: 내가 찾은 규칙은 정렬되어 있는 1부터 N까지의 수들이 한칸씩 계속 건너뛰면서 삭제되는 것이다. 하나가 남을 때까지 진행되어야 되기 때문에 제일 마지막 수까지 도달하면 다시 원점으로 돌아와 삭제를 해야되는데 이때 삭제된 수들은 제외하고 한칸씩 가야한다. 이것을 벡터에 넣어서 erase로 구현하려고 처음에 시도했지만 시간초과…","fields":{"slug":"/Problem-Solving/2020-01-08-2164번-카드2/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2164번: 카드2","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"15657번: N과 M (8) 접근 방법: 기존 코드에서 비내림차순을 검사하는 함수만 추가했다. N과 M을 풀면서 코드를 매번 처음부터 다시 짜보는데 이제 좀 백트래킹을 구현하는 데에 익숙해지고 있는 것 같다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-10-15657번-N과-M-(8)/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 15657번: N과 M (8)","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"11866번: 요세푸스 문제 0 접근 방법: 카드 문제랑 비슷한 컨셉이지만 이번에는 건너뛰는 값이 가변이기 때문에 벡터를 만들어서 실제로 건너뛰면서 삭제하는 형태로 풀었다. 어려웠던 부분은 마지막에 도달했을 때 다시 처음으로 돌리는 부분인데, end()함수를 쓰지 않고 back() 함수를 사용하니 쉽게 풀렸다. 그렇지만 back()을 사용할 수 있었던 것…","fields":{"slug":"/Problem-Solving/2020-01-08-11866번-요세푸스-문제-0/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 11866번: 요세푸스 문제 0","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"15657번: N과 M (9) 접근 방법: 9번은 입력으로 중복되는 수가 들어올 때 경우의 수들 중 중복을 없애주어야 하는데, 이를 위해서 결과들을 모으는 set을 하나 만들어서 벡터에 숫자 M개가 모이면 바로 출력하지 않고 set에 저장시키는 방법으로 해결했다. set은 중복도 걸러주고 정렬도 해준다! 개꿀… 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-10-15663번-N과-M-(9)/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 15663번: N과 M (9)","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"15664번: N과 M (10) 접근 방법: 9번 문제에서 이전에 구현했던 비내림차순만 다시 구현해서 넣으면 된다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-10-15664번-N과-M-(10)/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 15664번: N과 M (10)","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"15665번: N과 M (11) 접근 방법: 중복되는 아이템을 제거할 필요가 없기 때문에 벡터를 순회하면서 경우의 수를 모두 조합해보는 방법으로 해결했다. 방문 했던 노드는 검사하지 않아도 되고 검사해야되는 부분은 순열을 저장하는 벡터의 크기가 M과 같아질 때 이 벡터를 최종 결과를 저장하는 벡터에 계속 넣고 마지막에 정렬 후 출력해준다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-11-15665번-N과-M-(11)/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 15665번: N과 M (11)","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"11004번: K번째 수 접근 방법: c++에서 지원하는 nth_element 합수를 통해 해결했다. 이 함수는 quick selection이라는 알고리즘을 사용하는데, 퀵소트와 셀렉션 소트 알고리즘의 컨셉을 합쳐서 만든 알고리즘이다. 따로 공부가 필요해 보인다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-14-11004번-K번째-수/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 11004번: K번째 수","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"2580번: 스도쿠 접근 방법: 백트래킹으로 해결할 수 있었다. 제일 까다로웠던 부분은 3X3 구역에 겹치는 숫자가 있는지 확인하는 것이었는데, 어떤 좌표의 구간 위치를 구하기 위해서 좌표를 3으로 나눈 몫에 다시 3을 곱하는 방식으로 0, 3, 6 중 하나가 나오도록 했다. 백트래킹을 진행하면서 재귀를 끝내는 조건으로 모든 0이 들어있는 좌표가 다른 숫…","fields":{"slug":"/Problem-Solving/2020-01-15-2580번-스도쿠/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2580번: 스도쿠","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"17213번: 과일 서리 접근 방법: DFS를 통한 중복 조합을 찾아 해결했다. 무조건 각 종류의 과일이 한번씩은 포함되어야하기 때문에 조합을 찾을 때 M-N개의 조합만 찾으면 된다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-16-17213번-과일-서리/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 17213번: 과일 서리","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"15654번: N과 M (5) 접근 방법: 백트래킹 문제를 푸는게 어려워서 연습하려고 N과 M으로 돌아왔다. 이 문제는 수열을 만들 수가 주어지기 때문에 이 수들을 pair의 first로 넣고 second는 bool형태로 방문했던 수인지 확인하는 변수를 만들어서 해결했다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-07-15654번-N과-M-(5)/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 15654번: N과 M (5)","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1003번: 피보나치 함수 접근 방법: 손으로 계산해서 0과 1의 개수를 n에 대해서 나열했을 때, 각각 피보나치 수열로 증가하는 것을 알 수 있었다. 따라서 0에 대해서, 그리고 1에 대한 피보나치 수열을 N까지 구하고 출력했다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-17-1003번-피보나치-함수/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1003번: 피보나치 함수","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1904번: 01타일 접근 방법: 주어진 타일들로 N에 대해서 조합을 만들어보면 0으로 끝나는 조합과 1로 끝나는 조합의 합이 1, 2, 3, 5, 8, 13 순으로 늘어난다. 즉 피보나치 수열로 늘어난다. 큰 수 처리를 위해서 주어져 있는 조건인 15746으로 나눈 나머지를 사용하는 것이 까다로웠는데, 한번 재귀 호출을 할 때 그 결과를 15746으로 …","fields":{"slug":"/Problem-Solving/2020-01-18-1904번-01타일/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1904번: 01타일","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"17214번: 다항 함수의 적분 접근 방법: 하 진짜 개빡치는 문제…어렵진 않은데 처리해줘야되는게 너무 많다..문자열을 가운데 있는 연산자를 기준으로 두개로 나누어서 각각 적분식에 따라 처리해주고 마지막에 적분상수 W를 붙여주어 해결했다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-16-17214번-다항-함수의-적분/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 17214번: 다항 함수의 적분","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"15666번: N과 M (12) 대망의 N과 M 마지막 문제! 여태 나왔던 컨셉들을 합쳐서 쉽게 해결했다..! 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-11-15666번-N과-M-(12)/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 15666번: N과 M (12)","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"17210번: 문문문 접근 방법: 규칙을 보니 6이상이 되면 해결이 불가능하다. 왜냐하면 규칙 3과 4가 2와 3의 최소공배수인 6을 만들게 되는데 규칙상 연속해서 같은 방법으로 문을 열 수 없기 때문에 어떤 방법으로 시작하든 6에서는 연달아 같은 방법을 사용해야하기 때문이다. 따라서 6 이상일 때는 탈출불가 메세지를 무조건 출력하도록 하고 6이하는 정해…","fields":{"slug":"/Problem-Solving/2020-01-16-17210번-문문문/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 17210번: 문문문","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"11047번: 동전0 접근 방법: 가장 높은 단위의 동전부터 최대한 많이 사용하면서 가격을 맞춘다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-21-11047번-동전0/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 11047번: 동전0","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"9461번: 파도반 수열 접근 방법: 파도반 수열을 나열해보면 P(N)은 P(N-2) 와 P(N-3)의 합으로 만들어지는 것을 알 수 있었다. 이것을 dp로 구현하면 끝. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-19-9461번-파도반-수열/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 9461번: 파도반 수열","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1932번: 정수 삼각형 접근 방법: 삼각형에 빗변에 해당하는 행의 가장 첫 열과 마지막 열은 이전 행의 첫 열과 마지막 열과의 누적합이다. 따라서 각 행을 순회하면서 가장 첫 요소와 마지막 요소는 이전 행의 처음과 마지막 값에서 현재 값을 더해준다. 중간 값은 우리가 최댓값을 구해야하기 때문에 두가지 경우의 수, 즉 현재 노드를 기준으로 왼쪽 위에 있는…","fields":{"slug":"/Problem-Solving/2020-01-28-1932번-정수-삼각형/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1932번: 정수 삼각형","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"2748번: 피보나치 수 2 접근 방법: dp 연습문제. 0번째, 1번째를 0, 1로 만들어두고 n까지 i-2 와 i-1번째의 합으로 구한다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-17-2748번-피보나치-수-2/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2748번: 피보나치 수 2","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"10844번: 쉬운 계단 수 접근 방법: 동적 프로그래밍으로 푼다. N = 1 에 대한 갯수는 9이다. 따라서 차원 배열 dp를 만들고 각 행은 N, 각 열은 뒤에 해당 수의 마지막 숫자를 의미하도록 한다. -> dpN 사이즈의 배열을 만들면 될 것이다. dpi는 두가지 경우의 수로 만들어 질 수 있는데, 문제에서 주어진 규칙에 따라 마지막 자릿수의 -1…","fields":{"slug":"/Problem-Solving/2020-02-06-10844번-쉬운-계단-수/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 10844번: 쉬운 계단 수","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1463번: 1로 만들기 접근 방법: DP 연습문제. dp 배열 안에 어떤 수 i를 만드는데 걸리는 최소 횟수를 넣어두고 이를 이용해서 계속 누적시킨다. 최소값을 구해야되기 때문에 세가지 조건이 가능한지 모두 테스트 해보고 가능한 조건들끼리 비교해서 횟수를 비교해줘야 하는데, 3번 조건인 1을 뺀다는 모든 수에 대해서 적용할 수 있는 조건이므로 -1을 했…","fields":{"slug":"/Problem-Solving/2020-01-20-1463번-1로-만들기/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1463번: 1로 만들기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1541번: 잃어버린 괄호 접근 방법: 괄호를 쳐서 숫자의 최솟값을 만들려면 음수를 최대한 크게 만들어야 한다. 따라서 빼기 연산자를 만났을 때 기 이후 부터 더하기 연산자로 묶여있는 숫자들을 모두 합쳐서 큰 음수로 만든다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-01-21-1541번-잃어버린-괄호/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1541번: 잃어버린 괄호","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"2579번: 계단 오르기 접근 방법: 2차원 동적프로그래밍으로 푼다. 각 행은 한번 진행했을 때의 위치를 의미하고 열의 0번째는 건너뛰어서 해당 위치에 도달했을 때의 값, 1번째는 연달아 밟아서 해당 위치에 도다했을 때의 값을 의미한다. max함수를 통해 더 큰 값을 계속 선택하면서 마지막에 도달할때까지 진행한다. 통과 코드:","fields":{"slug":"/Problem-Solving/2020-02-01-2579번-계단-오르기/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2579번: 계단 오르기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"11053번: 가장 긴 증가하는 부분 수열 문제 접근 방법 LIS 문제는 DP 문제로 아주 유명한 문제이다. 가장 긴 증가하는 부분 수열은 결국 어떤 기준이 되는 인덱스의 값보다 작은 값이 몇개 있는 그 최대 길이를 찾으면 된다. 통과 코드","fields":{"slug":"/Problem-Solving/2020-02-08-11053번-가장-긴-증가하는-부분-수열/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 11053번: 가장 긴 증가하는 부분 수열","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"백준 알고리즘 9093번 : 단어 뒤집기(C++) https://www.acmicpc.net/problem/9093 문제 문제\n문장이 주어졌을 때, 단어를 모두 뒤집어서 출력하는 프로그램을 작성하시오. 단, 단어의 순서는 바꿀 수 없다. 단어는 영어 알파벳으로만 이루어져 있다. 입력\n첫째 줄에 테스트 케이스의 개수 T가 주어진다. 각 테스트 케이스는 한 …","fields":{"slug":"/Problem-Solving/2020-03-23-9093번-숫자뒤집기/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 9093번: 단어 뒤집기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"2156번: 포도주 시식 접근 방법: 동적 프로그래밍으로 푼다. 3번 이상 연달아 마시면 안되기 때문에 현재 위치에서의 경우의 수는 다음과 같다: 이번 잔을 마시고, 이전 잔도 마시는 경우 이번 잔을 안마시는 경우 이번 잔은 마시고 이전 잔은 안마시는 경우 따라서, - 1번 경우의 수는 dpi = dpi-3 + numi-1 + numi - 2번 경우의 수…","fields":{"slug":"/Problem-Solving/2020-02-07-2156번-포도주-시식/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2156번: 포도주 시식","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"백준 알고리즘 11726번: 2xn 타일링 (C++) https://www.acmicpc.net/problem/11726 문제 문제\n2×n 크기의 직사각형을 1×2, 2×1 타일로 채우는 방법의 수를 구하는 프로그램을 작성하시오. 아래 그림은 2×5 크기의 직사각형을 채운 한 가지 방법의 예이다. 입력\n첫째 줄에 n이 주어진다. (1 ≤ n ≤ 1,000…","fields":{"slug":"/Problem-Solving/2020-03-26-11726번-2xn-타일링/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 11726번: 2xn 타일링","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"백준 알고리즘 2565번 : 전깃줄(C++) https://www.acmicpc.net/problem/2565 문제 문제\n두 전봇대 A와 B 사이에 하나 둘씩 전깃줄을 추가하다 보니 전깃줄이 서로 교차하는 경우가 발생하였다. 합선의 위험이 있어 이들 중 몇 개의 전깃줄을 없애 전깃줄이 교차하지 않도록 만들려고 한다. 예를 들어, <그림 1>과 같이 전깃줄…","fields":{"slug":"/Problem-Solving/2020-03-24-2565번-전깃줄/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2565번: 전깃줄","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"백준 알고리즘 9095번: 1, 2, 3 더하기 (C++) https://www.acmicpc.net/problem/9095 문제 문제\n정수 4를 1, 2, 3의 합으로 나타내는 방법은 총 7가지가 있다. 합을 나타낼 때는 수를 1개 이상 사용해야 한다. 1+1+1+1\n1+1+2\n1+2+1\n2+1+1\n2+2\n1+3\n3+1\n정수 n이 주어졌을 때, n을 1…","fields":{"slug":"/Problem-Solving/2020-03-26-9095번-01-02-03-더하기/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 9095번: 1, 2, 3 더하기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"백준 알고리즘 2193번: 이친수 (C++) https://www.acmicpc.net/problem/2193 문제 문제\n0과 1로만 이루어진 수를 이진수라 한다. 이러한 이진수 중 특별한 성질을 갖는 것들이 있는데, 이들을 이친수(pinary number)라 한다. 이친수는 다음의 성질을 만족한다. 이친수는 0으로 시작하지 않는다.\n이친수에서는 1이 두…","fields":{"slug":"/Problem-Solving/2020-03-27-2193번-이친수/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2193번: 이친수","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"백준 알고리즘 9251번: LCS (C++) https://www.acmicpc.net/problem/9251 문제 문제\nLCS(Longest Common Subsequence, 최장 공통 부분 수열)문제는 두 수열이 주어졌을 때, 모두의 부분 수열이 되는 수열 중 가장 긴 것을 찾는 문제이다. 예를 들어, ACAYKP와 CAPCAK의 LCS는 ACAK가…","fields":{"slug":"/Problem-Solving/2020-03-29-백준-LCS/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 9251번: LCS","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"백준 알고리즘 17212번: 달나라 토끼를 위한 구매대금 지불 도우미 (C++) https://www.acmicpc.net/problem/17212 문제 문제\n달나라 토끼들이 사용하는 화폐는 동전뿐이다. 동전의 종류는 1원, 2원, 5원, 7원 이렇게 4종류가 있다. 물건을 사고 동전으로 계산을 하는데 동전의 개수가 최소가 되도록 지불하지 않는 것은 불법…","fields":{"slug":"/Problem-Solving/2020-03-30-백준-달나라토끼/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 17212번: 달나라 토끼를 위한 구매대금 지불 도우미","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1912 문제 문제\nn개의 정수로 이루어진 임의의 수열이 주어진다. 우리는 이 중 연속된 몇 개의 수를 선택해서 구할 수 있는 합 중 가장 큰 합을 구하려고 한다. 단, 수는 한 개 이상 선택해야 한다. 예를 들어서 10, -4, 3, 1, 5, 6, -35, 12, 21, -1 이라는 수열이 주어…","fields":{"slug":"/Problem-Solving/2020-04-02-백준-연속합/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1912번: 연속합","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"백준 알고리즘 11279번: 최대 힙 (C++) https://www.acmicpc.net/problem/11279 문제 문제\n널리 잘 알려진 자료구조 중 최대 힙이라는 것이 있다. 최대 힙을 이용하여 다음과 같은 연산을 지원하는 프로그램을 작성하시오. 배열에 자연수 x를 넣는다.\n배열에서 가장 큰 값을 출력하고, 그 값을 배열에서 제거한다.\n프로그램은 …","fields":{"slug":"/Problem-Solving/2020-03-30-백준-최대힙/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 11279번: 최대 힙","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2667 문제 문제\n<그림 1>과 같이 정사각형 모양의 지도가 있다. 1은 집이 있는 곳을, 0은 집이 없는 곳을 나타낸다. 철수는 이 지도를 가지고 연결된 집들의 모임인 단지를 정의하고, 단지에 번호를 붙이려 한다. 여기서 연결되었다는 것은 어떤 집이 좌우, 혹은 아래위로 다른 집이 있는 경우를 …","fields":{"slug":"/Problem-Solving/2020-04-29-백준-단지번호붙이기/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2667번: 단지번호붙이기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1697 문제 문제\n수빈이는 동생과 숨바꼭질을 하고 있다. 수빈이는 현재 점 N(0 ≤ N ≤ 100,000)에 있고, 동생은 점 K(0 ≤ K ≤ 100,000)에 있다. 수빈이는 걷거나 순간이동을 할 수 있다. 만약, 수빈이의 위치가 X일 때 걷는다면 1초 후에 X-1 또는 X+1로 이동하게 된…","fields":{"slug":"/Problem-Solving/2020-05-03-백준-숨바꼭질/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1697번: 숨바꼭질","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1931 문제 문제\n한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 한다. 각 회의 I에 대해 시작시간과 끝나는 시간이 주어져 있고, 각 회의가 겹치지 않게 하면서 회의실을 사용할 수 있는 회의의 최대 개수를 찾아보자. 단, 회의는 한번 시작하면 중간에 …","fields":{"slug":"/Problem-Solving/2020-04-06-백준-회의실배정/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1931번: 회의실배정","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1012 문제 문제\n차세대 영농인 한나는 강원도 고랭지에서 유기농 배추를 재배하기로 하였다. 농약을 쓰지 않고 배추를 재배하려면 배추를 해충으로부터 보호하는 것이 중요하기 때문에, 한나는 해충 방지에 효과적인 배추흰지렁이를 구입하기로 결심한다. 이 지렁이는 배추근처에 서식하며 해충을 잡아 먹음으로써…","fields":{"slug":"/Problem-Solving/2020-05-02-백준-유기농-배추/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1012번: 유기농 배추","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1260 문제 문제\n그래프를 DFS로 탐색한 결과와 BFS로 탐색한 결과를 출력하는 프로그램을 작성하시오. 단, 방문할 수 있는 정점이 여러 개인 경우에는 정점 번호가 작은 것을 먼저 방문하고, 더 이상 방문할 수 있는 점이 없는 경우 종료한다. 정점 번호는 1번부터 N번까지이다. 입력\n첫째 줄에 …","fields":{"slug":"/Problem-Solving/2020-04-30-백준-dfs와bfs/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1260번: DFS와 BFS","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2178 문제 문제\nN×M크기의 배열로 표현되는 미로가 있다. 미로에서 1은 이동할 수 있는 칸을 나타내고, 0은 이동할 수 없는 칸을 나타낸다. 이러한 미로가 주어졌을 때, (1, 1)에서 출발하여 (N, M)의 위치로 이동할 때 지나야 하는 최소의 칸 수를 구하는 프로그램을 작성하시오. 한 칸에…","fields":{"slug":"/Problem-Solving/2020-05-04-백준-미로탐색/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2178번: 미로탐색","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/1655 문제 문제\n수빈이는 동생에게 “가운데를 말해요” 게임을 가르쳐주고 있다. 수빈이가 정수를 하나씩 외칠때마다 동생은 지금까지 수빈이가 말한 수 중에서 중간값을 말해야 한다. 만약, 그동안 수빈이가 외친 수의 개수가 짝수개라면 중간에 있는 두 수 중에서 작은 수를 말해야 한다. 예를 들어 수빈…","fields":{"slug":"/Problem-Solving/2020-05-05-백준-가운데를-말해요/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 1655번: 가운데를 말해요","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"https://www.acmicpc.net/problem/2252 문제 문제\nN명의 학생들을 키 순서대로 줄을 세우려고 한다. 각 학생의 키를 직접 재서 정렬하면 간단하겠지만, 마땅한 방법이 없어서 두 학생의 키를 비교하는 방법을 사용하기로 하였다. 그나마도 모든 학생들을 다 비교해 본 것이 아니고, 일부 학생들의 키만을 비교해 보았다. 일부 학생들의 키…","fields":{"slug":"/Problem-Solving/2020-05-03-백준-줄세우기/"},"frontmatter":{"date":"May 05, 2020","title":"[백준 알고리즘] 2252번: 줄세우기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"Depth First Search DFS는 그래프를 순회하기 위해 사용하는 알고리즘 전략으로, 한 노드로부터 시작해서 자식노드를 계속 따라가며 더 이상 자식노드가 나타나지 않을 때까지 진행하고 더 이상 자녀가 없을 때는 왔던 길을 다시 거슬러 올라가며 탐색하지 않은 다른 노드들을 같은 방법으로 순회하는 알고리즘이다. Algorithm Steps DFS 를…","fields":{"slug":"/Algorithm-Analysis/2020-04-25-알고리즘-DFS/"},"frontmatter":{"date":"April 25, 2020","title":"[알고리즘 정리] 깊이 우선 탐색(DFS)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"Breadth-First Search 너비 우선 탐색으로도 불리는 BFS 역시 그래프를 탐색하기 위한 알고리즘이다. DFS는 한 노드에 대해서 제일 깊숙한 위치에 있는 레벨까지 내려가 탐색하지만 BFS는 한 레벨에 있는 모든 노드를 다 탐색하고 다음 레벨로 이동하는 방법으로 탐색을 진행한다. BFS는 최단 경로를 찾는데 유용하게 사용하는 알고리즘이고 qu…","fields":{"slug":"/Algorithm-Analysis/2020-04-25-알고리즘-BFS/"},"frontmatter":{"date":"April 25, 2020","title":"[알고리즘 정리] 너비 우선 탐색(BFS)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"Transaction 데이터베이스는 일반적으로 한사람이 사용하지 않는다. 수많은 쿼리들이 데이터를 요청하기 위해 데이터베이스에 전달된다. 이때 모든 쿼리들을 병행처리하게 된다면, 효율성은 매우 좋을 수 있지만 데이터를 처리하는데 문제가 발생할 여지가 있다. 만약 어떤 쿼리가 테이블을 업데이트하게 된다면, 처음 의도했던 것과는 다른 결과를 사용자가 받게 될…","fields":{"slug":"/Database/2020-04-24-데이터베이스-트랜잭션-Transaction/"},"frontmatter":{"date":"April 24, 2020","title":"[데이터베이스] 트랜잭션과 격리수준(Transaction and Isolation Level)","category":"Database","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne CPU Scheduling 학기초에 개괄적인 내용을 다루면서 CPU Scheduling 에 대해 논의한 바가 있다. CPU의 한 코어는 한번에 하나의 process만을 가질 수 있고, 여러 프로세스…","fields":{"slug":"/Operating-Systems/2020-04-23-운영체제-CPU스케줄링/"},"frontmatter":{"date":"April 23, 2020","title":"[운영체제] CPU 스케줄링(CPU Scheduling)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"Branch and Bound Branch and Bound 는 트리를 타고 내려갈 때, 더 이상 갈 필요가 없는 지점을 판단해서 어떤 노드의 자식 노드를 방문할지 방문하지 않을지 결정하는 방식이다. 완전탐색으로 트리를 검사하는 것보다 방문하는 노드의 수가 줄어들기 때문에 시간을 단축시킬 수 있다. 여기서 핵심적으로 사용되는 개념이 bound 인데, bo…","fields":{"slug":"/Algorithm-Analysis/2020-04-20-알고리즘-분기한정법(Branch-and-Bound)/"},"frontmatter":{"date":"April 20, 2020","title":"[알고리즘 정리] 분기한정법(Branch and Bound)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"View 어떤 경우에는 데이터베이스 사용자에게 테이블안에 있는 모든 정보를 다 보여주는게 좋지 않을 수도 있다. 예를 들어, 회사의 사원 데이터베이스를 누구나 조회해서 이름과 직무를 확인하게 할 수는 있지만, 사원번호, 연봉 등은 공유되지 않게 하고싶을 수도 있다. 그리고 이런 테이블이 꽤나 자주 사용될 수도 있다고 하자. 이런 경우에 View 를 이용하…","fields":{"slug":"/Database/2020-04-18-데이터베이스-뷰-Views/"},"frontmatter":{"date":"April 18, 2020","title":"[데이터베이스] 뷰(Views)","category":"Database","draft":false}}},{"node":{"excerpt":"Integrity Constraints Integrity Constraint 는 데이터의 무결성을 유지하기 위한 방법이다. 이전 포스트에서 Integrity Constratins 를 설명했지만, SQL 쿼리로 적용하는 내용은 다루지 않았기 때문에 해당 내용을 정리하자. Constraints on a Single Relation 단일한 테이블에 대해 데이터…","fields":{"slug":"/Database/2020-04-17-데이터베이스-데이터무결성/"},"frontmatter":{"date":"April 17, 2020","title":"[데이터베이스] 데이터 무결성(Integrity Constraints)","category":"Database","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne Thread Library 스레드 라이브러리는 개발자가 스레드를 생성하고 관리할 수 있도록 API 를 제공해주는 역할을 한다. 스레드 라이브러리를 구현하는 것에는 두 가지 방법이 있다. 커널 지원 …","fields":{"slug":"/Operating-Systems/2020-04-17-운영체제-스레드라이브러리/"},"frontmatter":{"date":"April 17, 2020","title":"[운영체제] 스레드 라이브러리와 스레딩 이슈들(Thread Libraies dand Threading Issues)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"Knapsack Problem Knapsack Problem, 배낭문제는 다이나믹 프로그래밍에서 매우 유명한 문제이다.\n어떤 배낭이 있고 그 배낭안에 넣을 수 있는 최대 무게가 K라고 하자. 배낭에 넣을 수 있는 N개의 물건이 각기 다른 가치 V를 가지고 있고 각 물건마다 다른 무게 W를 가지고 있을 때, 배낭이 최대한 가치가 높은 물건들을 담을 수 있는…","fields":{"slug":"/Algorithm-Analysis/2020-04-14-알고리즘-배낭문제/"},"frontmatter":{"date":"April 14, 2020","title":"[알고리즘 정리] 배낭 문제(Knapsack Problem)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"Join 조인은 다수의 테이블을 연결해서 데이터를 뽑아내는 연산을 의미한다. 기본적으로 Join 은 normalized 된 테이블을 사용하게 된다. Join에는 여러 종류가 있는데, 하나씩 살펴보자. Natural Join Natural 은 두 테이블에서 같은 attribute를 기준으로 테이블을 합쳐서 새로운 테이블을 만드는 것을 의미한다. 그리고 중복…","fields":{"slug":"/Database/2020-04-13-데이터베이스-조인연산/"},"frontmatter":{"date":"April 13, 2020","title":"[데이터베이스] 조인연산(Join Operations in SQL)","category":"Database","draft":false}}},{"node":{"excerpt":"Revisit Keys  Key 의 종류와 개념이 헷갈려서 한번 다시 정리해보자. Super Key Super Key 는 테이블 내의 특정한 tuple을 식별할 수 있게하는 attribute 들의 집합을 의미한다. 집합이기 때문에 atrribute 는 하나만 있을 수도 있고, 다수 존재할 수도 있다. Super Key 는 항상 유일성(uniquness) …","fields":{"slug":"/Database/2020-04-11-데이터베이스-키/"},"frontmatter":{"date":"April 11, 2020","title":"[데이터베이스] 키(Key)","category":"Database","draft":false}}},{"node":{"excerpt":"Normalization 지난 포스트에서 데이터베이스에서 발생하는 anomaly, 그리고 함수적 종속성을 의마하는 functional dependency 에 대해 정리했다. 오늘은 데이터베이스의 anomaly 를 해결하는 표준인 Normalization 을 정리하자. Normalization 은 데이터베이스의 테이블들이 서로 Anomaly를 만들지 않도록…","fields":{"slug":"/Database/2020-04-10-데이터베이스-정규화/"},"frontmatter":{"date":"April 10, 2020","title":"[데이터베이스] 정규화(Normalization) - 1NF,2NF, 3NF, BCNF","category":"Database","draft":false}}},{"node":{"excerpt":"Greedy Algorithm 탐욕 알고리즘이라고 부르기도 하는 그리디 알고리즘은 문제를 단계적으로 해결하면서, 한 단계마다 그 순간의 최선의 solution 이라고 생각되는 solution을 선택해서 최종적인 solution을 찾아가는 알고리즘 전략이다. Local Optimum and Global Optimum Solution 이때 어떤 단계에서 보이…","fields":{"slug":"/Algorithm-Analysis/2020-04-09-알고리즘-그리디-알고리즘/"},"frontmatter":{"date":"April 09, 2020","title":"[알고리즘 정리] 그리디 알고리즘(Greedy Alogorithm)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"Anomaly Anomaly는 데이터베이스를 안에서 발생하게되는 이상 현상을 의미한다. Anomaly가 데이터베이스에 존재하면 그 데이터베이스는 위험요소가 존재하게 된다. Anomaly 의 종류와 그 위험성은 다음과 같다. Deletion Anomaly : 테이블에서 어떤 tuple을 삭제하게 되면 해당 tuple 안에 있는 모든 정보가 삭제되기 때문에 …","fields":{"slug":"/Database/2020-04-07-데이터베이스-이상현상/"},"frontmatter":{"date":"April 07, 2020","title":"[데이터베이스] 이상현상과 함수적 종속성(Data Anomalies and Functional Dependency)","category":"Database","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne Thread What is Thread? Thread 는 CPU를 이용하는 기본단위이다. 따라서 스레드는 프로세스에 속해져 있는 개념이다. 스레드는 스레드 ID, 프로그램 카운터, 레지스터, 스택으…","fields":{"slug":"/Operating-Systems/2020-04-07-운영체제-스레드/"},"frontmatter":{"date":"April 07, 2020","title":"[운영체제] 스레드(Thread)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne Process Communication 컴퓨터 시스템이 동작하면서 내부적으로 다양한 프로세스가 실행되고 종료된다. 그리고 프로세스는 다른 프로세스와 통신을 수행하기도 한다. 어떤 프로세스가 시스템에…","fields":{"slug":"/Operating-Systems/2020-04-02-운영체제-IPC/"},"frontmatter":{"date":"April 02, 2020","title":"[운영체제] IPC: 프로세스 간 통신(Inter Process Communication)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne Process 프로세스는 정말 단순히 표현하면, 실행 중인 프로그램이라고 할 수 있다. 우리가 흔히 말하는 프로그램은 application program 을 지칭하는 경우가 많은데, applicat…","fields":{"slug":"/Operating-Systems/2020-04-01-운영체제-프로세스/"},"frontmatter":{"date":"April 01, 2020","title":"[운영체제] 프로세스(Process)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"DP: Matrix Chain Multiplication (MCM problem) Dynamic Programming 다이나믹 프로그래밍은 특정한 알고리즘이라기 보다는 문제를 해결하기위한 전략 중 하나라고 할 수 있다. 언뜻 보면 Divde-and-Conquer랑 비슷해보이지만 둘은 큰 차이가 있다. Optimization DP는 문제를 최적화할 수 있는…","fields":{"slug":"/Algorithm-Analysis/2020-03-31-알고리즘-행렬곱셈순서/"},"frontmatter":{"date":"April 01, 2020","title":"[알고리즘 정리] 행렬 곱셈 문제 (Matrix Chain Multiplication)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"Logest Common Subequence 우리 말로 최장 공통 부분 수열이라고도 불리는 알고리즘이다. 어떤 문자열이 두 개 있을 때, 두 수열 사이에 있는 공통적인 문자들의 가장 긴 조합을 찾는 문제이다. 예를 들어 다음 두 문자열이 있다고 하자. 두 문자열의 사이에는 많은 부분 문자열들이 있는데, 문자가 하나 뿐인 부분 문자열을 제외하고 모두 나열해…","fields":{"slug":"/Algorithm-Analysis/2020-04-01-알고리즘-최장공통부분수열(LCS)/"},"frontmatter":{"date":"April 01, 2020","title":"[알고리즘 정리] 최장 공통 부분 수열(LCS)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"Designing Database 데이터베이스를 설계하는 과정은 몇가지 과정으로 나뉘어진다. Data need 파악 Data Model 선택 > Conceptual Schema 파악 > functional requirement 고민 Database 구현 Logical Design: security, CS, business Physocal Design: p…","fields":{"slug":"/Database/2020-03-31-데이터베이스-ER설계/"},"frontmatter":{"date":"March 31, 2020","title":"[데이터베이스] E-R 다이어그램(E-R Diagram)","category":"Database","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (9/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne Operating System Design and Implementation Design Goals 운영체제를 설계할 때, 다른 고려요소들이 많지만 가장 근본적으로 고려해야하는 것이 사용자 목적과, …","fields":{"slug":"/Operating-Systems/2020-03-22-운영체제-운영체제구조/"},"frontmatter":{"date":"March 22, 2020","title":"[운영체제] 운영체제의 설계 구조(Operating System Design and Structure)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (10/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne Application Program in All OS? 우리가 사용하는 컴퓨터 시스템은 다양한 운영체제의 종류가 있다. 그리고 모든 application programdms 각 운영체제에 맞게 설계…","fields":{"slug":"/Operating-Systems/2020-03-22-운영체제-cross-platform-application-program/"},"frontmatter":{"date":"March 22, 2020","title":"[운영체제] 모든 운영체제에서 실행가능한 프로그램을 만들 수 있을까?(Cross-Platform Application Program?)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (9/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne System Calls System call은 운영체제에 있어서 아주 핵심이 되는 요소이다. 어떤 프로세스나 서비스가 실행되기 위해서는 System Call을 통한 컴퓨터 시스템으로의 접근이 필수적이…","fields":{"slug":"/Operating-Systems/2020-03-21-운영체제-시스템콜/"},"frontmatter":{"date":"March 21, 2020","title":"[운영체제] 시스템 콜(System Call)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"SQL? SQL은 relation database 를 관리하기 위해 만들어진 언어이다. SQL은 다음과 같은 두 가지 sublanguage 를 포함하고 있다. Data-Defining sublanguage(DDL): 데이터베이스 schema를 선언하기 위한 언어 Data-Manipulation sunlanguage(DML): 데이터베이스를 수정하기위한 언…","fields":{"slug":"/Database/2020-03-17-데이터베이스-SQL기본문법/"},"frontmatter":{"date":"March 17, 2020","title":"[데이터베이스] SQL 기본문법과 자료형","category":"Database","draft":false}}},{"node":{"excerpt":"Data Model 이란? 데이터 모델은 우리가 가지고 있는 데이터를 표현하는 방법을 의미한다. 그리고 데이터 모델은 일반적으로 세 영역으로 나뉘어져 있다. Structure of data\n데이터 구조라는 용어는 우리가 자료구조라는 이름으로 너무나 자주 들었던 이야기이다. 그러나 데이터베이스 시스템에서의 데이터 구조는 물리적으로 데이터들을 구조화할 것인지…","fields":{"slug":"/Database/2020-03-15-데이터베이스-관계형데이터모델/"},"frontmatter":{"date":"March 15, 2020","title":"[데이터베이스] 관계형 데이터 모델(Relational Model of Data)","category":"Database","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (9/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne 운영체제는 multiprogramming 에서 큰 역할을 한다. 운영체제가 CPU에 작업을 분배해서 모든 CPU가 쉬지 않고 작업을 수행하도록 하는 것이다. Multiprogramming System…","fields":{"slug":"/Operating-Systems/2020-03-14-운영체제-모드/"},"frontmatter":{"date":"March 14, 2020","title":"[운영체제] 컴퓨터 시스템의 종류와 운영체제의 실행모드(Computer Systems and Operation Mode of OS)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"Divide and Conquer Divide and Conquer, 분할정복은 큰 문제를 여러 개의 작은 문제로 쪼개고 쪼개서 해결하는 방법이다. 일반적으로 Divide and Conquer는 recurrence equation으로 표현할 수 있는데, 우리는 이 수식을 통해서 알고리즘의 time complexity 를 구할 것이다.  위와 같은 식을 우…","fields":{"slug":"/Algorithm-Analysis/2020-03-12-알고리즘-분할정복/"},"frontmatter":{"date":"March 12, 2020","title":"[알고리즘 정리] 분할 정복(Divide and Conquer)","category":"Algorithm-Analysis","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (9/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne OSC 책과 1주차 강의는 개괄적인 concept을 중심으로 진행되었다. 컴퓨터 구조에서 많이 배웠던 부분들인데, 방학 사이에 컴퓨터 구조 내용을 많이 잊어버려서 다시 상기시키면서 공부하기에 좋은 챕…","fields":{"slug":"/Operating-Systems/2020-03-10-운영체제-컴퓨터구조/"},"frontmatter":{"date":"March 10, 2020","title":"[운영체제] 운영체제의 정의와 컴퓨터 구조(Operating System and Computer Architecture)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"참고도서: Operating System Concepts (9/E) Abraham Silberschatz, Peter B. Galvin, Greg Gagne OSC 책과 1주차 강의는 개괄적인 concept을 중심으로 진행되었다. 컴퓨터 구조에서 많이 배웠던 부분들인데, 방학 사이에 컴퓨터 구조 내용을 많이 잊어버려서 다시 상기시키면서 공부하기에 좋은 챕…","fields":{"slug":"/Operating-Systems/Operating-Systems-And-Computer-Architecture/"},"frontmatter":{"date":"March 10, 2020","title":"[운영체제] 운영체제의 정의와 컴퓨터 구조(Operating System and Computer Architecture)","category":"Operating-Systems","draft":false}}},{"node":{"excerpt":"Algebra Relational Algebra 를 보기 전에, Algebra 가 무엇인지부터 알아보자. Algebra는 연산자(operator)와 피연산자(Operand)를 포함하는 수학적 시스템이다. 연산자는 어떤 결과에 대한 procedure를 표현하는 역할을 하고 피연산자는 연산자가 적용되는 대상이 되는 변수나 값을 의미한다. Relational …","fields":{"slug":"/Database/2020-03-10-데이타베이스-관계대수/"},"frontmatter":{"date":"March 10, 2020","title":"[데이터베이스] 관계대수(Relational Algebra)","category":"Database","draft":false}}},{"node":{"excerpt":"11478번: 서로 다른 부분 문자열 접근 방법: 일단 중복된 문자열을 허용하지 않기 때문에 set자료구조를 사용하기로 했다. 그리고 string 라이브러리에 포함된 substr을 사용하여 첫 글자부터 그 다음 글자들을 부분 문자열로 가져올 문자열 길이를 1씩 늘려가며 모두 가져와 set에 넣어주었다. 이렇게 하면 가능한 모든 부분 문자열이 중복없이 se…","fields":{"slug":"/Problem-Solving/2019-12-26-11478번-서로-다른-부분-문자열/"},"frontmatter":{"date":"December 26, 2019","title":"[백준 알고리즘] 11478번: 서로 다른 부분 문자열","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"10757번: 큰 수 A+B 접근 방법: A 와 B의 범위가 매우 크기 때문에 long long int로 연산해도 오버플로우가 난다. 따라서 전공교과에서 배웠던 이진수 adder 컨셉을 그대로 구현하기로 했다. 코딩하면서 이걸 하게될 줄은 몰랐다 정말..문자열을 스택처럼 하나씩 꺼내면서 한자리씩 더하고 10을 넘어가면 carry out으로 다음자리에 넘겨…","fields":{"slug":"/Problem-Solving/2019-12-26-10757번-큰-수-A+B/"},"frontmatter":{"date":"December 26, 2019","title":"[백준 알고리즘] 10757번: 큰 수 A+B","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1476번: 날짜 계산 접근 방법: 주어진 입력과 출력에 따라 규칙을 찾아보았을 때, 어떤 년도 i 에서 E를 빼고 E의 최댓값인 15로 나누어 떨어지고, 나머지 S와 M에 대해서도 똑같이 나누어 떨어지는 최솟값이 구하고자 하는 값이라는 것을 알았다. 코드로 옮길 때도 있는 그대로 i를 하나씩 올려가면서 i-E, i-S, i-M이 각각 15, 28, 19…","fields":{"slug":"/Problem-Solving/2019-12-26-1476번-날짜-계산/"},"frontmatter":{"date":"December 26, 2019","title":"[백준 알고리즘] 1476번: 날짜 계산","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"4150번: 피보나치 수 접근 방법: long long 으로도 표현할 수 없는 큰 정수를 나타내야 한다. 앞서 큰 수 A+B에서 구현했던 알고리즘을 조금 수정해서 벡터 대신 string 자료형을 사용하는 것으로 수정하고 피보나치 수열을 계산할 때 사용하는 f(n-1) + f(n-2) 를 문자열을 이용한 더하기로 만들었다. 통과 코드:","fields":{"slug":"/Problem-Solving/2019-12-26-4150번-피보나치-수/"},"frontmatter":{"date":"December 26, 2019","title":"[백준 알고리즘] 4150번: 피보나치 수","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"4659번: 비밀번호 발음하기 접근 방법: 문자열을 읽어와서 하나씩 문자형 변수로 읽으면서 조건을 모두 검사한다. 각 조건마다 플래그 변수를 두어서 최종적으로 플래그가 모두 통과조건에 해당할 경우에만 acceptable로 판정한다. 자음모음 여부는 해당 문자가 a, e, i, o, u 중 하나면 모음으로, 아니면 자음으로 판정하고 모음이 하나라도 나오면 …","fields":{"slug":"/Problem-Solving/2019-12-26-4659번-비밀번호-발음하기/"},"frontmatter":{"date":"December 26, 2019","title":"[백준 알고리즘] 4659번: 비밀번호 발음하기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"6571번: 피보나치 수의 개수 접근 방법: 이전에 풀었던 4150번: 피보나치 수 와 똑같은데 범위 내에 있는 수의 개수를 찾는 문제이다. 이 문제는 테스트케이스가 여러번 들어오기 때문에 차라리 배열에 피보나치 수열을 맵핑해두고 테스트 케이스로 들어오는 범위 내에 있는 수의 갯수를 계산해서 출력하는 방식으로 구현했다. 피보나치 수열을 배열에 맵핑하는 함…","fields":{"slug":"/Problem-Solving/2019-12-26-6571번-피보나치-수의-개수/"},"frontmatter":{"date":"December 26, 2019","title":"[백준 알고리즘] 6571번: 피보나치 수의 개수","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"6321번: IBM 뺴기 1 접근 방법: 아스키 코드 연산으로 쉽게 해결할 수 있을 것 같다. 조건에 이름의 최대길이가 50이라고 주어져서 문자열 길이에 대해 신경쓸 필요도 없고 Z문자가 있으면 아스키코드 대문자 A의 바로 이전이 64로 문자를 바꿔주면 된다. 통과 코드:","fields":{"slug":"/Problem-Solving/2019-12-26-6321번-IBM-빼기-1/"},"frontmatter":{"date":"December 26, 2019","title":"[백준 알고리즘] 6321번: IBM 빼기 1","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1159번: 농구 경기 접근 방법: 어차피 각 이름의 첫 글자만 필요하니까 벡터에 첫 글자를 넣고 중복되는 글자가 나올때마다 횟수 카운터만 올려준다. 최종적으로는 횟수가 5개 이상인 글자들만 출력한다. 통과 코드:","fields":{"slug":"/Problem-Solving/2019-12-23-1159번-농구-경기/"},"frontmatter":{"date":"December 23, 2019","title":"[백준 알고리즘] 1159번: 농구 경기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"2799번: 블라인드 접근 방법: 배열에 문자를 쭉 넣어두고 별의 갯수를 세면서 어떤 타입인지 판정한다. 통과 코드:","fields":{"slug":"/Problem-Solving/2019-12-23-2799번-블라인드/"},"frontmatter":{"date":"December 23, 2019","title":"[백준 알고리즘] 2799번: 블라인드","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"2953번: 나는 요리사다 접근 방법: 이것도 단순한 문제. 그냥 총점을 배열에 집어넣고 최댓값의 인덱스를 찾으면 된다. 통과 코드:","fields":{"slug":"/Problem-Solving/2019-12-23-2953번-나는-요리사다/"},"frontmatter":{"date":"December 23, 2019","title":"[백준 알고리즘] 2953번: 나는 요리사다","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"2920번: 음계 접근 방법: 단순한 문제였다. 그냥 소팅을 확인하면 되는 문제라 쉽게 해결했다. 배열의 요소들이 1씩 늘어나거나 1씩 줄어들 때마다 오름차순, 내림차순 카운트를 하나씩 올리고 최종적으로 7개가 되는 플래그를 정답으로 선택하면 된다. 통과 코드:","fields":{"slug":"/Problem-Solving/2019-12-23-2920번-음계/"},"frontmatter":{"date":"December 23, 2019","title":"[백준 알고리즘] 2920번: 음계","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"5397번: 키로거 접근 방법: 링크드 리스트로 커서를 구현해서 주어진 조건에 따라 문자를 삽입한다. list 라이브러리를 사용해서 해결했는데, erase 할 때 커서 위치를 수정하는것, 그리고 ’>’ 기능과 ’<’, ’-’ 기능이 리스트의 양끝에서 적용되는 것에 대한 예외처리 때문에 조금 애를 먹긴했다. 통과 코드:","fields":{"slug":"/Problem-Solving/2019-12-23-5397번-키로거/"},"frontmatter":{"date":"December 23, 2019","title":"[백준 알고리즘] 5397번: 키로거","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1002번: 터렛 접근 방법: 두 터렛의 공격범위가 겹치는 점을 구하면 되는 문제인 것 같다. 원의 교점에 대한 내용을 다 잊어버려서 구글링을 통해서 규칙을 찾아보았다. 규칙: r1, r2 가 두 원의 반지름이고 d가 두원의 중심 사이의 거리를 의미할 때, 두 원이 만나지 않는 경우 r1 + r2 < d r1 - r2 > d d = 0 두 원이 한 점에서…","fields":{"slug":"/Problem-Solving/2019-12-22-1002번-터렛/"},"frontmatter":{"date":"December 22, 2019","title":"[백준 알고리즘] 1002번: 터렛","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1011번: Fly me to the Alpha Centauri 접근 방법: 아무리 생각해도 규칙이 찾아지지가 않아서 솔루션을 찾아봤다. 워프하는 거리로 봤을 때, 갈 수 있는 최대거리가 N^2만큼, 그리고 워프 횟수는 2XN-1 이 나온다. 따라서, y-x를 해서 얻은 거리를 최대 이동거리로 나누고 난 나머지가 추가로 가야하는 거리가 되는데, 이 거리는…","fields":{"slug":"/Problem-Solving/2019-12-21-1011번-Fly-me-to-the-Alpha-Centauri/"},"frontmatter":{"date":"December 21, 2019","title":"[백준 알고리즘] 1011번: Fly me to the Alpha Centauri","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"3053번: 택시기하학 접근 방법: 이 문제는 기하학 자체가 나한테 생소해서 택시 기하학에 대한 자료를 찾아보고 해결했다.. 사실 찾아보니까 너무 생각을 안하고 찾아보기만 했다는 생각이 들긴 하다.. 일단 유클리드 기하학의 원의 형태가 택시 기하학에서는 정사각형이다. 결국 원의 지름이 정사각형의 대각선 길이와 같다. 정사각형의 대각선 공식은 (한변의 길이…","fields":{"slug":"/Problem-Solving/2019-12-20-3053번-택시기하학/"},"frontmatter":{"date":"December 20, 2019","title":"[백준 알고리즘] 3053번: 택시기하학","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"1993번: 분수찾기 접근 방법: 규칙을 찾아보려고 했는데 보니까 지그재그니까 홀수 행에서는 위로, 짝수행에서는 아래로 이동한다. 그리고 홀수 행에서는 분모가 1씩 늘어나고 분자가 1씩 줄어든다. 짝수 행에서는 분모가 1씩 줄어들고 분자가 1씩 늘어난다. 이 규칙을 수식화 하면 풀 수 있을 것 같다. 그리고 한번 이동할 때마다 열만큼 이동하면 된다. 주어…","fields":{"slug":"/Problem-Solving/2019-12-19-1993번-분수찾기/"},"frontmatter":{"date":"December 19, 2019","title":"[백준 알고리즘] 1993번: 분수찾기","category":"Problem-Solving","draft":false}}},{"node":{"excerpt":"2775번: 부녀회장이 될테야 접근 방법: 접근 방법 1: 규칙을 보아하니 팩토리얼로 푸는 것 같아서 각 층을 팩토리얼로 매핑을 해두고 나중에 다 더하려고 했는데 문제를 완전 잘못 이해하고 있었다.. 나는 B호의 이전까지의 모든 거주민의 합을 구하는 것인줄 알았는데, A-1층에서 B번째 방까지 있는 사람의 수를 합치는 것이었다..팩토리얼로 어떻게 해보려다…","fields":{"slug":"/Problem-Solving/2019-12-18-백준-2775번-부녀회장이-될테야/"},"frontmatter":{"date":"December 18, 2019","title":"[백준 알고리즘] 2775번: 부녀회장이 될테야","category":"Problem-Solving","draft":false}}}]}},"pageContext":{}},"staticQueryHashes":["2486386679","3128451518"]}